//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace Logistics_system.ServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceClient.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SearchMarketBykey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSearchMarketBykey(string Key, System.AsyncCallback callback, object asyncState);
        
        string EndSearchMarketBykey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SearchDetailsByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSearchDetailsByID(int ID, string flg, System.AsyncCallback callback, object asyncState);
        
        string EndSearchDetailsByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UppdateFinancial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUppdateFinancial(string data, System.AsyncCallback callback, object asyncState);
        
        string EndUppdateFinancial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Uppdateprodect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUppdateprodect(string data, System.AsyncCallback callback, object asyncState);
        
        string EndUppdateprodect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ImportInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginImportInfo(int ID, System.AsyncCallback callback, object asyncState);
        
        string EndImportInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/addData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginaddData(string type, string info, System.AsyncCallback callback, object asyncState);
        
        string EndaddData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SearchByCircle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSearchByCircle(double x, double y, double r, System.AsyncCallback callback, object asyncState);
        
        string EndSearchByCircle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UppDateOrderStatment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUppDateOrderStatment(int MarketID, string data, System.AsyncCallback callback, object asyncState);
        
        string EndUppDateOrderStatment(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : Logistics_system.ServiceClient.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMarketBykeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMarketBykeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchDetailsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchDetailsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UppdateFinancialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UppdateFinancialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UppdateprodectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UppdateprodectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchByCircleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchByCircleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UppDateOrderStatmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UppDateOrderStatmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<Logistics_system.ServiceClient.ServiceSoap>, Logistics_system.ServiceClient.ServiceSoap {
        
        private BeginOperationDelegate onBeginSearchMarketBykeyDelegate;
        
        private EndOperationDelegate onEndSearchMarketBykeyDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMarketBykeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchDetailsByIDDelegate;
        
        private EndOperationDelegate onEndSearchDetailsByIDDelegate;
        
        private System.Threading.SendOrPostCallback onSearchDetailsByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUppdateFinancialDelegate;
        
        private EndOperationDelegate onEndUppdateFinancialDelegate;
        
        private System.Threading.SendOrPostCallback onUppdateFinancialCompletedDelegate;
        
        private BeginOperationDelegate onBeginUppdateprodectDelegate;
        
        private EndOperationDelegate onEndUppdateprodectDelegate;
        
        private System.Threading.SendOrPostCallback onUppdateprodectCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportInfoDelegate;
        
        private EndOperationDelegate onEndImportInfoDelegate;
        
        private System.Threading.SendOrPostCallback onImportInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddDataDelegate;
        
        private EndOperationDelegate onEndaddDataDelegate;
        
        private System.Threading.SendOrPostCallback onaddDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchByCircleDelegate;
        
        private EndOperationDelegate onEndSearchByCircleDelegate;
        
        private System.Threading.SendOrPostCallback onSearchByCircleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUppDateOrderStatmentDelegate;
        
        private EndOperationDelegate onEndUppDateOrderStatmentDelegate;
        
        private System.Threading.SendOrPostCallback onUppDateOrderStatmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<SearchMarketBykeyCompletedEventArgs> SearchMarketBykeyCompleted;
        
        public event System.EventHandler<SearchDetailsByIDCompletedEventArgs> SearchDetailsByIDCompleted;
        
        public event System.EventHandler<UppdateFinancialCompletedEventArgs> UppdateFinancialCompleted;
        
        public event System.EventHandler<UppdateprodectCompletedEventArgs> UppdateprodectCompleted;
        
        public event System.EventHandler<ImportInfoCompletedEventArgs> ImportInfoCompleted;
        
        public event System.EventHandler<addDataCompletedEventArgs> addDataCompleted;
        
        public event System.EventHandler<SearchByCircleCompletedEventArgs> SearchByCircleCompleted;
        
        public event System.EventHandler<UppDateOrderStatmentCompletedEventArgs> UppDateOrderStatmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginSearchMarketBykey(string Key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMarketBykey(Key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndSearchMarketBykey(System.IAsyncResult result) {
            return base.Channel.EndSearchMarketBykey(result);
        }
        
        private System.IAsyncResult OnBeginSearchMarketBykey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Key = ((string)(inValues[0]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginSearchMarketBykey(Key, callback, asyncState);
        }
        
        private object[] OnEndSearchMarketBykey(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndSearchMarketBykey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMarketBykeyCompleted(object state) {
            if ((this.SearchMarketBykeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMarketBykeyCompleted(this, new SearchMarketBykeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMarketBykeyAsync(string Key) {
            this.SearchMarketBykeyAsync(Key, null);
        }
        
        public void SearchMarketBykeyAsync(string Key, object userState) {
            if ((this.onBeginSearchMarketBykeyDelegate == null)) {
                this.onBeginSearchMarketBykeyDelegate = new BeginOperationDelegate(this.OnBeginSearchMarketBykey);
            }
            if ((this.onEndSearchMarketBykeyDelegate == null)) {
                this.onEndSearchMarketBykeyDelegate = new EndOperationDelegate(this.OnEndSearchMarketBykey);
            }
            if ((this.onSearchMarketBykeyCompletedDelegate == null)) {
                this.onSearchMarketBykeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMarketBykeyCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMarketBykeyDelegate, new object[] {
                        Key}, this.onEndSearchMarketBykeyDelegate, this.onSearchMarketBykeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginSearchDetailsByID(int ID, string flg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchDetailsByID(ID, flg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndSearchDetailsByID(System.IAsyncResult result) {
            return base.Channel.EndSearchDetailsByID(result);
        }
        
        private System.IAsyncResult OnBeginSearchDetailsByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            string flg = ((string)(inValues[1]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginSearchDetailsByID(ID, flg, callback, asyncState);
        }
        
        private object[] OnEndSearchDetailsByID(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndSearchDetailsByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchDetailsByIDCompleted(object state) {
            if ((this.SearchDetailsByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchDetailsByIDCompleted(this, new SearchDetailsByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchDetailsByIDAsync(int ID, string flg) {
            this.SearchDetailsByIDAsync(ID, flg, null);
        }
        
        public void SearchDetailsByIDAsync(int ID, string flg, object userState) {
            if ((this.onBeginSearchDetailsByIDDelegate == null)) {
                this.onBeginSearchDetailsByIDDelegate = new BeginOperationDelegate(this.OnBeginSearchDetailsByID);
            }
            if ((this.onEndSearchDetailsByIDDelegate == null)) {
                this.onEndSearchDetailsByIDDelegate = new EndOperationDelegate(this.OnEndSearchDetailsByID);
            }
            if ((this.onSearchDetailsByIDCompletedDelegate == null)) {
                this.onSearchDetailsByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchDetailsByIDCompleted);
            }
            base.InvokeAsync(this.onBeginSearchDetailsByIDDelegate, new object[] {
                        ID,
                        flg}, this.onEndSearchDetailsByIDDelegate, this.onSearchDetailsByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginUppdateFinancial(string data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUppdateFinancial(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndUppdateFinancial(System.IAsyncResult result) {
            return base.Channel.EndUppdateFinancial(result);
        }
        
        private System.IAsyncResult OnBeginUppdateFinancial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string data = ((string)(inValues[0]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginUppdateFinancial(data, callback, asyncState);
        }
        
        private object[] OnEndUppdateFinancial(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndUppdateFinancial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUppdateFinancialCompleted(object state) {
            if ((this.UppdateFinancialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UppdateFinancialCompleted(this, new UppdateFinancialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UppdateFinancialAsync(string data) {
            this.UppdateFinancialAsync(data, null);
        }
        
        public void UppdateFinancialAsync(string data, object userState) {
            if ((this.onBeginUppdateFinancialDelegate == null)) {
                this.onBeginUppdateFinancialDelegate = new BeginOperationDelegate(this.OnBeginUppdateFinancial);
            }
            if ((this.onEndUppdateFinancialDelegate == null)) {
                this.onEndUppdateFinancialDelegate = new EndOperationDelegate(this.OnEndUppdateFinancial);
            }
            if ((this.onUppdateFinancialCompletedDelegate == null)) {
                this.onUppdateFinancialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUppdateFinancialCompleted);
            }
            base.InvokeAsync(this.onBeginUppdateFinancialDelegate, new object[] {
                        data}, this.onEndUppdateFinancialDelegate, this.onUppdateFinancialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginUppdateprodect(string data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUppdateprodect(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndUppdateprodect(System.IAsyncResult result) {
            return base.Channel.EndUppdateprodect(result);
        }
        
        private System.IAsyncResult OnBeginUppdateprodect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string data = ((string)(inValues[0]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginUppdateprodect(data, callback, asyncState);
        }
        
        private object[] OnEndUppdateprodect(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndUppdateprodect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUppdateprodectCompleted(object state) {
            if ((this.UppdateprodectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UppdateprodectCompleted(this, new UppdateprodectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UppdateprodectAsync(string data) {
            this.UppdateprodectAsync(data, null);
        }
        
        public void UppdateprodectAsync(string data, object userState) {
            if ((this.onBeginUppdateprodectDelegate == null)) {
                this.onBeginUppdateprodectDelegate = new BeginOperationDelegate(this.OnBeginUppdateprodect);
            }
            if ((this.onEndUppdateprodectDelegate == null)) {
                this.onEndUppdateprodectDelegate = new EndOperationDelegate(this.OnEndUppdateprodect);
            }
            if ((this.onUppdateprodectCompletedDelegate == null)) {
                this.onUppdateprodectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUppdateprodectCompleted);
            }
            base.InvokeAsync(this.onBeginUppdateprodectDelegate, new object[] {
                        data}, this.onEndUppdateprodectDelegate, this.onUppdateprodectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginImportInfo(int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportInfo(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndImportInfo(System.IAsyncResult result) {
            return base.Channel.EndImportInfo(result);
        }
        
        private System.IAsyncResult OnBeginImportInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginImportInfo(ID, callback, asyncState);
        }
        
        private object[] OnEndImportInfo(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndImportInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportInfoCompleted(object state) {
            if ((this.ImportInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportInfoCompleted(this, new ImportInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportInfoAsync(int ID) {
            this.ImportInfoAsync(ID, null);
        }
        
        public void ImportInfoAsync(int ID, object userState) {
            if ((this.onBeginImportInfoDelegate == null)) {
                this.onBeginImportInfoDelegate = new BeginOperationDelegate(this.OnBeginImportInfo);
            }
            if ((this.onEndImportInfoDelegate == null)) {
                this.onEndImportInfoDelegate = new EndOperationDelegate(this.OnEndImportInfo);
            }
            if ((this.onImportInfoCompletedDelegate == null)) {
                this.onImportInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportInfoCompleted);
            }
            base.InvokeAsync(this.onBeginImportInfoDelegate, new object[] {
                        ID}, this.onEndImportInfoDelegate, this.onImportInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginaddData(string type, string info, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddData(type, info, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndaddData(System.IAsyncResult result) {
            return base.Channel.EndaddData(result);
        }
        
        private System.IAsyncResult OnBeginaddData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            string info = ((string)(inValues[1]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginaddData(type, info, callback, asyncState);
        }
        
        private object[] OnEndaddData(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndaddData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddDataCompleted(object state) {
            if ((this.addDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addDataCompleted(this, new addDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addDataAsync(string type, string info) {
            this.addDataAsync(type, info, null);
        }
        
        public void addDataAsync(string type, string info, object userState) {
            if ((this.onBeginaddDataDelegate == null)) {
                this.onBeginaddDataDelegate = new BeginOperationDelegate(this.OnBeginaddData);
            }
            if ((this.onEndaddDataDelegate == null)) {
                this.onEndaddDataDelegate = new EndOperationDelegate(this.OnEndaddData);
            }
            if ((this.onaddDataCompletedDelegate == null)) {
                this.onaddDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddDataCompleted);
            }
            base.InvokeAsync(this.onBeginaddDataDelegate, new object[] {
                        type,
                        info}, this.onEndaddDataDelegate, this.onaddDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginSearchByCircle(double x, double y, double r, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchByCircle(x, y, r, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndSearchByCircle(System.IAsyncResult result) {
            return base.Channel.EndSearchByCircle(result);
        }
        
        private System.IAsyncResult OnBeginSearchByCircle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double x = ((double)(inValues[0]));
            double y = ((double)(inValues[1]));
            double r = ((double)(inValues[2]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginSearchByCircle(x, y, r, callback, asyncState);
        }
        
        private object[] OnEndSearchByCircle(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndSearchByCircle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchByCircleCompleted(object state) {
            if ((this.SearchByCircleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchByCircleCompleted(this, new SearchByCircleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchByCircleAsync(double x, double y, double r) {
            this.SearchByCircleAsync(x, y, r, null);
        }
        
        public void SearchByCircleAsync(double x, double y, double r, object userState) {
            if ((this.onBeginSearchByCircleDelegate == null)) {
                this.onBeginSearchByCircleDelegate = new BeginOperationDelegate(this.OnBeginSearchByCircle);
            }
            if ((this.onEndSearchByCircleDelegate == null)) {
                this.onEndSearchByCircleDelegate = new EndOperationDelegate(this.OnEndSearchByCircle);
            }
            if ((this.onSearchByCircleCompletedDelegate == null)) {
                this.onSearchByCircleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchByCircleCompleted);
            }
            base.InvokeAsync(this.onBeginSearchByCircleDelegate, new object[] {
                        x,
                        y,
                        r}, this.onEndSearchByCircleDelegate, this.onSearchByCircleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Logistics_system.ServiceClient.ServiceSoap.BeginUppDateOrderStatment(int MarketID, string data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUppDateOrderStatment(MarketID, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Logistics_system.ServiceClient.ServiceSoap.EndUppDateOrderStatment(System.IAsyncResult result) {
            return base.Channel.EndUppDateOrderStatment(result);
        }
        
        private System.IAsyncResult OnBeginUppDateOrderStatment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int MarketID = ((int)(inValues[0]));
            string data = ((string)(inValues[1]));
            return ((Logistics_system.ServiceClient.ServiceSoap)(this)).BeginUppDateOrderStatment(MarketID, data, callback, asyncState);
        }
        
        private object[] OnEndUppDateOrderStatment(System.IAsyncResult result) {
            string retVal = ((Logistics_system.ServiceClient.ServiceSoap)(this)).EndUppDateOrderStatment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUppDateOrderStatmentCompleted(object state) {
            if ((this.UppDateOrderStatmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UppDateOrderStatmentCompleted(this, new UppDateOrderStatmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UppDateOrderStatmentAsync(int MarketID, string data) {
            this.UppDateOrderStatmentAsync(MarketID, data, null);
        }
        
        public void UppDateOrderStatmentAsync(int MarketID, string data, object userState) {
            if ((this.onBeginUppDateOrderStatmentDelegate == null)) {
                this.onBeginUppDateOrderStatmentDelegate = new BeginOperationDelegate(this.OnBeginUppDateOrderStatment);
            }
            if ((this.onEndUppDateOrderStatmentDelegate == null)) {
                this.onEndUppDateOrderStatmentDelegate = new EndOperationDelegate(this.OnEndUppDateOrderStatment);
            }
            if ((this.onUppDateOrderStatmentCompletedDelegate == null)) {
                this.onUppDateOrderStatmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUppDateOrderStatmentCompleted);
            }
            base.InvokeAsync(this.onBeginUppDateOrderStatmentDelegate, new object[] {
                        MarketID,
                        data}, this.onEndUppDateOrderStatmentDelegate, this.onUppDateOrderStatmentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Logistics_system.ServiceClient.ServiceSoap CreateChannel() {
            return new ServiceSoapClientChannel(this);
        }
        
        private class ServiceSoapClientChannel : ChannelBase<Logistics_system.ServiceClient.ServiceSoap>, Logistics_system.ServiceClient.ServiceSoap {
            
            public ServiceSoapClientChannel(System.ServiceModel.ClientBase<Logistics_system.ServiceClient.ServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSearchMarketBykey(string Key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Key;
                System.IAsyncResult _result = base.BeginInvoke("SearchMarketBykey", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSearchMarketBykey(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SearchMarketBykey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchDetailsByID(int ID, string flg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ID;
                _args[1] = flg;
                System.IAsyncResult _result = base.BeginInvoke("SearchDetailsByID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSearchDetailsByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SearchDetailsByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUppdateFinancial(string data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("UppdateFinancial", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUppdateFinancial(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UppdateFinancial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUppdateprodect(string data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("Uppdateprodect", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUppdateprodect(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Uppdateprodect", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginImportInfo(int ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("ImportInfo", _args, callback, asyncState);
                return _result;
            }
            
            public string EndImportInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ImportInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddData(string type, string info, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = type;
                _args[1] = info;
                System.IAsyncResult _result = base.BeginInvoke("addData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndaddData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("addData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchByCircle(double x, double y, double r, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = x;
                _args[1] = y;
                _args[2] = r;
                System.IAsyncResult _result = base.BeginInvoke("SearchByCircle", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSearchByCircle(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SearchByCircle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUppDateOrderStatment(int MarketID, string data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = MarketID;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UppDateOrderStatment", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUppDateOrderStatment(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UppDateOrderStatment", _args, result)));
                return _result;
            }
        }
    }
}
