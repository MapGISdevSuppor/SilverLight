<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZDIMS1.0</name>
    </assembly>
    <members>
        <member name="T:ZDIMS.Util.CrossShape">
            <summary>
            绘制地图中心十字架（内部使用） 
            </summary>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.#ctor(System.Windows.Controls.Panel,System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="parent">父容器对象</param>
            <param name="lineLen">线长</param>
            <param name="thickness">线宽</param>
            <param name="alpha">透明度</param>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.Draw(System.Windows.Point)">
            <summary>
            绘制十字架
            </summary>
            <param name="cenPnt">中心点</param>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.Clear">
            <summary>
            清除绘制的十字架 
            </summary>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.Dispose(System.Boolean)">
            <summary>
            释放相关资源
            </summary>
            <param name="isDisposing">正在处理标志</param>
        </member>
        <member name="M:ZDIMS.Util.CrossShape.Dispose">
            <summary>
            释放绘制十字架的相关资源
            </summary>
        </member>
        <member name="P:ZDIMS.Util.CrossShape.LineColor">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:ZDIMS.Util.CrossShape.ZIndex">
            <summary>
            设置zIndex
            </summary>
        </member>
        <member name="T:ZDIMS.OtherMap.YahooTileLayer">
            <summary>
            Yahoo瓦片图层
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TileLayerBase">
            <summary>
            瓦片图层基类
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.ITile">
            <summary>
            瓦片地图图层接口
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.IMap">
            <summary>
            地图图层接口
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.Init">
            <summary>
            初始化地图图层 
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Interface.IMap.DrawToImage">
            <summary>
            将图层绘制成一张图片保存在Image控件中 
            </summary>
            <returns></returns>		
        </member>
        <member name="M:ZDIMS.Interface.IMap.DrawToBitmap">
            <summary>
            将图层绘制成一张图片保存在Bitmap中 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Interface.IMap.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下处理方法  
            </summary>
            <param name="e">提供事件数据</param>
        </member>
        <member name="M:ZDIMS.Interface.IMap.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动处理方法
            </summary>
            <param name="e">提供事件数据</param>
        </member>
        <member name="M:ZDIMS.Interface.IMap.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起处理方法
            </summary>
            <param name="e">提供事件数据</param>
        </member>
        <member name="M:ZDIMS.Interface.IMap.MapKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下处理方法
            </summary>
            <param name="e">提供事件数据</param>
        </member>
        <member name="M:ZDIMS.Interface.IMap.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起处理方法
            </summary>
            <param name="e">提供事件数据</param>
        </member>
        <member name="M:ZDIMS.Interface.IMap.ZoomIn">
            <summary>
            放大地图  
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.ZoomOut">
            <summary>
            缩小地图  
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.Restore">
            <summary>
            复位地图
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.Refresh">
            <summary>
            刷新地图
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMap.Clear">
            <summary>
            清除地图
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.EnableZoomAnimation">
            <summary>
            是否使用放缩动画 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.Display">
            <summary>
            获取或设置图层是否显示(为“false”时不会取图) 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.OrigDisplay">
            <summary>
            获取Display的原始赋值(未和Visibility相与的值)
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.MapViewBound">
            <summary>
            获取或设置地图当前显示范围(默认是IMSMap的范围)
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.LoadComplete">
            <summary>
            图层加载完毕标志 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.AutoGetMapInfo">
            <summary>
            获取或设置自动获取地图信息的标志位  
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMap.AddedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.ITile.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Interface.ITile.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Interface.ITile.Fill">
            <summary>
            填充地图
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.ITile.SetCenter(System.Double,System.Double,System.Int32)">
            <summary>
            移动地图至某处
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Interface.ITile.ZoomByPnt(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            将地图按指定坐标位置放缩
            </summary>
            <param name="logicPnt">放缩位置的的逻辑坐标</param>
            <param name="scrPnt">放缩位置的的窗口坐标</param>
            <param name="level">级数</param>
        </member>
        <member name="P:ZDIMS.Interface.ITile.ClientUID">
            <summary>
            获取客户端会话ID
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.EnableTileCache">
            <summary>
            获取是否允许使用缓存(默认为false) 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.IsDisTileNetErrInfo">
            <summary>
            是否显示瓦片图网络通信错误信息(默认显示) 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.CurMapLevel">
            <summary>
            获取当前级数
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.ViewBeginLevel">
            <summary>
            瓦片数据开始显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.ViewEndLevel">
            <summary>
            瓦片数据结束显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.ServerAddress">
            <summary>
            瓦片数据服务地址 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.EnableFillImg">
            <summary>
            是否允许填充瓦片数据 (为“false”时不会取图) 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.ITile.TileSize">
            <summary>
            瓦片尺寸
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_tileCache">
            <summary>
            瓦片图数据缓存管理
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.enableWebClientDownloadTile">
            <summary>
            是否使用"WebClient"类下载瓦片图（默认是“true”使用"WebClient"类下载，反之使用Image自身的方式下载）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.map">
            <summary>
            关联的地图容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_tileGrid">
            <summary>
            拼接瓦片的容器
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_mapViewBound">
            <summary>
            地图逻辑范围
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_viewBeginLevel">
            <summary>
            瓦片数据开始显示级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_viewEndLevel">
            <summary>
            瓦片数据结束显示级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_enableFillImg">
            <summary>
            是否允许填充瓦片数据
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_enableGPUMode">
            <summary>
            gpu加速标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_renderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_display">
            <summary>
            图层控件加载显示标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_serverAddress">
            <summary>
            瓦片数据所在服务地址
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_tileSize">
            <summary>
            瓦片尺寸
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_layerLeftTmp">
            <summary>
            保存图层移动之前的Left值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_layerTopTmp">
            <summary>
            保存图层移动之前的Top值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_autoGetMapInfo">
            <summary>
            自动获取地图逻辑范围的标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_curRowTileCount">
            <summary>
            当前客户端窗口范围内一行瓦片个数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_curCellTileCount">
            <summary>
            当前客户端窗口范围内一列瓦片个数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_rowTileCount">
            <summary>
            当前级数下一行的总瓦片数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_rowTileWidth">
            <summary>
            当前级数下总宽度
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_uriKind">
            <summary>
            取图服务地址类型
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_level">
            <summary>
            地图级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_layerId">
            <summary>
            图层唯一id
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.unfinishedTileCount">
            <summary>
            填充还未完成的瓦片个数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_curThreadSynContext">
            <summary>
            当前线程的同步上下文
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_enableZoomAnimation">
            <summary>
            是否在地图放缩时该图层使用动画
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_isDisTileNetErrInfo">
            <summary>
            是否显示瓦片图网络通信错误信息(默认显示) 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_enableTileCache">
            <summary>
            获取是否允许使用缓存(默认为false) 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerBase.m_isSuccGetInfo">
            <summary>
            自动获取信息是否成功
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.#ctor">
            <summary>
            瓦片图层基类构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Restore">
            <summary>
            复位地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Refresh">
            <summary>
            刷新地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Clear">
            <summary>
            清除地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.ZoomIn">
            <summary>
            放大地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.ZoomOut">
            <summary>
            缩小地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Fill">
            <summary>
            填充地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.SetCenter(System.Double,System.Double,System.Int32)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.ZoomByPnt(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            将地图按指定坐标位置放缩
            </summary>
            <param name="logicPnt">放缩位置的的逻辑坐标</param>
            <param name="scrPnt">放缩位置的的窗口坐标</param>
            <param name="level">级数</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.DrawToBitmap">
            <summary>
            将图层绘制成一张图片保存在Bitmap中 
            </summary>
            <returns>返回位图的属性提供源对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.DrawToImage">
            <summary>
            将图层绘制成一张图片保存在Image控件中 
            </summary>
            <returns>返回Image对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.MapKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.OnLoaded">
            <summary>
            控件加载完事件回调
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.CreatTileContainer">
            <summary>
            创建瓦片容器
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.CalculateFillTile">
            <summary>
            计算当前行和列所需瓦片个数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.FillTile">
            <summary>
            填充瓦片图 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.TableInsertUp">
            <summary>
            在瓦片容器表上边一行行的插入瓦片 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.TableInsertDown">
            <summary>
            在瓦片容器表下边一行行的插入瓦片 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.TableInsertLeft">
            <summary>
            在瓦片容器表左边一列列的填充瓦片 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerBase.TableInsertRight">
            <summary>
            在瓦片容器表右边一列列的填充瓦片 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase._tileContainer">
            <summary>
            瓦片容器对象
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.TileCache">
            <summary>
            瓦片图像缓存管理对象   
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.EnableTileCache">
            <summary>
            获取是否允许使用缓存(默认为false) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.IsDisTileNetErrInfo">
            <summary>
            是否显示瓦片图网络通信错误信息(默认显示) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.OrigDisplay">
            <summary>
            获取Display的原始赋值(未和Visibility相与的值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.EnableWebClientDownloadTile">
            <summary>
            是否使用"WebClient"类下载瓦片图（默认是“true”使用"WebClient"类下载，反之使用Image自身的方式下载）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.BlankImageSrc">
            <summary>
            空白瓦片处瓦片填充图片地址(请使用相对地址,默认为"/images/mapgis.jpg")
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.EnableZoomAnimation">
            <summary>
            是否在放缩地图时，克隆自身来实现动画效果 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.AddedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调方法
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.AutoGetMapInfo">
            <summary>
            获取或设置自动获取地图图层信息的标志位  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.RenderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.EnableGPUMode">
            <summary>
            是否开启GPU加速模式
            并且在页面要设置Silverlight插件参数允许开启GPU加速才能完全开启（param name="enableGPUAcceleration" value="true"）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.XMin">
            <summary>
            X轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.YMin">
            <summary>
            Y轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.XMax">
            <summary>
            X轴最大值(默认取容器的范围值)  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.YMax">
            <summary>
            Y轴最大值(默认取容器的范围值)  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.Display">
            <summary>
            获取或设置图层是否加载显示
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.MapViewBound">
            <summary>
            获取或设置地图当前显示范围(默认是IMSMap的范围)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.UnfinishedTileCount">
            <summary>
            填充还未完成的瓦片个数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.LoadComplete">
            <summary>
            获取图像加载标志 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.CurMapLevel">
            <summary>
            获取当前级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.ViewBeginLevel">
            <summary>
            瓦片数据开始显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.ViewEndLevel">
            <summary>
            瓦片数据结束显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.ServerAddress">
            <summary>
            瓦片数据服务地址 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.EnableFillImg">
            <summary>
            是否允许填充瓦片数据 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.TileSize">
            <summary>
            瓦片尺寸
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayerBase.ClientUID">
            <summary>
            表示该矢量图层的唯一id
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.YahooTileLayer.startDataLvl">
            <summary>
             MapGIS 瓦片数据第0级在Bing地图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.YahooTileLayer.originalRow">
            <summary>
            MapGIS 瓦片数据第0级在Bing地图的行号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.YahooTileLayer.originalColumn">
            <summary>
             MapGIS 瓦片数据第0级在Bing地图的列号
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.YahooTileLayer.#ctor">
            <summary>
            Yahoo瓦片图层构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.YahooTileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.YahooTileLayer.GetTitleUrl(System.Int32,System.Int32,System.Int32)">
            <summary>
             通过url获取Bing瓦片数据
            </summary>
            <param name="row">客户端传过来的行号</param>
            <param name="col">客户端传过来的列号</param>
            <param name="lvl">客户端传过来的级数</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.OtherMap.YahooTileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="P:ZDIMS.OtherMap.YahooTileLayer.StartDataLvl">
            <summary>
            设置或获取MapGIS 瓦片数据第0级在Bing地图的级数
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.YahooTileLayer.OriginalRow">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在Bing地图的行号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.YahooTileLayer.OriginalColumn">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在Bing地图的列号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.YahooTileLayer.ServerAddress">
            <summary>
            Yahoo瓦片数据服务地址 例如“http://img.ditu.aliyun.com/get_png?”
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.IMark">
            <summary>
            标注接口
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMark.RevisedPosition(System.Boolean,System.Boolean)">
            <summary>
            修正位置（只在坐标系是逻辑坐标时有效）
            </summary>
            <param name="isZoom">是否是放缩时修正位置</param>
            <param name="enableMarkHiden">是否允许判断并隐藏不在可视范围的标注</param>
        </member>
        <member name="M:ZDIMS.Interface.IMark.Flicker(System.Int32,System.Int32)">
            <summary>
            闪烁图形
            </summary>
            <param name="timeSpan">时间间隔(毫秒单位)</param>
            <param name="num">闪烁次数(如果传入“-1”将一直闪烁，传入“0”停止闪烁)</param>
        </member>
        <member name="M:ZDIMS.Interface.IMark.FlickerStop">
            <summary>
            停止闪烁
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IMark.Dispose">
            <summary>
            释放相关资源
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.OffsetX">
            <summary>
            定位时需要偏移的x轴像素
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.OffsetY">
            <summary>
            定位时需要偏移的y轴像素
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.Left">
            <summary>
            在相对于标注图层左距位置(标注隐藏时，该属性值无效)
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.Top">
            <summary>
            在相对于标注图层上距位置(标注隐藏时，该属性值无效)
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.X">
            <summary>
            x坐标位置
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.Y">
            <summary>
            y坐标位置
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.IsInMapViewBound">
            <summary>
             获取该标注是否在可视范围内
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.TargetMark">
            <summary>
            关联的目标标注（一般用于聚合标注）
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.Tag">
            <summary>
            关联目标对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.EnableDrag">
            <summary>
            是否允许拖拽标注
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.MarkLayer">
            <summary>
            标注图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.EnableRevisedPos">
            <summary>
            是否允许在地图变化时修正标注（注意：只在坐标系为逻辑坐标系时生效，默认允许）
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.MarkControl">
            <summary>
            要显示的标注点元素对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.Visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IMark.CoordinateType">
            <summary>
            设置坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）
            </summary>
        </member>
        <member name="T:ZDIMS.Util.IMSOperType">
            <summary>
            当前地图操作类型
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.None">
            <summary>
            没有任何操作 
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.ZoomIn">
            <summary>
            放大操作
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.ZoomOut">
            <summary>
            缩小操作
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.Drag">
            <summary>
            拖动操作
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.Restore">
            <summary>
            复位
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.Refresh">
            <summary>
            刷新
            </summary>
        </member>
        <member name="F:ZDIMS.Util.IMSOperType.Drawing">
            <summary>
            绘图
            </summary>
        </member>
        <member name="T:ZDIMS.Util.GifAnimation">
            <summary>
            gif图片解析类
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.STATUS_OK">
            <summary>
             File read status: No errors.| 文件读取无错误
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.STATUS_FORMAT_ERROR">
            <summary>
            File read status: Error decoding file (may be partially decoded) | 解码时出现错误
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.STATUS_OPEN_ERROR">
            <summary>
            File read status: Unable to open source. | 文件打开出错
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.width">
            <summary>
            图片宽/full image width
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.height">
            <summary>
            图片高/full image height
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.gctFlag">
            <summary>
            global color table used | 应用全局色彩表
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.gctSize">
            <summary>
            size of global color table | 全局色彩表大小
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.loopCount">
            <summary>
            循环次数 | iterations; 0 = repeat forever
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.gct">
            <summary>
            global color table | 全局色彩表
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.lct">
            <summary>
            local color table  | 局部色彩表
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.act">
            <summary>
            active color table | 当前色彩表
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.bgIndex">
            <summary>
            background color index | 背景色索引
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.bgColor">
            <summary>
            background color | 背景色
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.lastBgColor">
            <summary>
             previous bg color | 上一背景色 
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.pixelAspect">
            <summary>
            pixel aspect ratio
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.lctFlag">
            <summary>
            local color table flag | 局部色彩标识
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.interlace">
            <summary>
            interlace flag | 交错显示标识
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.lctSize">
            <summary>
            local color table size | 局部色彩表大小
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.ix">
            <summary>
            层图片信息
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.iy">
            <summary>
            层图片信息
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.iw">
            <summary>
            层图片信息
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.ih">
            <summary>
            层图片信息
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.image">
            <summary>
            current frame | 当前针
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.lastImage">
            <summary>
            previous frame | 前一针
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.block">
            <summary>
            current data block | 当前信息区
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.blockSize">
            <summary>
            block size | 信息区大小
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.MaxStackSize">
            <summary>
            max decoder pixel stack size | 编码块最大长度
            </summary>
        </member>
        <member name="F:ZDIMS.Util.GifAnimation.frames">
            <summary>
            frames read from current file | 图片针信息
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetDelay(System.Int32)">
            <summary>
            Gets display duration for specified frame.
            </summary>
            <param name="n">index of frame</param>
            <returns>delay in milliseconds </returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetFrameCount">
            <summary>
            Gets the number of frames read from file.
            </summary>
            <returns>frame count</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetImage">
            <summary>
            Gets the first (or only) image read.
            </summary>
            <returns>BufferedWriteableBitmap containing first frame, or null if none.</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetLoopCount">
            <summary>
            Gets the "Netscape" iteration count, if any.
            A count of 0 means repeat indefinitiely.
            </summary>
            <returns>iteration count if one was specified, else 1.</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetPixels(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates new frame image from current data(and previous frames as specified by their disposition codes).
            </summary>
            <param name="bitmap">frame image</param>
            <returns>frame data</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.SetPixels">
            <summary>
            Set current frame data in current frame image 
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetFrame(System.Int32)">
            <summary>
            Gets the image contents of frame n.
            </summary>
            <param name="n">frame count</param>
            <returns> BufferedWriteableBitmap representation of frame, or null if n is invalid.</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.Read(System.IO.Stream,System.Boolean)">
            <summary>
            Reads GIF image from stream
            </summary>
            <param name="inStream">Stream containing GIF file.</param>
            <param name="isDispose">释放资源标志</param>
            <returns>read status code (0 = no errors)</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.DecodeImageData">
            <summary>
            Decodes LZW image data into pixel array.
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.Error">
            <summary>
            Returns true if an error was encountered during reading/decoding
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.Init">
            <summary>
             Initializes or re-initializes reader
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.Read">
            <summary>
            Reads a single byte from the input stream.
            </summary>
            <returns>a single byte</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadBlock">
            <summary>
            Reads next variable length block from input.
            </summary>
            <returns> number of bytes stored in "buffer"</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadColorTable(System.Int32)">
            <summary>
            Reads color table as 256 RGB integer values
            </summary>
            <param name="ncolors">ncolors int number of colors to read</param>
            <returns>int array containing 256 colors (packed ARGB with full alpha)</returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadContents">
            <summary>
             Main file parser.  Reads GIF content blocks.
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadGraphicControlExt">
            <summary>
            Reads Graphics Control Extension values
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadHeader">
            <summary>
            Reads GIF file header information.
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadImage">
            <summary>
            Reads next frame image
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadLSD">
            <summary>
            Reads Logical Screen Descriptor
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadNetscapeExt">
            <summary>
            Reads Netscape extenstion to obtain iteration count
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ReadShort">
            <summary>
            Reads next 16-bit value, LSB first
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.ResetFrame">
            <summary>
            Resets frame state for reading next image.
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.Skip">
            <summary>
            Skips variable length blocks up to and including next zero length block.
            </summary>
        </member>
        <member name="M:ZDIMS.Util.GifAnimation.GetImgType(System.IO.Stream)">
            <summary>
            判断数据的类型
            </summary>
            <param name="data">二进制数据</param>
            <returns>文件类型</returns>
        </member>
        <member name="T:ZDIMS.Util.GifAnimation.ColorTable">
            <summary>
            Translate Color to Color Detail
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.IMSPolymericMark">
            <summary>
            多重聚合标注
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.MarkBase">
            <summary>
            标注基类
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_markLayer">
            <summary>
            标注图层对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_markControl">
            <summary>
            要显示的标注点控件对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_x">
            <summary>
            x坐标位置
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_y">
            <summary>
            y坐标位置
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_mapContainer">
            <summary>
            地图容器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_coordinateType">
            <summary>
            绘图坐标类型
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_flickerTimer">
            <summary>
            闪烁图形计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_flickerNum">
            <summary>
            闪烁总次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_curFlickerCount">
            <summary>
            当前闪烁次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_enableRevisedPos">
            <summary>
            是否允许在地图变化时修正标注（注意：只在坐标系为逻辑坐标系时生效，默认允许）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_enableDrag">
            <summary>
            是否允许拖拽标志
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_isMouseDown">
            <summary>
            鼠标按下标志
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_mouseDownPnt">
            <summary>
            鼠标按下点坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_tmpLeft">
            <summary>
            标注位置值
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_tmpTop">
            <summary>
            标注位置值
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_startDragFlg">
            <summary>
            开始拖拽回调标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkBase.m_visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.#ctor(System.Windows.FrameworkElement,ZDIMS.Interface.CoordinateType,ZDIMS.Drawing.MarkLayer)">
            <summary>
            构造函数
            </summary>
            <param name="markControl">要显示的标注点控件对象</param>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
            <param name="mLayer">标注图层对象，为“null”时会内部自动获取</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.Flicker(System.Int32,System.Int32)">
            <summary>
            闪烁图形
            </summary>
            <param name="timeSpan">时间间隔(毫秒单位)</param>
            <param name="num">闪烁次数(如果传入“-1”将一直闪烁，传入“0”停止闪烁)</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.FlickerStop">
            <summary>
            停止闪烁
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.RevisedPosition(System.Boolean,System.Boolean)">
            <summary>
            修正位置（只在坐标系是逻辑坐标时有效）
            </summary>
            <param name="isZoom">是否是放缩时修正位置</param>
            <param name="enableMarkHiden">是否允许判断并隐藏不在可视范围的标注</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完毕
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键按下事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移动事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.OnMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键弹起事件回调
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkBase.FlickerTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            闪烁回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.FlickerOverCallback">
            <summary>
            图形闪烁完毕回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.MarkDragOverCallback">
            <summary>
            图形拖拽完毕回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.MarkDragStartCallback">
            <summary>
            图形拖拽完毕回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.MarkReviseOverCallback">
            <summary>
            图形拖拽完毕回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.OffsetX">
            <summary>
            定位时需要偏移的x轴像素
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.OffsetY">
            <summary>
            定位时需要偏移的y轴像素
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.Left">
            <summary>
            在相对于标注图层左距位置(标注隐藏时，该属性值无效)
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.Top">
            <summary>
            在相对于标注图层上距位置(标注隐藏时，该属性值无效)
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.X">
            <summary>
            x轴坐标位置
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.Y">
            <summary>
            y轴坐标位置
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.EnableDrag">
            <summary>
            是否允许拖拽标注
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.IsInMapViewBound">
            <summary>
             获取该标注是否在可视范围内
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.MarkControl">
            <summary>
            标注点控件对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.Visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.MarkLayer">
            <summary>
            标注图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.EnableRevisedPos">
            <summary>
            是否允许在地图变化时修正标注（注意：只在坐标系为逻辑坐标系时生效，默认允许）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.CoordinateType">
            <summary>
            设置坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.TargetMark">
            <summary>
            关联的目标标注（一般用于聚合标注）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkBase.Tag">
            <summary>
            关联目标对象
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.IPolymericMark">
            <summary>
            聚合标注接口
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IPolymericMark.AddMark(ZDIMS.Interface.IMark)">
            <summary>
            添加要聚合标注
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IPolymericMark.RemoveMark(ZDIMS.Interface.IMark)">
            <summary>
            删除要聚合标注
            </summary>
            <param name="mark">要删除标注对象</param>
            <returns>删除成功返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Interface.IPolymericMark.RemoveAll">
            <summary>
            删除所有聚合标注
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IPolymericMark.MarkList">
            <summary>
            获取聚合标注列表
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.DefaultRadius">
            <summary>
            默认半径
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.DefaultRepeatCount">
            <summary>
            默认旋转计数器次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.PolymericMarkNum">
            <summary>
            聚合mark个数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_markList">
            <summary>
            聚合mark数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_textBlock">
            <summary>
            中心mark数字文本显示对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_radius">
            <summary>
            旋转半径
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_angle">
            <summary>
            旋转角度
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_timer">
            <summary>
            旋转计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_repeatCount">
            <summary>
            旋转计数器执行总次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_currentCount">
            <summary>
            当前旋转计数器执行次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_ellipse">
            <summary>
            中心mark
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_len">
            <summary>
            所有mark周长
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_offsetSpeed">
            <summary>
            偏移速度
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_startAngleArr">
            <summary>
            旋转起始时角度
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_endAngleArr">
            <summary>
            旋转结束时角度
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_currentRadius">
            <summary>
            当前展开mark半径
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_isOpen">
            <summary>
            mark展开或关闭标志
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_lineArr">
            <summary>
            打开mark时的连接线数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_closeTimer">
            <summary>
            关闭mark的延时计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_openTimer">
            <summary>
            展开mark的延时计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_storyboard">
            <summary>
            中心mark边框变化的动画控制 对象
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.#ctor(ZDIMS.Interface.CoordinateType,ZDIMS.Drawing.MarkLayer)">
            <summary>
            构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
            <param name="mLayer">标注图层对象，为“null”时会内部自动获取</param>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/IMSPolymericMark_Demo.rar">IMSPolymericMark_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Dispose">
            <summary>
            释放相关资源
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.AddMark(ZDIMS.Interface.IMark)">
            <summary>
            添加要聚合标注
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.RemoveMark(ZDIMS.Interface.IMark)">
            <summary>
            删除要聚合标注
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.RemoveAll">
            <summary>
            删除所有聚合标注
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSPolymericMark.m_closeStop">
            <summary>
            关闭标注计数器停止标志位
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.OnMouseLeave1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标从Mark上移开事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.OnMouseEnter1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移上Mark事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.OnMouseLeave2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标从线上移开事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.OnMouseEnter2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移上线事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Open">
            <summary>
            打开聚合标注
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Close">
            <summary>
            关闭聚合标注
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Open_Tick(System.Object,System.EventArgs)">
            <summary>
            延时展开
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Close_Tick(System.Object,System.EventArgs)">
            <summary>
            延时关闭计数器回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Rotation_Tick(System.Object,System.EventArgs)">
            <summary>
            旋转计数器响应事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolymericMark.Init">
            <summary>
            复位状态
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSPolymericMark.MarkList">
            <summary>
            聚合标注列表
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TileLayerEx">
            <summary>
            扩展瓦片图层，支持所有HDF瓦片显示 
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TileLayer">
            <summary>
            瓦片图层
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_tileCountArr">
            <summary>
            指定HDF文件中每级瓦片总数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_dataBeginLevel">
            <summary>
            瓦片数据开始裁剪级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_dataEndLevel">
            <summary>
            瓦片数据结束裁剪级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_dataVersion">
            <summary>
            瓦片数据版本
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_hdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.m_bigImgSize">
            <summary>
            裁剪大图大小（优化级别：高为4096，中为2048，低为1024）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.distributedTileList">
            <summary>
            分布式瓦片集合
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayer.IndexOffset">
            <summary>
            瓦片偏移量（一般不需要设置该值，设置dataVersion属性时此属性会自动进行设置） 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.#ctor">
            <summary>
            瓦片图层构造函数
            </summary>
            <example>
            该示例显示怎样使用该控件
            <code>
            <!--<my:IMSMap Name="iMSMap1"
                XMinMap="114.125686114315" XMaxMap="114.500788705197" LevelNum="7" YMaxMap="30.7085740673183" YMinMap="30.4582609083728">
                <my:TileLayer HdfName="wh.hdf"Name="tileLayer1" ServerAddress="http://127.0.0.1/RelayHandlerSite/RelayHandler.ashx" />
            </my:IMSMap>-->
            </code>
            </example>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.AddDistributedTile(ZDIMS.Map.DTLayerConfig)">
            <summary>
            添加分布式瓦片
            </summary>
            <param name="distributedTile">布式瓦片信息</param>
            <example>
            该示例显示怎样使用该方法
            <code>
                DTLayerConfig dt = new DTLayerConfig()
                {
                    HdfName = "whSmall.HDF",
                    MapViewBound = new RectBound(114.219461762036, 30.5285926441632, 114.407013057477, 30.7161439396042),
                    DataVersion = 2,
                    BigImgSize=2048,
                    LevelStartInMap=1,
                    DataBeginLevel=3,
                    ViewBeginLevel=3,
                    ViewEndLevel=7,
                    ServerAddress = "http://127.0.0.1/RelayHandlerSite/RelayHandler.ashx"
                };
                m_tileLayer1.AddDistributedTile(dt);
            </code>
            </example>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.RemoveDistributedTile(ZDIMS.Map.DTLayerConfig)">
            <summary>
            移除分布式瓦片
            </summary>
            <param name="distributedTile">布式瓦片信息</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.RemoveAll">
            <summary>
            移除所有分布式瓦片
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.AutoGetMapInfo_DownloadStringCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            自动取图层信息回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件源数据</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.CalculateIndex(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            老版本HDF索引计算
            </summary>
            <param name="iStartLvl">起始级数</param>
            <param name="rowNo">行号</param>
            <param name="lineNo">列号</param>
            <param name="level">级数</param>
            <returns>HDF索引</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.LookForPageID(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            新版本（2.0） HDF索引计算
            </summary>
            <param name="iPower">级数</param>
            <param name="row">行号</param>
            <param name="col">列号</param>
            <param name="lbigsize">大图尺寸</param>
            <param name="iPageWidth">瓦片尺寸</param>
            <returns>HDF索引</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayer.Update_m_count(System.Int32)">
            <summary>
            更新m_count数组
            </summary>
            <param name="lvl">级数</param>
        </member>
        <member name="E:ZDIMS.Map.TileLayer.AutoGetMapInfoOverEvent">
            <summary>
            自动获取地图参数完成事件
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.DistributedTileList">
            <summary>
            子瓦片数据库（用于分布式显示瓦片数据） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.HdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.BigImgSize">
            <summary>
            裁剪大图大小（优化级别：高为4096，中为2048，低为1024）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.DataBeginLevel">
            <summary>
            瓦片数据开始裁剪级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.DataEndLevel">
            <summary>
            瓦片数据结束裁剪级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileLayer.DataVersion">
            <summary>
            瓦片数据版本（由文件系统转成的瓦片数据版本为0，裁图时采用了优化策略的瓦片数据为2，其它为1）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.m_isNewHDF">
            <summary>
            是否是新版本HDF标志 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.m_mapServiceInfo">
            <summary>
            地图信息 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.m_tileSpanWithin">
            <summary>
            瓦片的行列范围 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.Units">
            <summary>
            单位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.OriginX">
            <summary>
            原点x轴坐标 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileLayerEx.OriginY">
            <summary>
            原点y轴坐标 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.SetCenter(System.Double,System.Double,System.Int32)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.ZoomByPnt(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            将地图按指定坐标位置放缩
            </summary>
            <param name="logicPnt">放缩位置的的逻辑坐标</param>
            <param name="scrPnt">放缩位置的的窗口坐标</param>
            <param name="level">级数</param>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.GetTileSpanWithin(System.Int32)">
            <summary>
            根据级数获取瓦片范围 
            </summary>
            <param name="level">级数</param>
            <returns>瓦片行列范围</returns>
        </member>
        <member name="M:ZDIMS.Map.TileLayerEx.AutoGetMapInfo_DownloadStringCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            自动取图层信息回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件源数据</param>
        </member>
        <member name="E:ZDIMS.Map.TileLayerEx.AutoGetMapInfoOverEvent">
            <summary>
            自动获取地图参数完成事件
            </summary>
        </member>
        <member name="T:ZDIMS.Map.DynamicDTLayerConfig">
            <summary>
            动态裁图瓦片图层 
            </summary>
        </member>
        <member name="T:ZDIMS.Map.DTLayerConfig">
            <summary>
            分布式瓦片图层信息
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_mapViewBound">
            <summary>
            地图逻辑范围	
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_dataBeginLevel">
            <summary>
            瓦片数据开始裁剪级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_dataEndLevel">
            <summary>
            瓦片数据结束裁剪级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_viewBeginLevel">
            <summary>
            瓦片数据开始显示级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_viewEndLevel">
            <summary>
            瓦片数据结束显示级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_dataVersion">
            <summary>
            瓦片数据版本
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_serverAddress">
            <summary>
            瓦片数据库所在服务器地址
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_uriKind">
            <summary>
            取图服务地址类型
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_hdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_bigImgSize">
            <summary>
            裁剪大图大小（优化级别：高为4096，中为2048，低为1024）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_logicXlength">
            <summary>
            地图X轴长度
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_logicYlength">
            <summary>
            地图Y轴长度
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_levelStartInMap">
            <summary>
            分布式的瓦片HDF在主图中开始的裁剪级数(小图中第0级相当于主图的第几级,两者级数的差值)
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_layerId">
            <summary>
            唯一id
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_autoGetMapInfo">
            <summary>
            设置自动获取地图信息的标志位(默认值为“true”,允许自动取范围) 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.m_indexOffset">
            <summary>
            瓦片偏移量（一般不需要设置该值，设置dataVersion属性时此属性会自动进行设置） 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DTLayerConfig.EnableDispaly">
            <summary>
            是否允许显示该分布式瓦片图(默认值为“true”,允许加载显示)  
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DTLayerConfig.#ctor">
            <summary>
            分布式瓦片图层信息构造函数
            </summary>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/DTLayerConfig_Demo.rar">DTLayerConfig_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Map.DTLayerConfig.DTLayerConfig_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完毕事件回调
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DTLayerConfig.InitPara">
            <summary>
            重新初始化范围
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DTLayerConfig.AutoGetMapInfo_DownloadStringCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            自动取图层信息回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件源数据</param>
        </member>
        <member name="E:ZDIMS.Map.DTLayerConfig.AutoGetMapInfoOverCallback">
            <summary>
            自动获取地图参数完成事件
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.TileLayer">
            <summary>
            获取瓦片图层对象（中地hdf存储方式瓦片） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.IndexOffset">
            <summary>
            瓦片偏移量（一般不需要设置该值，设置dataVersion属性时此属性会自动进行设置） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.AutoGetMapInfo">
            <summary>
            设置自动获取地图信息的标志位(默认值为“true”,允许自动取范围) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.LogicXlength">
            <summary>
            地图X轴长度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.LogicYlength">
            <summary>
            地图Y轴长度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.LevelStartInMap">
            <summary>
            分布式的瓦片HDF在主图中开始的裁剪级数(小图中第0级相当于主图的第几级,两者级数的差值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.HdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.BigImgSize">
            <summary>
            裁剪大图大小（优化级别：高为4096，中为2048，低为1024）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.XMin">
            <summary>
            X轴最小值
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.YMin">
            <summary>
            Y轴最小值
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.XMax">
            <summary>
            X轴最大值  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.YMax">
            <summary>
            Y轴最大值  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.MapViewBound">
            <summary>
            设置显示范围
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.DataBeginLevel">
            <summary>
            瓦片数据开始裁剪级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.DataEndLevel">
            <summary>
            瓦片数据结束裁剪级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.ViewBeginLevel">
            <summary>
            瓦片数据开始显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.ViewEndLevel">
            <summary>
            瓦片数据结束显示级数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.ServerAddress">
            <summary>
            瓦片数据服务地址 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.ServerAddressUriKind">
            <summary>
            服务器地址类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DTLayerConfig.DataVersion">
            <summary>
            瓦片数据版本（由文件系统转成的瓦片数据版本为0，裁图时采用了优化策略的瓦片数据为2，其它为1）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DynamicDTLayerConfig.m_tileImgFormat">
            <summary>
            瓦片图格式 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DynamicDTLayerConfig.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DynamicDTLayerConfig.DTLayerConfig_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完毕事件回调
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.IndexOffset">
            <summary>
            该属性已经失效,请不要使用
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.DataBeginLevel">
            <summary>
            该属性已经失效,请不要使用
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.DataEndLevel">
            <summary>
            该属性已经失效,请不要使用
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.DataVersion">
            <summary>
            该属性已经失效,请不要使用
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.AutoGetMapInfo">
            <summary>
            该属性已经失效,请不要使用
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.EnableRealTimeUpdate">
            <summary>
            是否允许实时更新瓦片（默认值为“false”）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicDTLayerConfig.TileImgFormat">
            <summary>
            瓦片图格式 
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.IMSRectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.GraphicsBase">
            <summary>
            绘图基类
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.IGraphics">
            <summary>
            图形接口
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.Draw">
            <summary>
            绘制图形(设置完值后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形
            </summary>
            <param name="pntArr">点数组</param>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.Flicker(System.Int32,System.Int32)">
            <summary>
            闪烁图形
            </summary>
            <param name="timeSpan">时间间隔(毫秒单位)</param>
            <param name="num">闪烁次数(如果传入“-1”将一直闪烁，传入“0”停止闪烁)</param>
        </member>
        <member name="M:ZDIMS.Interface.IGraphics.FlickerStop">
            <summary>
            停止闪烁
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.GraphicsLayer">
            <summary>
            绘图图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.Style">
            <summary>
            图形样式
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.Shape">
            <summary>
            图形对象
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.Visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.EnableEdit">
            <summary>
            编辑图形标志位
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.EnableReDraw">
            <summary>
            是否允许在地图变化时重绘图形（注意：只在坐标系为逻辑坐标系时生效，默认允许重绘）
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.StrokeThickness">
            <summary>
            外边框厚度
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.Stroke">
            <summary>
            外边框绘制方式（主要是颜色、透明度、渐变等）
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IGraphics.CoordinateType">
            <summary>
            设置坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_mapContainer">
            <summary>
            地图容器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_coordinateType">
            <summary>
            绘图坐标类型
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_imsShape">
            <summary>
            绘图对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_flickerTimer">
            <summary>
            闪烁图形计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_flickerNum">
            <summary>
            闪烁总次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_curFlickerCount">
            <summary>
            当前闪烁次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_graphicsLayer">
            <summary>
            绘图图层对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_enableReDraw">
            <summary>
            是否允许在地图变化时重绘图形（默认允许重绘）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_drawFlg">
            <summary>
            初始绘图标志
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_enableEdit">
            <summary>
            编辑图形标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_editMark1">
            <summary>
            编辑位置的mark数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_editMark2">
            <summary>
            增加点的mark数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_isMouseDown">
            <summary>
            鼠标按下标志
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_tmpLeft">
            <summary>
            mark位置值
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_tmpTop">
            <summary>
            mark位置值
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_mouseDownPnt">
            <summary>
            鼠标按下点坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_mouseDownShape">
            <summary>
            鼠标按下mark对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_curEditMarkIndex">
            <summary>
            当前编辑的点，在数组中的索引
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_enableEditMark2">
            <summary>
            是否允许使用第二种类型(圆形的)编辑mark（默认是“true”）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsBase.m_editRadius">
            <summary>
            编辑mark半径大小（默认值为'5'个像素大小）
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Flicker(System.Int32,System.Int32)">
            <summary>
            闪烁图形
            </summary>
            <param name="timeSpan">时间间隔(毫秒单位)</param>
            <param name="num">闪烁次数(如果传入“-1”将一直闪烁，传入“0”停止闪烁)</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.FlickerStop">
            <summary>
            停止闪烁
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Draw">
            <summary>
            绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.FlickerTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            闪烁回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            绘图对象添加到绘图图层后事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.DelEditMark">
            <summary>
            删除编辑的mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.DelEditMark1">
            <summary>
            删除第一种编辑的mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.DelEditMark2">
            <summary>
            删除第二种编辑的mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.CreatEditMark1">
            <summary>
            创建编辑的Mark1
            </summary>
            <returns>返回编辑标记对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.CreatEditMark2">
            <summary>
            创建编辑的Mark2
            </summary>
            <returns>返回编辑标记对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.GetEditMark1ByIndex(System.Int32)">
            <summary>
            根据索引获取Mark1的对象
            </summary>
            <param name="index">索引</param>
            <returns>返回编辑标记对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.GetEditMark2ByIndex(System.Int32)">
            <summary>
            根据索引获取Mark2的对象
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseLeftButtonDown1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseLeftButtonDown2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseMove2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark2上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsBase.Edit_MouseLeftButtonUp2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.FlickerOverCallback">
            <summary>
            图形闪烁完毕回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark1DragInCallback">
            <summary>
            拖拽mark1(方形的mark)时回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark1DragOverCallback">
            <summary>
            拖拽mark1(方形的mark)结束时回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark2DragInCallback">
            <summary>
            拖拽mark2(圆形的mark)时回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark2DragOverCallback">
            <summary>
            拖拽mark2(圆形的mark)结束时回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditRadius">
            <summary>
            编辑mark半径大小（默认值为'5'个像素大小）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EnableEditMark2">
            <summary>
            是否允许使用第二种类型(圆形的)编辑mark（默认是“true”）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark1List">
            <summary>
            第一种类型(方形的)编辑mark数组
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EditMark2List">
            <summary>
            第二种类型(圆形的)编辑mark数组
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.GraphicsLayer">
            <summary>
            绘图图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EnableReDraw">
            <summary>
            是否允许在地图变化时重绘图形（注意：只在坐标系为逻辑坐标系时生效，默认允许重绘）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.Shape">
            <summary>
            图形对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.Style">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.StrokeThickness">
            <summary>
            线的厚度
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.Stroke">
            <summary>
            线的绘制方式（主要是颜色、透明度、渐变等）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.Visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.CoordinateType">
            <summary>
            设置坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsBase.EnableEdit">
            <summary>
            编辑图形标志位
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Draw">
            <summary>
            绘制图形(设置完起点和终点坐标后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形(数组长度应该为2，第一个为起点坐标、第二个为终点坐标)
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.UpdateEditMark">
            <summary>
            更新编辑mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseLeftButtonDown1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseLeftButtonDown2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseMove2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark2上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSRectangle.Edit_MouseLeftButtonUp2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Drawing.IMSRectangle.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSRectangle.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSRectangle.StartPoint">
            <summary>
            起始点坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSRectangle.EndPoint">
            <summary>
            结束点坐标
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.IMSPolygon">
            <summary>
            多边形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Draw">
            <summary>
            绘制图形(点数组后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.CreatEditMark1">
            <summary>
            创建编辑的Mark1
            </summary>
            <returns>返回编辑标记对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.UpdateEditMark(System.Windows.Shapes.Polygon,System.Int32)">
            <summary>
            更新编辑mark
            </summary>
            <param name="polygon">多边形对象</param>
            <param name="i">mark索引</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Edit_MouseLeftButtonDown2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Edit_MouseMove2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark2上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.Edit_MouseLeftButtonUp2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.DelPnt_ContextMenuItem(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键删除点
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolygon.DelMark1ByIndex(System.Int32)">
            <summary>
            根据索引删除第一种标注 
            </summary>
            <param name="idx">索引</param>
        </member>
        <member name="P:ZDIMS.Drawing.IMSPolygon.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSPolygon.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.None">
            <summary>
            不绘制
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Point">
            <summary>
            点
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Beeline">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Polyline">
            <summary>
            折线
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Rectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.DrawingType.Polygon">
            <summary>
            多边形
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TiledMapService.ArcTileContainer">
            <summary>
            扩展的瓦片容器 
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TileContainer">
            <summary>
            装载瓦片的容器控件
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileContainer.m_rowCount">
            <summary>
            行数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileContainer.m_cellCount">
            <summary>
            列数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileContainer.m_tileArr">
            <summary>
            瓦片数组
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TileContainer.m_tileLayerBase">
            <summary>
            瓦片图层对象
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.#ctor(ZDIMS.Map.TileLayerBase)">
            <summary>
            构造函数
            </summary>
            <param name="tileLayerBase">瓦片图层对象</param>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.GetTileImg(System.Int32,System.Double,System.Double)">
            <summary>
            获取瓦片图对象
            </summary>
            <param name="idx">索引</param>
            <param name="left">x轴位置</param>
            <param name="top">y轴位置</param>
            <returns>Image对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.FillTiles(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            重新填充所有瓦片
            </summary>
            <param name="rowCount">行数</param>
            <param name="cellCount">列数</param>
            <param name="level">地图级数</param>
            <param name="firstTileRowNo">第一个瓦片行号</param>
            <param name="firstTileCellNo">第一个瓦片列号</param>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.Clear">
            <summary>
            清除所有瓦片
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.InsertUpRow">
            <summary>
            在第一行插入一行
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.InsertDownRow">
            <summary>
            在最后一行插入一行
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.InsertLeftCell">
            <summary>
            在第0列插入一列
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileContainer.InsertRightCell">
            <summary>
            在最后一列插入一列
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileContainer.TileLayerBase">
            <summary>
            瓦片图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TileContainer.Item(System.Int32,System.Int32)">
            <summary>
            根据行列号获取瓦片
            </summary>
            <param name="rIndex">行号</param>
            <param name="cIndex">列号</param>
            <returns>瓦片对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.ArcTileContainer.#ctor(ZDIMS.Map.TileLayerBase)">
            <summary>
            构造方法
            </summary>
            <param name="tileLayerBase">瓦片图层对象</param>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.ArcTileContainer.FillTiles(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            重新填充所有瓦片
            </summary>
            <param name="rowCount">行数</param>
            <param name="cellCount">列数</param>
            <param name="level">地图级数</param>
            <param name="firstTileRowNo">第一个瓦片行号</param>
            <param name="firstTileCellNo">第一个瓦片列号</param>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.ArcTileContainer.InsertUpRow">
            <summary>
            在第一行插入一行
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.ArcTileContainer.InsertDownRow">
            <summary>
            在最后一行插入一行
            </summary>
        </member>
        <member name="T:ZDIMS.Util.RectBound">
            <summary>
            矩形范围
            </summary>
        </member>
        <member name="M:ZDIMS.Util.RectBound.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="xMin">x最小值</param>
            <param name="yMin">y最小值</param>
            <param name="xMax">x最大值</param>
            <param name="yMax">y最大值</param>
        </member>
        <member name="M:ZDIMS.Util.RectBound.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.RectBound.Contains(System.Double,System.Double)">
            <summary>
            判断一个点是否在该矩形范围内
            </summary>
            <param name="x">x轴坐标</param>
            <param name="y">y轴坐标</param>
            <returns>在该范围内返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Util.RectBound.Contains(System.Windows.Point)">
            <summary>
            判断一个点是否在该矩形范围内
            </summary>
            <param name="pnt">点</param>
            <returns>在该范围内返回“true”，否则返回“false”</returns>
        </member>
        <member name="P:ZDIMS.Util.RectBound.XMin">
            <summary>
            x最小值
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.YMin">
            <summary>
            y最小值
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.XMax">
            <summary>
            x最大值
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.YMax">
            <summary>
            y最大值
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.CenX">
            <summary>
            获取x中心值 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.CenY">
            <summary>
            获取y中心值 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectBound.IsLawfulMapBound">
            <summary>
            判断范围是否合法
            </summary>
        </member>
        <member name="T:ZDIMS.Map.TiledMapService.TileSpanWithin">
            <summary>
            瓦片行列范围  
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TileSpanWithin.StartCol">
            <summary>
            起始列 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TileSpanWithin.StartRow">
            <summary>
            起始行 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TileSpanWithin.EndCol">
            <summary>
            末尾列 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TileSpanWithin.EndRow">
            <summary>
            末尾行 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TileSpanWithin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造方法 
            </summary>
            <param name="startCol">起始列 </param>
            <param name="startRow">起始行 </param>
            <param name="endCol">末尾列 </param>
            <param name="endRow">末尾行 </param>
        </member>
        <member name="T:ZDIMS.Drawing.IMSPolyline">
            <summary>
            折线
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Draw">
            <summary>
            绘制图形(点数组后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.CreatEditMark1">
            <summary>
            创建编辑的Mark1
            </summary>
            <returns>返回编辑标记对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.UpdateEditMark(System.Windows.Shapes.Polyline,System.Int32)">
            <summary>
            更新编辑mark
            </summary>
            <param name="polyline">Polyline对象</param>
            <param name="i">mark索引</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Edit_MouseLeftButtonDown2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Edit_MouseMove2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark2上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.Edit_MouseLeftButtonUp2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.DelPnt_ContextMenuItem(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键删除点
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSPolyline.DelMark1ByIndex(System.Int32)">
            <summary>
            根据索引删除第一种标注 
            </summary>
            <param name="idx">索引</param>
        </member>
        <member name="P:ZDIMS.Drawing.IMSPolyline.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSPolyline.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="T:ZDIMS.OtherMap.GoogleTileLayer">
            <summary>
            google 瓦片图层类
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.GoogleTileLayer.startDataLvl">
            <summary>
             MapGIS 瓦片数据第0级在Google地图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.GoogleTileLayer.originalRow">
            <summary>
            MapGIS 瓦片数据第0级在Google地图的行号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.GoogleTileLayer.originalColumn">
            <summary>
             MapGIS 瓦片数据第0级在google地图的列号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.GoogleTileLayer.glLayerType">
            <summary>
            Google图层的类型: 基本地图、地形图、影像图、道路网和地名数据 ,默认情况为基本地图
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.GoogleTileLayer.googleDataSvr">
            <summary>
            Google数据服务器地址
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.#ctor">
            <summary>
            在构造函数中实现:将四种类型地图的取图URL保存到变量googleDataSvr中
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.GetTitleUrl(System.Int32,System.Int32,System.Int32)">
            <summary>
             通过url获取google瓦片数据
            </summary>
            <param name="row">客户端传过来的行号</param>
            <param name="col">客户端传过来的列号</param>
            <param name="lvl">客户端传过来的级数</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.GetResolution(System.Int32,System.Int32)">
            <summary>
            获取指定级数下一个像素代表的实际长度 
            </summary>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>一个像素代表的实际长度</returns>	    
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.GetScale(System.Int32,System.Int32)">
            <summary>
            计算指定级数下一个长度单位代表的像素个数 
            </summary>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>一个像素代表的实际长度  </returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.GetTileBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据行列号获取该瓦片Web墨卡托坐标系的范围
            </summary>
            <param name="col">列号</param>
            <param name="row">行号</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>范围</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.GetTileLatLonBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据行列号获取该瓦片经纬度坐标系的范围
            </summary>
            <param name="col">列号</param>
            <param name="row">行号</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>范围</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.LonLatToTile(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            获取经纬度坐标所在瓦片行列值
            </summary>
            <param name="lon">经度</param>
            <param name="lat">纬度</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后行列值</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.MercatorToTile(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            获取Web墨卡托坐标所在瓦片行列值 
            </summary>
            <param name="mx">x轴坐标</param>
            <param name="my">y轴坐标</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后行列值</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.PixelsToTile(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            获取地图像素坐标所在瓦片行列值
            </summary>
            <param name="px">x轴坐标</param>
            <param name="py">y轴坐标</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后行列值</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.PixelsToMercator(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            指定级数下地图像素坐标转Web墨卡托坐标 
            </summary>
            <param name="px">x轴坐标</param>
            <param name="py">y轴坐标</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后坐标</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.MercatorToPixels(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Web墨卡托坐标转指定级数下地图像素坐标 
            </summary>
            <param name="mx">x轴坐标</param>
            <param name="my">x轴坐标</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后坐标</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.LonLatToMercator(System.Double,System.Double)">
            <summary>
            经纬度坐标转Web墨卡托坐标 
            </summary>
            <param name="lon">经度</param>
            <param name="lat">纬度</param>
            <returns>转换后坐标</returns>	
        </member>
        <member name="M:ZDIMS.OtherMap.GoogleTileLayer.MercatorToLatLon(System.Double,System.Double)">
            <summary>
            Web墨卡托坐标转经纬度坐标
            </summary>
            <param name="mx">x轴坐标</param>
            <param name="my">y轴坐标</param>
            <returns>转换后坐标</returns>
        </member>
        <member name="P:ZDIMS.OtherMap.GoogleTileLayer.StartDataLvl">
            <summary>
            设置或获取MapGIS 瓦片数据第0级在Google地图的级数
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.GoogleTileLayer.OriginalRow">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在Google地图的行号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.GoogleTileLayer.OriginalColumn">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在google地图的列号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.GoogleTileLayer.GlLayerType">
            <summary>
            设置或获取google地图的类型
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.GoogleTileLayer.ServerAddress">
            <summary>
            Google Map瓦片数据服务地址 
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.ManuallyAddMarkDelegate">
            <summary>
            手动添加mark回调委托
            </summary>
            <param name="markLayer">标注图层对象</param>
            <param name="mark">添加标注的对象</param>
            <param name="logicPnt">标志的逻辑坐标位置</param>
        </member>
        <member name="T:ZDIMS.Drawing.MarkLayer">
            <summary>
            标注图层
            </summary>
        </member>
        <member name="T:ZDIMS.Map.CustomLayerBase">
            <summary>
            自定义图层基类
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.ICustom">
            <summary>
            扩展自定义图层接口 
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.ICustom.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至某处
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="P:ZDIMS.Interface.ICustom.ChildrenCount">
            <summary>
            图层子元素个数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.map">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_mapViewBound">
            <summary>
            地图逻辑范围
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_display">
            <summary>
            图层控件加载显示标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_loadComplete">
            <summary>
            地图是否显示完毕
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_enableZoomAnimation">
            <summary>
            是否在地图放缩时该图层使用动画
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_autoGetMapInfo">
            <summary>
            自动获取地图逻辑范围的标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_enableGPUMode">
            <summary>
            gpu加速开关
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_renderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_addedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_layerLeftTmp">
            <summary>
            保存图层Left缓冲
            </summary>
        </member>
        <member name="F:ZDIMS.Map.CustomLayerBase.m_layerTopTmp">
            <summary>
            保存图层Top缓冲
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.#ctor">
            <summary>
            自定义图层基类构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Restore">
            <summary>
            复位地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Refresh">
            <summary>
            刷新图层
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Clear">
            <summary>
            清除地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.ZoomIn">
            <summary>
            放大地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.ZoomOut">
            <summary>
            缩小地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Fill">
            <summary>
            填充地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.MapKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.DrawToBitmap">
            <summary>
            将图层绘制成一张图片保存在Bitmap中 
            </summary>
            <returns>返回位图的属性提供源对象</returns>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.DrawToImage">
            <summary>
            将图层绘制成一张图片保存在Image控件中 
            </summary>
            <returns>Image对象</returns>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.OnLoaded">
            <summary>
            控件加载完事件回调
            </summary>
        </member>
        <member name="M:ZDIMS.Map.CustomLayerBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.OrigDisplay">
            <summary>
            获取Display的原始赋值(未和Visibility相与的值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.ChildrenCount">
            <summary>
            图层子元素个数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.XMin">
            <summary>
            X轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.YMin">
            <summary>
            Y轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.XMax">
            <summary>
            X轴最大值(默认取容器的范围值) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.YMax">
            <summary>
            Y轴最大值(默认取容器的范围值)  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.Display">
            <summary>
            获取或设置图层是否加载显示
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.RenderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.EnableGPUMode">
            <summary>
            是否开启GPU加速模式
            并且在页面要设置Silverlight插件参数允许开启GPU加速才能完全开启（param name="enableGPUAcceleration" value="true"）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.MapViewBound">
            <summary>
            获取或设置地图当前显示范围(默认是IMSMap的范围)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.LoadComplete">
            <summary>
            获取图像加载标志 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.AutoGetMapInfo">
            <summary>
            获取或设置自动获取地图图层信息的标志位  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.AddedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调方法
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.EnableZoomAnimation">
            <summary>
            是否使用放缩动画 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.CustomLayerBase.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.ManuallyAddMarkOverCallback">
            <summary>
            手动添加标注完毕回调
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_syncContext1">
            <summary>
            放缩地图后使用的上下文管理（用于跨线程访问UI）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_syncContext2">
            <summary>
            移动地图结束时使用的上下文管理（用于跨线程访问UI）
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_zThreadId">
            <summary>
            放缩修正标注线程ID
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_mThreadId">
            <summary>
            移动修正标注线程ID
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_markArr">
            <summary>
            图层中标注管理列表
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_maxMarkNumSyncRevised">
            <summary>
            同步修正标注的最大数，超过该值将开启线程异步修正，默认该值是2000
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_maxShowScale">
            <summary>
            最大显示比例
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_minShowScale">
            <summary>
            最小显示比例
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_enablePolymericMark">
            <summary>
            是否使用聚合mark标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_polymericMarkList">
            <summary>
            聚合标注管理列表
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.MarkLayer.m_manuallyAddMarkObj">
            <summary>
            手动添加标注的对象
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.#ctor">
            <summary>
            构造函数
            </summary>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/MarkLayer_Demo.rar">MarkLayer_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.AddMark(ZDIMS.Interface.IMark)">
            <summary>
            添加标注到图层
            </summary>
            <param name="mark">标注对象</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.AddMarkAt(ZDIMS.Interface.IMark,System.Int32)">
            <summary>
            添加标注到图层
            </summary>
            <param name="mark">标注对象</param>
            <param name="zIndex">显示的顺序</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.RemoveMark(ZDIMS.Interface.IMark)">
            <summary>
            移除mark
            </summary>
            <param name="mark">标注对象</param>
            <returns>成功返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.RemoveAll">
            <summary>
            移除所有mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.GetMarkByIndex(System.Int32)">
            <summary>
            根据索引获取Mark对象
            </summary>
            <param name="index">在图层中的索引</param>
            <returns>Mark对象,没有返回null</returns>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.Contains(ZDIMS.Interface.IMark)">
            <summary>
            是否包含特定mark对象
            </summary>
            <param name="mark">mark对象</param>
            <returns>包含返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>该图层的副本对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.Refresh">
            <summary>
            刷新图层
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.InitPolymericMark">
            <summary>
            初始化聚合mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.MergeMark">
            <summary>
            检测是否需要合并mark
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.InitMergeMark(System.Double)">
            <summary>
            初始化时合并mark
            </summary>
            <param name="r">合并判断的半径</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.ZoomOutMergeMark(System.Double)">
            <summary>
            缩小时合并mark
            </summary>
            <param name="r">合并判断的半径</param>
        </member>
        <member name="M:ZDIMS.Drawing.MarkLayer.ZoomInMergeMark(System.Double)">
            <summary>
            放大时合并mark
            </summary>
            <param name="r">合并判断的半径</param>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.MarkList">
            <summary>
            图层中标注管理列表
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.ManuallyAddMarkObj">
            <summary>
            手动添加标注的对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.MergeRadius">
            <summary>
            聚合判断的半径，单位是像素单位，默认值是65
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.EnablePolymericMark">
            <summary>
            是否使用聚合标注功能
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.EnableMarkHiden">
            <summary>
            是否允许判断并隐藏不在可视范围的标注
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.MaxShowScale">
            <summary>
            设置标注图层最大显示时的比例（注意：当存在瓦片图层时，显示比例等效于级数，当前级数小于等于该值时显示）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.MinShowScale">
            <summary>
            设置标注图层最小显示时的比例（注意：当存在瓦片图层时，显示比例等效于级数，当前级数大于等于该值时显示）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.MaxMarkNumSyncRevised">
            <summary>
            同步修正标注的最大数，超过该值将开启线程异步修正，默认该值是2000
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.EnableGPUMode">
            <summary>
            是否开启GPU加速模式
            并且在页面要设置Silverlight插件参数允许开启GPU加速才能完全开启（param name="enableGPUAcceleration" value="true"）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.Children">
            <summary>
            孩子节点属性（该属性已禁用!）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.MarkLayer.ChildrenCount">
            <summary>
            标注总个数
            </summary>
        </member>
        <member name="T:ZDIMS.Map.EnumImgType">
            <summary>
            图片的类型
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EnumImgType.Jpg">
            <summary>
            jpg
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EnumImgType.Gif">
            <summary>
            gif
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EnumImgType.Png">
            <summary>
            png
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EnumImgType.Bmp">
            <summary>
            bmp
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EnumImgType.Unkonw">
            <summary>
            非图片文件
            </summary>
        </member>
        <member name="T:ZDIMS.Map.AutoGetMapInfoOverDelegate">
            <summary>
            分布式瓦片自动取其配置信息的回调方法委托
            </summary>
            <param name="dtLayerConfig">DTLayerConfig对象</param>
        </member>
        <member name="T:ZDIMS.Map.VectorLayerBase">
            <summary>
            矢量图层基类
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.IVector">
            <summary>
            矢量地图图层接口
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IVector.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Interface.IVector.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Interface.IVector.GetImage(ZDIMS.Util.RectBound,System.Double,System.Double)">
            <summary>
            根据范围和图像高宽生成图像
            </summary>
            <param name="rectView">矩形范围</param>
            <param name="width">图像宽（像素）</param>
            <param name="height">图像高（像素）</param>
        </member>
        <member name="M:ZDIMS.Interface.IVector.Fill">
            <summary>
            填充地图
            </summary>
        </member>
        <member name="M:ZDIMS.Interface.IVector.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至某处
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Interface.IVector.Call(System.Object,System.String,System.Net.UploadStringCompletedEventHandler,System.Boolean)">
            <summary>
            向GIS服务器发送请求 
            </summary>
            <param name="sendObj">要发送的对象</param>
            <param name="methodName">GIS服务器中方法名称</param>
            <param name="callback">回调处理函数</param>
            <param name="dispatchReqEvent">是否派发请求事件</param>
        </member>
        <member name="P:ZDIMS.Interface.IVector.ClientUID">
            <summary>
            获取客户端会话ID
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IVector.ServiceType">
            <summary>
            获取数据服务类型
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IVector.MinShowScale">
            <summary>
            获取或设置最小显示比例（窗口/逻辑） 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IVector.MaxShowScale">
            <summary>
            获取或设置最大显示比例（窗口/逻辑） 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IVector.EnableFillImg">
            <summary>
            是否允许填充地图图片(为“false”时不会取图) 
            </summary>
        </member>
        <member name="P:ZDIMS.Interface.IVector.ServerAddress">
            <summary>
            获取或设置服务器地址 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.map">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_image">
            <summary>
            图形对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_mapViewBound">
            <summary>
            地图逻辑范围
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_loadSucc">
            <summary>
            加载是否成功
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_layerLeftTmp">
            <summary>
            保存图层Left缓冲
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_layerTopTmp">
            <summary>
            保存图层Top缓冲
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_loadComplete">
            <summary>
            数据是否加载完标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_clientUID">
            <summary>
            图层唯一id
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_maxShowScale">
            <summary>
            最大显示比列
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_minShowScale">
            <summary>
            最小显示比例
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_serverAddress">
            <summary>
            矢量图服务地址
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_display">
            <summary>
            图层控件加载显示标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_autoGetMapInfo">
            <summary>
            自动获取地图逻辑范围的标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_imgFormat">
            <summary>
            地图图片格式
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_enableFillImg">
            <summary>
            是否允许填充地图图片
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_enableGPUMode">
            <summary>
            gpu加速开关
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_renderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_activeLayerIndex">
            <summary>
            激活图层索引
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_addedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_compareRectOnly">
            <summary>
            查询操作是否只比较要素的外包矩形框
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_mustInside">
            <summary>
            查询时是否查询完全在目的范围里的要素
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_nearDistanse">
            <summary>
            查询半径
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayerBase.m_enableZoomAnimation">
            <summary>
            是否在地图放缩时该图层使用动画
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.#ctor">
            <summary>
            矢量图层基类构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Restore">
            <summary>
            复位地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Refresh">
            <summary>
            刷新地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Clear">
            <summary>
            清除地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.ZoomIn">
            <summary>
            放大地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.ZoomOut">
            <summary>
            缩小地图  （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Fill">
            <summary>
            填充地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.GetImage(ZDIMS.Util.RectBound,System.Double,System.Double)">
            <summary>
            根据范围和图像高宽生成图像
            </summary>
            <param name="rectView">矩形范围</param>
            <param name="width">图像宽（像素）</param>
            <param name="height">图像高（像素）</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.DrawToBitmap">
            <summary>
            将图层绘制成一张图片保存在Bitmap中 
            </summary>
            <returns>返回位图的属性提供源对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.DrawToImage">
            <summary>
            将图层绘制成一张图片保存在Image控件中 
            </summary>
            <returns>返回Image对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.MapKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.CheckBound(ZDIMS.Util.RectBound)">
            <summary>
            判断目标范围是否应该显示
            </summary>
            <param name="rectView">矩形范围</param>
            <returns>在矩形范围内返回“true”。否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.OnLoaded">
            <summary>
            控件加载完事件回调
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.SerilizeClassToXML(System.Object)">
            <summary>
            将对象序列化成XML
            </summary>
            <param name="obj">对象</param>
            <returns>返回XML</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.DeSerilizeXMLToClass(System.String,System.Type)">
            <summary>
            将XML序列化成对象
            </summary>
            <param name="xml">XML</param>
            <param name="type">类型</param>
            <returns>返回对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.GetObject(System.Net.UploadStringCompletedEventArgs,System.Type)">
            <summary>
            解析服务器请求结果
            </summary>
            <param name="e">请求事件</param>
            <param name="t">结果对象类型</param>
            <returns>服务器返回结果对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Call(System.Object,System.String,System.Net.UploadStringCompletedEventHandler,System.Boolean)">
            <summary>
            向服务器发送请求 
            </summary>
            <param name="sendObj">要发送的对象</param>
            <param name="methodName">GIS服务器中方法名称</param>
            <param name="callback">回调处理函数</param>
            <param name="dispatchReqEvent">是否派发请求事件</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.OnInnerGetMap(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取图层图像操作 处理函数 （该方法一般内部自动加载，一般不对外使用 ）
            </summary>
            <param name="obj">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.SetBusyCursor">
            <summary>
            设置鼠标忙 
            </summary>	    
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.RemoveBusyCursor(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            解除鼠标忙状态 
            </summary>    
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Dispatcher_LayerOpenSuccEvent">
            <summary>
            派发图层打开事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Dispatcher_AutoGetMapInfoOverEvent">
            <summary>
            派发图层信息获取事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Dispatcher_IMSRequestBegin(ZDIMS.Map.VectorLayerBase,System.Object,System.String)">
            <summary>
            向服务器发送请求之前
            </summary>
            <param name="vectorObj">矢量图层对象</param>
            <param name="sendObj">发送的内容对象</param>
            <param name="methodName">调用的方法名称</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Dispatcher_IMSRequestEnd(ZDIMS.Map.VectorLayerBase,System.Object,System.String)">
            <summary>
            向服务器发送请求之前之后
            </summary>
            <param name="vectorObj">矢量图层对象</param>
            <param name="sendObj">发送的内容对象</param>
            <param name="methodName">调用的方法名称</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayerBase.Dispatcher_IMSRequestComplete(ZDIMS.Map.VectorLayerBase,System.Object,System.String)">
            <summary>
            请求处理完成并得到结果
            </summary>
            <param name="vectorObj">矢量图层对象</param>
            <param name="sendObj">发送的内容对象</param>
            <param name="methodName">调用的方法名称</param>
        </member>
        <member name="E:ZDIMS.Map.VectorLayerBase.LayerOpenSuccEvent">
            <summary>
            图层打开成功事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.VectorLayerBase.AutoGetMapInfoOverEvent">
            <summary>
            自动获取地图参数完成事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.VectorLayerBase.IMSRequestBegin">
            <summary>
            向服务器发送请求之前
            </summary>
        </member>
        <member name="E:ZDIMS.Map.VectorLayerBase.IMSRequestEnd">
            <summary>
            向服务器发送请求之前之后
            </summary>
        </member>
        <member name="E:ZDIMS.Map.VectorLayerBase.IMSRequestComplete">
            <summary>
            请求处理完成并得到结果
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.IsClearOnZoomBefore">
            <summary>
            是否在放缩地图之前清除地图(默认为“false”，不清除) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.OrigDisplay">
            <summary>
            获取Display的原始赋值(未和Visibility相与的值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.EnableZoomAnimation">
            <summary>
            是否在放缩地图时，克隆自身来实现动画效果
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.NearDistanse">
            <summary>
            查询半径
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.MustInside">
            <summary>
            查询时是否查询完全在目的范围里的要素
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.CompareRectOnly">
            <summary>
            查询操作是否只比较要素的外包矩形框
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.ActiveLayerIndex">
            <summary>
            当前激活图层的索引
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.EnableFillImg">
            <summary>
            是否允许填充地图图片 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.ClientUID">
            <summary>
            表示该矢量图层的唯一id
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.RenderAtScale">
            <summary>
            指明将对象呈现为已缓存位图时所使用的缩放比例。如果您将其指定为负数，则会引发错误。默认值为1。
            注意：RenderAtScale越小CPU消耗越少，内存占用越少，即性能越好！另外，RenderAtScale在介于0到1之间时，位图呈现为模糊状态。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.EnableGPUMode">
            <summary>
            是否开启GPU加速模式
            并且在页面要设置Silverlight插件参数允许开启GPU加速才能完全开启（param name="enableGPUAcceleration" value="true"）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.ImgFormat">
            <summary>
            地图图片格式
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.ServiceType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.MinShowScale">
            <summary>
            最小显示比例
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.MaxShowScale">
            <summary>
            最大显示比例
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.XMin">
            <summary>
            X轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.YMin">
            <summary>
            Y轴最小值(默认取容器的范围值)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.XMax">
            <summary>
            X轴最大值(默认取容器的范围值)  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.YMax">
            <summary>
            Y轴最大值(默认取容器的范围值)  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.Display">
            <summary>
            获取或设置图层是否加载显示
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.ServerAddress">
            <summary>
            矢量数据服务地址 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.MapViewBound">
            <summary>
            获取或设置地图当前显示范围(默认是IMSMap的范围)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.LoadComplete">
            <summary>
            数据是否加载完标志 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.AutoGetMapInfo">
            <summary>
            获取或设置自动获取地图图层信息的标志位  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.AddedToMapContainerCallback">
            <summary>
            图层添加到地图容器回调方法
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayerBase.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.CoordinateType">
            <summary>
            坐标类型
            </summary>
        </member>
        <member name="F:ZDIMS.Interface.CoordinateType.Logic">
            <summary>
            逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Interface.CoordinateType.Screen">
            <summary>
            屏幕坐标
            </summary>
        </member>
        <member name="T:ZDIMS.Util.ZDIMSProgressBar">
            <summary>
            加载进度条
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_progressBar">
            <summary>
            进度条控件对象
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_text">
            <summary>
            文本信息控件
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_grid">
            <summary>
            整体布局Grid控件对象
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_percentInfo">
            <summary>
            百分比信息显示控件
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_visibility">
            <summary>
            隐藏或者显示属性
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_updateTimer">
            <summary>
            更新进度计数器
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ZDIMSProgressBar.m_closeTimer">
            <summary>
            超时关闭计数器
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSProgressBar.Hide">
            <summary>
            立即隐藏
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSProgressBar.#ctor">
            <summary>
            加载进度条提示
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSProgressBar.OnTick(System.Object,System.EventArgs)">
            <summary>
            超时关闭进度条计数器回调
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSProgressBar.UpdateTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            更新进度计数器回调
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.ProgressBarMode">
            <summary>
            进度条显示模式
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Text">
            <summary>
            显示的文本信息
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Maximum">
            <summary>
            获取或设置范围元素的最大可能的值（默认100）
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Minimum">
            <summary>
            获取或设置范围元素的最小可能的值（默认0）
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Value">
            <summary>
            获取或设置范围控件的当前设置，这可能是强制的。
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:ZDIMS.Util.ZDIMSProgressBar.Visibility">
            <summary>
            设置是否可见
            </summary>
        </member>
        <member name="T:ZDIMS.Util.ProgressBarMode">
            <summary>
            进度条模式
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ProgressBarMode.Repeat">
            <summary>
            重复的动画条
            </summary>
        </member>
        <member name="F:ZDIMS.Util.ProgressBarMode.Increase">
            <summary>
            按Value值增加的动画
            </summary>
        </member>
        <member name="T:ZDIMS.Util.SpacialAnalyse">
            <summary>
             空间分析类,提供裁剪分析、叠加分析等空间分析功能。
            </summary>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.#ctor(ZDIMS.Map.VectorLayerBase)">
            <summary>
            空间分析类,该类必须与矢量图层控件绑定才能使用。
            </summary>
            <param name="vectorLayer">空间分析功能关联的矢量图层控件,如VectorLayer或VectorMapDoc</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.ClipByPolygon(ZDIMS.BaseLib.CClipByPolygon,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            多边形裁剪
            </summary>
            <param name="obj">多边形裁剪参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnClipByPolygon(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取ClipByPolygon操作结果
            </summary>
            <param name="e">ClipByPolygon操作完成事件</param>
            <returns>ClipByPolygon操作的唯一ID</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.GetAnalyseResult(System.String,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某次空间分析操作进度情况
            </summary>
            <param name="uid">空间分析操作的唯一ID</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnGetAnalyseResult(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取空间分析操作生成的结果图层名
            </summary>
            <param name="e">GetAnalyseResult操作完成事件</param>
            <returns>空间分析生成的结果图层名。 ""代表分析操作还未完成，"*#*"代表操作失败</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.NetAnalyse(ZDIMS.BaseLib.CNetAnalyse,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            网络分析
            </summary>
            <param name="obj">网络分析参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnNetAnalyse(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取NetAnalyse操作结果
            </summary>
            <param name="e">NetAnalyse操作完成事件</param>
            <returns>网络分析(NetAnalyse)结果</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.ProjectDots(ZDIMS.BaseLib.CProjectDots,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            坐标转换
            </summary>
            <param name="obj">坐标序列及投影转换参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnProjectDots(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取坐标点投影结果
            </summary>
            <param name="e">ProjectDots操作完成事件</param>
            <returns>坐标点投影(ProjectDots)结果</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.PntRegRelationAnalyse(ZDIMS.BaseLib.CPntRegRelationAnalyse,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            点与区拓扑关系判断
            </summary>
            <param name="obj">点和区对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.LinRegRelationAnalyse(ZDIMS.BaseLib.CLinRegRelationAnalyse,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            线和区拓扑关系判断
            </summary>
            <param name="obj">要分析的线对象与区对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.RegionRelationAnalyse(ZDIMS.BaseLib.CRegionRelationAnalyse,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            区拓扑关系判断
            </summary>
            <param name="obj">要分析的两个区对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnPntRegRelationAnalyse(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取点和区拓扑分析结果
            </summary>
            <param name="e">PntRegRelationAnalyse操作完成事件</param>
            <returns>点和区拓扑关系</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnLinRegRelationAnalyse(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取线和区拓扑分析结果
            </summary>
            <param name="e">LinRegRelationAnalyse操作完成事件</param>
            <returns>线和区拓扑关系</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnRegionRelationAnalyse(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取区和区拓扑分析结果
            </summary>
            <param name="e">RegionRelationAnalyse操作完成事件</param>
            <returns>区和区拓扑关系</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.GetGdbServerList(System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取GDB数据源列表
            </summary>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnGetGdbServerList(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            GetGdbServerList操作结果
            </summary>
            <param name="e">GetGdbServerList操作完成事件</param>
            <returns>GDB数据源列表</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.GetGdbList(ZDIMS.BaseLib.CGetGdbList,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个数据源下的GDB列表
            </summary>
            <param name="obj">GDB所属的数据源信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnGetGdbList(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            GetGdbList操作结果(GDB数据源下的GDB列表)
            </summary>
            <param name="e">GetGdbList操作完成事件</param>
            <returns>GDB数据源下的GDB列表</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.GetXClsList(ZDIMS.BaseLib.CGetXClsList,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个GDB下的某种类型的图层
            </summary>
            <param name="obj">GDB数据源等信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnGetXClsList(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            GetXClsList操作结果(某个GDB下的某种类型的图层)
            </summary>
            <param name="e">GetXClsList操作完成事件</param>
            <returns>GDB下的某种类型的图层</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OverlayByLayer(ZDIMS.BaseLib.COverlayByLayer,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            两个图层叠加分析
            </summary>
            <param name="obj">图层信息及叠加分析参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnOverlayByLayer(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取OverlayByLayer操作结果
            </summary>
            <param name="e">OverlayByLayer操作完成事件</param>
            <returns>OverlayByLayer操作的唯一ID</returns>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.BufferByGeometry(ZDIMS.BaseLib.CBufferByGeometry,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            要素缓冲区分析
            </summary>
            <param name="obj">要缓冲分析的要素空间坐标等信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Util.SpacialAnalyse.OnBufferByGeometry(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取BufferByGeometry操作结果
            </summary>
            <param name="e">BufferByGeometry操作完成事件</param>
            <returns>BufferByGeometry操作结果</returns>
        </member>
        <member name="T:ZDIMS.Util.CommFun">
            <summary>
            公共算法函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.CommFun.TimeDiff(System.DateTime,System.DateTime)">
            <summary>
            计算时间差(只计算小时、分、秒、毫秒之间的差)
            </summary>
            <param name="t1">时间1</param>
            <param name="t2">时间2</param>
            <returns>返回值：时间差(毫秒为单位)</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.TimeDiffEx(System.DateTime,System.DateTime)">
            <summary>
            计算时间差
            </summary>
            <param name="t1">时间1</param>
            <param name="t2">时间2</param>
            <returns>返回值：时间差(毫秒为单位)</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.FromUInt32(System.UInt32)">
            <summary>
            十六进制颜色代码转Color对象
            </summary>
            <param name="argb">argb十六进制值</param>
            <returns>Color对象</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.GenerateStringId">
            <summary>
            生成字符串型唯一ID
            </summary>
            <returns>唯一字符串id</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.GenerateNumberId">
            <summary>
            生成数字型唯一ID
            </summary>
            <returns>唯一数字id</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.CreatDragRectBox(System.Windows.Size,System.Windows.Media.Color,System.Windows.Thickness,System.Windows.Media.Color,System.Windows.Media.Color,System.Double,System.Double)">
            <summary>
            创建一个带十字架的矩形框
            </summary>
            <param name="size">尺寸</param>
            <param name="backgroundColor">背景颜色</param>
            <param name="borderThickness">边框厚度</param>
            <param name="borderColor">边框颜色</param>
            <param name="crossColor">十字架颜色</param>
            <param name="crossLinThickness">十字架线宽</param>
            <param name="opacity">透明度</param>
            <returns>矩形框对象</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.IsNumber(System.String)">
            <summary>
            判断字符串是否是数字类型
            </summary>
            <param name="strNumber">数字字符串</param>
            <returns>是数字字符串返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Util.CommFun.Escape(System.Object)">
            <summary>
            将编码转成Unicode格式
            </summary>
            <param name="string">要转换字符串</param>
            <returns>Unicode编码字符串</returns>
        </member>
        <member name="T:ZDIMS.OtherMap.BingTileLayer">
            <summary>
            Bing Map 瓦片图层
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.BingTileLayer.startDataLvl">
            <summary>
             MapGIS 瓦片数据第0级在Bing地图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.BingTileLayer.originalRow">
            <summary>
            MapGIS 瓦片数据第0级在Bing地图的行号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.BingTileLayer.originalColumn">
            <summary>
             MapGIS 瓦片数据第0级在Bing地图的列号
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.BingTileLayer.#ctor">
            <summary>
            Bing Map 瓦片图层构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.BingTileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.BingTileLayer.GetTitleUrl(System.Int32,System.Int32,System.Int32)">
            <summary>
             通过url获取Bing瓦片数据
            </summary>
            <param name="row">客户端传过来的行号</param>
            <param name="col">客户端传过来的列号</param>
            <param name="lvl">客户端传过来的级数</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.OtherMap.BingTileLayer.TileXYToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据级数、行号、列号计算出Bing地图的索引号   
            </summary>
            <param name="tileX">列号</param>
            <param name="tileY">行号</param>
            <param name="levelOfDetail">级数</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.OtherMap.BingTileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="P:ZDIMS.OtherMap.BingTileLayer.StartDataLvl">
            <summary>
            设置或获取MapGIS 瓦片数据第0级在Bing地图的级数
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.BingTileLayer.OriginalRow">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在Bing地图的行号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.BingTileLayer.OriginalColumn">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在Bing地图的列号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.BingTileLayer.ServerAddress">
            <summary>
            Bing Map瓦片数据服务地址 例如“http://r1.tiles.ditu.live.com/tiles/”
            </summary>
        </member>
        <member name="T:ZDIMS.Map.MapContainerBase">
            <summary>
            地图容器基类
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_restoreCenX">
            <summary>
            复位时的中心点x轴坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_restoreCenY">
            <summary>
            复位时的中心点y轴坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_isKeyDown">
            <summary>
            按键是否按下标志位 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_directionKey">
            <summary>
            方向键状态
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_enableAnimate">
            <summary>
            是否允许显示图像时使用动画渐变效果
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_keypressMoveMapSpeed">
            <summary>
            键盘移动地图速度
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseDownLogicPnt">
            <summary>
            鼠标按下时逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseDownScrPnt">
            <summary>
            鼠标按下时窗口坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseUpLogicPnt">
            <summary>
            鼠标弹起时逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseUpScrPnt">
            <summary>
            鼠标弹起时窗口坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseMoveLogicPnt">
            <summary>
            鼠标移动时逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_mouseMoveScrPnt">
            <summary>
            鼠标移动时窗口坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_cenPntLogCoor_">
            <summary>
            中心点逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_cenPntLogCoorOld">
            <summary>
            中心点逻辑坐标改变之前的旧中心点逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_cenPntScrCoor">
            <summary>
            中心点屏幕坐标
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_isMouseDown">
            <summary>
            鼠标左键是否已按下标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_initShowLevel">
            <summary>
            初始显示级数（复位时显示的是初始级数）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_infoText">
            <summary>
            提示信息显示控件
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_levelNum">
            <summary>
            地图总级数
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_contextMenu">
            <summary>
            关联右键菜单
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_hideInfoTxtTimer">
            <summary>
            隐藏提示信息的timer
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_curThreadSynContext">
            <summary>
            当前线程的同步上下文
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_graphicsCanvas">
            <summary>
            内部绘图层（绘图建议使用GraphicsLayer）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.m_operType">
            <summary>
            地图操作标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.xMinMap">
            <summary>
            地图X轴最小值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.yMinMap">
            <summary>
            地图Y轴最小值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.xMaxMap">
            <summary>
            地图X轴最大值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.yMaxMap">
            <summary>
            地图Y轴最大值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.createdFlg">
            <summary>
            控件呈现完毕的标志 
            </summary>        
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.loadSuccFlg">
            <summary>
            加载是否成功标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.tmpAnimationObj">
            <summary>
            地图放缩动画零时层 
            </summary>    
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.mapManager">
            <summary>
            图层管理对象  
            </summary>        
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.winViewBound">
            <summary>
            窗口视图范围
            </summary>        
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.logicXlength">
            <summary>
            地图X轴长度 
            </summary>        
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.logicYlength">
            <summary>
            地图Y轴长度
            </summary>      
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.oldLev">
            <summary>
            地图级数改变之前的级数
            </summary>   
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.isDragMoveing">
            <summary>
            地图拖拽移动中标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.isMove">
            <summary>
            地图移动操作的标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.isKeyMoveing">
            <summary>
            方向按键移动地图标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.isAnimationMoveing">
            <summary>
            动画移动地图标志位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.mapOperLock">
            <summary>
            地图操作锁标志
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.ZoomInScale">
            <summary>
            地图放大时的动画放大比例值(默认值为2.0) 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapContainerBase.ZoomOutScale">
            <summary>
            地图缩小时的动画缩小比例值(默认值为0.5) 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.#ctor">
            <summary>
            地图容器基类构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.AddChild(System.Windows.UIElement)">
            <summary>
            添加子元素
            </summary>
            <param name="child">子元素对象</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.AddChildAt(System.Windows.UIElement,System.Int32)">
            <summary>
            添加子元素
            </summary>
            <param name="child">子控件元素</param>
            <param name="zIndex">显示层数（相当于html中标签的zIndex值）</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.GetChildIndex(System.Windows.UIElement)">
            <summary>
            获取子控件的在父控件列表中的位置
            </summary>
            <param name="child">子元素对象</param>
            <returns>返回子元素在父节点列表中的索引位置</returns>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Contains(System.Windows.UIElement)">
            <summary>
            是否包含指定子元素
            </summary>
            <param name="value">查找的子元素对象</param>
            <returns>在容器返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.GetChildByIndex(System.Int32)">
            <summary>
            根据索引获取子元素对象
            </summary>
            <param name="index">在父节点列表中的索引值</param>
            <returns>子元素对象</returns>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.RemoveChild(System.Windows.UIElement)">
            <summary>
            移除子元素
            </summary>
            <param name="child">子元素对象</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.RemoveAll">
            <summary>
            移除容器中所有子元素
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.SetErrorText(System.String)">
            <summary>
            在地图容器中显示错误提示消息
            </summary>
            <param name="errMessage">错误消息文本</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.SetInfoText(System.String)">
            <summary>
            在地图容器中显示示消息
            </summary>
            <param name="txtMessage">消息文本</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.SetInfoText(System.String,System.Windows.Media.Color)">
            <summary>
            在地图容器中显示示消息
            </summary>
            <param name="txtMessage">消息文本</param>
            <param name="txtColor">字体颜色</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至指定坐标位置
            </summary>
            <param name="x">目标位置x坐标(逻辑坐标)</param>
            <param name="y">目标位置y坐标(逻辑坐标)</param>
            <param name="level">设置地图显示级数(默认为-1，表示不改变地图级数,只是移动地图)</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标
            </summary>
            <param name="x">x轴方向窗口坐标（以容器左上角为原点）</param>
            <param name="y">y轴方向窗口坐标（以容器左上角为原点）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标
            </summary>
            <param name="x">x轴方向逻辑坐标（地理坐标）</param>
            <param name="y">y轴方向逻辑坐标（地理坐标）</param>
            <returns>窗口坐标（以容器左上角为原点）</returns>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.PanTo(System.Double,System.Double)">
            <summary>
            将地图从指定逻辑坐标动画移动到的屏幕中心位置
            </summary>
            <param name="logX">目的点X逻辑坐标</param>
            <param name="logY">目的点Y逻辑坐标</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.PanTo(System.Double,System.Double,System.Collections.Generic.List{System.Windows.FrameworkElement},ZDIMS.Map.MapMoveAnimationOverHandler)">
            <summary>
            将地图从指定逻辑坐标动画移动到的屏幕中心位置
            </summary>
            <param name="logX">目的点X逻辑坐标</param>
            <param name="logY">目的点Y逻辑坐标</param>
            <param name="objArr">需要跟随地图一起动画移动的控件</param>
            <param name="callBack">动画结束后回调函数</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Refresh(System.Boolean)">
            <summary>
            刷新地图(所有图层将重新取图显示)
            </summary>
            <param name="isReInit">是否重新初始化标志（默认为“fase”，不重新初始化）</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Restore(System.Boolean)">
            <summary>
            复位地图(所有图层将显示为初始状态)
            </summary>
            <param name="isReInit">是否重新初始化标志（默认为“fase”，不重新初始化）</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.OnCreateComplete">
            <summary>
            容器创建完毕回调方法
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.ResetParameter">
            <summary>
            重新初始化地图相关参数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.AutoGetMapInfoCallback(ZDIMS.Interface.IMap)">
            <summary>
            图层自动取图回调
            </summary>
            <param name="layer">图层对象</param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            load完毕
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            大小改变事件回调
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.UpdateClip(System.Windows.Size)">
            <summary>
            更新遮盖区域
            </summary>
            <param name="arrangeSize"></param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移动事件回调
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_IMSMapLDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键双击地图事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapOperTypeBeforeChange">
            <summary>
            派发地图操作状态改变之前的事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapOperTypeChange">
            <summary>
            地图操作状态改变事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapViewChange">
            <summary>
            地图视图变化事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapReady">
            <summary>
            地图准备就绪事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapZoomOver">
            <summary>
            地图放缩结束事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapContainerBase.Dispatcher_MapMoveOver">
            <summary>
            地图移动结束事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.IMSMapLDoubleClick">
            <summary>
            鼠标左键双击地图事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.UpdateClipEvent">
            <summary>
            更新遮罩事件 
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapOperTypeBeforeChange">
            <summary>
            地图操作状态改变之前的事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapOperTypeChange">
            <summary>
            地图操作状态改变事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapViewChange">
            <summary>
            地图视图状态发生变化事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapReady">
            <summary>
            地图准备就绪事件(图层加载完毕)
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapZoomOver">
            <summary>
            地图放缩结束事件 
            </summary>
        </member>
        <member name="E:ZDIMS.Map.MapContainerBase.MapMoveOver">
            <summary>
            地图移动结束事件 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase._cenPntLogCoor">
            <summary>
            中心点坐标（内部过渡变量，外部不可用） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase._MouseUpLogicPnt">
            <summary>
            设置鼠标弹起时逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase._MouseUpScrPnt">
            <summary>
            设置鼠标弹起时窗口坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.OldLevel">
            <summary>
            地图级数改变之前的级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.AutoMoveMapViewLockFlg">
            <summary>
            自动移动地图锁标志,主要是保证在绘图时自动移动视图，而不是之前或之后 (默认值为‘false’)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.EnableAccelerate">
            <summary>
            是否启用瓦片地图加速（设置为true时需要客户端安装瓦片地图加速器）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.NavigateToUri">
            <summary>
            官网的地址，右键菜单和Logo上的导航地址都是定位该地址（注意：默认为中地官网地址）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.AboutMenuItemTxt">
            <summary>
            右键菜单最后的关于菜单显示名称（注意：默认为"©中地数码v1.0",如果要去掉该菜单请将属性置为‘null’）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseEventLockFlg">
            <summary>
            鼠标事件响应锁定标志位，主要是在绘制图形等一些鼠标操作时（该标志位为“true”绘制结束时为“false”），其它的鼠标操作可以用该标志位判断是否执行用。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.EnableZoomOutMinLevel">
            <summary>
            是否允许地图放缩至最小级数（第0级)，该值为True时地图级数可以小于等于地图初始显示级数，反之地图最小只能放缩到初始显示级数(InitShowLevel),在存在瓦片图时有效,默认为true。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.RestoreCenterX">
            <summary>
            复位时的中心点x轴坐标(默认是地图范围的中心点,存在瓦片图时有效)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.RestoreCenterY">
            <summary>
            复位时的中心点y轴坐标(默认是地图范围的中心点,存在瓦片图时有效)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.StateManager">
            <summary>
            地图操作状态管理
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.IsMoveing">
            <summary>
            地图移动中标志位
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CurShowScale">
            <summary>
            获取当前状态下的显示比例（窗口像素长度 / 窗口逻辑长度）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.XMinMap">
            <summary>
            地图X轴最小值（没有设置地图范围值时地图将不会加载，但是可以设置矢量或瓦片图层的自动获取图层信息标志位来获取地图范围初始化地图）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.XMaxMap">
            <summary>
            地图X轴最大值（没有设置地图范围值时地图将不会加载，但是可以设置矢量或瓦片图层的自动获取图层信息标志位来获取地图范围初始化地图）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.YMinMap">
            <summary>
            地图Y轴最小值（没有设置地图范围值时地图将不会加载，但是可以设置矢量或瓦片图层的自动获取图层信息标志位来获取地图范围初始化地图）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.YMaxMap">
            <summary>
            地图Y轴最大值（没有设置地图范围值时地图将不会加载，但是可以设置矢量或瓦片图层的自动获取图层信息标志位来获取地图范围初始化地图）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.InitShowLevel">
            <summary>
            初始化时显示的地图级数（注意：存在瓦片图时有效，复位时显示的是初始级数）
            </summary>	   
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.KeypressMoveMapSpeed">
            <summary>
            键盘移动地图速度（单位：像素/次，默认值15）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.EnableAnimate">
            <summary>
            是否允许显示图像时使用动画效果(包括放缩地图动画效果、移动地图动画效果等，默认开启动画效果)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.LevelNum">
            <summary>
            地图总级数（注意：存在瓦片图时有效）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.GraphicsCanvas">
            <summary>
            内部绘图层（该图层绘制的图形没有自动修正位置功能，建议创建绘图层‘GraphicsLayer’来实现绘图）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.DirectionKey">
            <summary>
            获取当前四个方向按键状态 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.OperType">
            <summary>
            获取或设置当前鼠标操作地图的类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseDownLogicPnt">
            <summary>
            获取鼠标按下时逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseDownScrPnt">
            <summary>
            获取鼠标按下时窗口坐标（相对于容器的左上角为原点）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseUpLogicPnt">
            <summary>
            获取鼠标弹起时逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseUpScrPnt">
            <summary>
            获取鼠标弹起时窗口坐标（相对于容器的左上角为原点）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseMoveLogicPnt">
            <summary>
            获取鼠标移动时逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MouseMoveScrPnt">
            <summary>
            获取鼠标移动时窗口坐标（相对于容器的左上角为原点）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.WinViewBound">
            <summary>
            当前容器视图逻辑范围（容器左下角到右上角范围）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.IsMouseDown">
            <summary>
            鼠标是否在地图上按下标志位
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CenPntLogCoor">
            <summary>
            当前地图中心点对应逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CenPntLogCoorOld">
            <summary>
            当前地图中心点改变之前的逻辑坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CenPntScrCoor">
            <summary>
            当前地图中心点屏幕坐标（相对于容器的左上角为原点）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.ContextMenu">
            <summary>
            关联的右键菜单
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CurMapLevel">
            <summary>
            获取当前地图级数（存在瓦片图时有效）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.VectorLayerComplete">
            <summary>
            所有矢量地图图层是否加载完的标志位 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.TileLayerLength">
            <summary>
            容器中瓦片图层总个数    
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.VectorLayerLenth">
            <summary>
            容器中矢量图层总个数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.TileLayerList">
            <summary>
            获取容器中所有瓦片图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.VectorLayerList">
            <summary>
            获取容器中所有矢量图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CustomLayerLength">
            <summary>
            容器中自定义图层总个数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.CustomLayerList">
            <summary>
            获取容器中所有自定义图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.LayersLenth">
            <summary>
            容器中地图图层总个数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.MapLoadSuccFlg">
            <summary>
            地图加载成功标志 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.Children">
            <summary>
            孩子节点属性（该属性已禁用，请使用AddChild、RemoveChild、RemoveAll等方法添加删除子控件!）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.ChildrenCount">
            <summary>
            容器中所有子控件总个数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.Width">
            <summary>
            容器宽度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapContainerBase.Height">
            <summary>
            容器高度
            </summary>
        </member>
        <member name="T:ZDIMS.Map.MapManager">
            <summary>
            地图图层管理
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.AutoGetMapInfoLockFlg">
            <summary>
            自动获取范围锁定标志
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.AppendLayer(ZDIMS.Interface.IMap)">
            <summary>
            保存层
            </summary>
            <param name="layer">层对象</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.RemoveLayer(ZDIMS.Interface.IMap)">
            <summary>
            移除图层
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.RemoveAll">
            <summary>
            移除所有图层
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.ResetLayersZIndex">
            <summary>
            重新设置每个图层的zIndex
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.InitLayers">
            <summary>
            初始化所有图层
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.MapManager.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.MapManager.SetCenter(System.Double,System.Double,System.Double)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.JumpByRectBound(ZDIMS.Util.RectBound)">
            <summary>
            根据矩形范围移动地图
            </summary>
            <param name="rect">范围</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapRestore">
            <summary>
            复位地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapRefresh">
            <summary>
            刷新地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.ZoomByRect(System.Double)">
            <summary>
            拉框放缩地图
            </summary>
            <param name="lvl"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapZoomIn">
            <summary>
            放大地图
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapZoomOut">
            <summary>
            缩小地图
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.SizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            resize事件
            </summary>
            <param name="evt"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.CloneMap">
            <summary>
            将所有图层(不包括自定义类型图层)拷贝一份放入一个零时创建的Canvas中
            </summary>
            <returns>包含所有图层的一个Canvas</returns>
        </member>
        <member name="M:ZDIMS.Map.MapManager.InitZoomTimer(System.TimeSpan,System.Int32)">
            <summary>
            初始化放缩动画计数器
            </summary>
            <param name="interval">时间间隔</param>
            <param name="repeatCount">放缩速度</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapZoomAnimation(System.Int32,System.Windows.Point)">
            <summary>
            地图放缩动画
            </summary>
            <param name="scaleLevel">放缩级数(正值表示放大，负值表示缩小)</param>
            <param name="focusPnt">放缩焦点坐标</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.CreatTmpAnimationOb">
            <summary>
            创建放缩动画零时的AnimationOb
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.RemoveTmpAnimationOb">
            <summary>
            删除放缩动画零时的AnimationOb
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.InitMoveTimer(System.TimeSpan,System.Int32)">
            <summary>
            初始化移动动画计数器
            </summary>
            <param name="interval">动画时间间隔</param>
            <param name="repeatCount">执行总次数</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapMoveAnimation(System.Double,System.Double,System.Collections.Generic.List{System.Windows.FrameworkElement},ZDIMS.Map.MapMoveAnimationOverHandler)">
            <summary>
            动画移动地图
            </summary>
            <param name="logX">目的点X逻辑坐标</param>
            <param name="logY">目的点Y逻辑坐标</param>
            <param name="objArr">需要跟随地图一起动画移动的控件</param>
            <param name="callBack">动画结束后回调函数</param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.MapMoveAnimationStop">
            <summary>
            停止动画移动效果
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.SetLayersAutoGetMapInfo(System.Boolean)">
            <summary>
            设置所有图层AutoGetMapInfo
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ZDIMS.Map.MapManager.GetFirstAutoGetMapInfoLayer">
            <summary>
            返回第一个设置AutoGetMapInfo为true的图层
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Map.MapManager.TouchDown(System.Windows.Input.TouchPoint,System.Windows.Input.TouchPoint)">
            <summary>
            按下操作
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.TouchMove(System.Windows.Input.TouchPoint,System.Windows.Input.TouchPoint)">
            <summary>
            移动操作
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.TouchUp(System.Windows.Input.TouchPoint,System.Windows.Input.TouchPoint)">
            <summary>
            弹起操作
            </summary>
        </member>
        <member name="M:ZDIMS.Map.MapManager.InertiaMove(System.Double)">
            <summary>
            惯性移动 
            </summary>
            <param name="speed">速度</param>
        </member>
        <member name="P:ZDIMS.Map.MapManager.CurMapLevel">
            <summary>
            获取当前级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.LoadComplete">
            <summary>
            所有图层是否加载完毕标志
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.VectorLayerComplete">
            <summary>
            所有矢量地图是否加载完的标志位 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.TileLayerLength">
            <summary>
            容器中瓦片图层总个数    
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.VectorLayerLenth">
            <summary>
            容器中矢量图层总个数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.CustomLayerLength">
            <summary>
            容器中自定义图层总个数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.CustomLayerList">
            <summary>
            获取容器中所有自定义图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.TileLayerList">
            <summary>
            获取容器中所有瓦片图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.VectorLayerList">
            <summary>
            获取容器中所有矢量图层列表 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.LayersLenth">
            <summary>
            容器中图层总个数 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.MapManager.MapLayersCount">
            <summary>
            矢量和瓦片图层总数
            </summary>
        </member>
        <member name="T:ZDIMS.Map.MapManager.ResetType">
            <summary>
            纯矢量修正视口的操作类型
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.MapInit">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.WindowResize">
            <summary>
            窗口Resize时
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.WheelZoomIn">
            <summary>
            滚轮放大
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.WheelZoomOut">
            <summary>
            滚轮缩小
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.KeyboardMove">
            <summary>
            键盘移动
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.SetCenter">
            <summary>
            SetCenter
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.ZoomIn">
            <summary>
            放大
            </summary>
        </member>
        <member name="F:ZDIMS.Map.MapManager.ResetType.ZoomOut">
            <summary>
            缩小
            </summary>
        </member>
        <member name="T:ZDIMS.Map.MapMoveAnimationOverHandler">
            <summary>
            移动动画结束回调
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.IMSBeeline">
            <summary>
            简单线(直线)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            直线构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.Draw">
            <summary>
            绘制图形(设置完起点和终点坐标后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形(数组长度应该为2，第一个为起点坐标、第二个为终点坐标)
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSBeeline.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Drawing.IMSBeeline.Points">
            <summary>
            绘图坐标数组
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSBeeline.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSBeeline.StartPoint">
            <summary>
            起始点坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSBeeline.EndPoint">
            <summary>
            结束点坐标
            </summary>
        </member>
        <member name="T:ZDIMS.Util.ZoomEffect">
            <summary>
            动画
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZoomEffect.#ctor(System.Windows.Controls.Panel,System.Int32,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            放缩效果框构造函数
            </summary>
            <param name="parent">父容器</param>
            <param name="width">放缩效果框构宽</param>
            <param name="delay">动画时间间隔(单位毫秒)</param>
            <param name="height">放缩效果框构高</param>
            <param name="lineThickness">线厚度</param>
            <param name="lineColor">线颜色(缺省红色)</param>
        </member>
        <member name="M:ZDIMS.Util.ZoomEffect.Play(System.Windows.Point,System.Boolean)">
            <summary>
            播放
            </summary>
            <param name="cenPnt">中心点坐标（屏幕坐标）</param>
            <param name="isZoomIn">放大还是缩小标志，“true”表示放大，“false”表示缩小</param>
        </member>
        <member name="M:ZDIMS.Util.ZoomEffect.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZoomEffect.DrawLine(System.Int32,System.Windows.Point)">
            <summary>
            绘线
            </summary>
            <param name="direct"></param>
            <param name="pnt"></param>
        </member>
        <member name="T:ZDIMS.Event.IMSMapEvent">
            <summary>
            地图事件
            </summary>
        </member>
        <member name="M:ZDIMS.Event.IMSMapEvent.#ctor(ZDIMS.Map.MapContainerBase)">
            <summary>
            地图事件构造函数
            </summary>
            <param name="map">地图容器对象</param>
        </member>
        <member name="P:ZDIMS.Event.IMSMapEvent.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="T:ZDIMS.Event.IMSMapEventHandler">
            <summary>
            表示处理MapOperTypeBeforeChange、MapOperTypeChange、MapViewChange、MapReady、MapZoomOver、MapMoveOver等事件的方法。
            </summary>
            <param name="e">地图事件数据源</param>
        </member>
        <member name="T:ZDIMS.BaseLib.COperResult">
            <summary>
            该类为返回值类。一般用于设置地图的某些功能时返回的true还是false等的返回值类。
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法。
            COperResult rlt=new COperResult();
            rlt.OperResult=true;
            rlt.ErrorInfo="";
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COperResult.ErrorInfo">
            <summary>
            如果OperResult为false情况下返回的错误信息。如果为true则为空。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COperResult.OperResult">
            <summary>
            函数是否执行成功的标志。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COpenMap">
            <summary>
            该类表示需要打开的多个文档的名称。
            <example>
            <code>
            COpenMap mapObj=new COpenMap();//初始化数组
            mapObj.MapName=new string[1];//初始化数组
            mapObj.MapName[0]="wh.Map";//设置要打开的文档名称
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COpenMap.MapName">
            <summary>
            需要操作的文档的名称。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLoadMap">
            <summary>
            该类表示加载地图文档所传参数类。
            <example>
            <code>
            //初始化加载地图参数类
            CLoadMap loadMap=new CLoadMap();
            loadMap.OpenMapObj=new COpenMap();//设置需要加载的地图文档名称
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMap.OpenMapObj">
            <summary>
            要加载的文档名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMap.MapDocIndex">
            <summary>
            需要操作的文档索引。
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLoadMapRlt">
            <summary>
            该类表示加载地图文档功能返回值类
            该类为函数返回值类，不需要赋值，
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMapRlt.LayerCount">
            <summary>
            地图文档中图层的个数
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMapRlt.Rect">
            <summary>
            地图文档各个图层的详细信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMapRlt.LayerAccessInfo">
            <summary>
            地图文档各个图层的详细信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMapRlt.MapLayerInfo">
            <summary>
            地图文档中各个图层的状态信息。数组元素类型为CMapLayerInfo类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLoadMapRlt.LayerAttStruct">
            <summary>
            各个图层的属性结构。此属性为客户端缓存属性，
            在第一次加载文档后此属性为null，此后获取了某图层属性结构后再给其赋值。
            数组元素为CAttStruct类，具体参见CAttStruct类说明。
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SetIntParam">
            <summary>
            该类表示输入单个整型参数
            <example>
            <code>
            SetIntParam setParam=new new SetIntParam();//初始化参数类
            setParam.Param=0;
            setParam.MapName="wh.Map";
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.SetIntParam.MapName">
            <summary>
            打开的地图文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.SetIntParam.Param">
            <summary>
            输入的整型
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SetStringParam">
            <summary>
            参数类（用于文档开发方式下，某些需要传string类型的接口所传参数）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.SetStringParam.MapName">
            <summary>
            需要操作的文档的名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.SetStringParam.Param">
            <summary>
            输入的字符串型
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDisplayOrder">
            <summary>
            图层的显示顺序（用于文档开发方式下的接口参数）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDisplayOrder.DisplayOrder">
            <summary>
            说明：图层显示顺序
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetDisplayOrder">
            <summary>
            该类表示设置图层显示顺序参数类。
            <example>
            <code>
            //初始化修改图层顺序类
            CSetDisplayOrder setDisplayOrder=new CSetDisplayOrder();
            setDisplayOrder.DisplayOrder=new int[4];
            //原始文档打开图层顺序为：0,1,2,3。 此例则修改为0,3,2,1
            setDisplayOrder.DisplayOrder[0]=0;
            setDisplayOrder.DisplayOrder[1]=3;
            setDisplayOrder.DisplayOrder[2]=2;
            setDisplayOrder.DisplayOrder[3]=1;;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetDisplayOrder.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetDisplayOrder.MapDocIndex">
            <summary>
            需要操作的文档索引。（此处不建议修改其默认值）。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetDisplayOrder.DisplayOrder">
            <summary>
            说明：图层的显示顺序。数组元素为int型。即刚打开文档时各个图层看做一个数组后，
            顺序即从0开始排序，
            之后修改了显示顺序后原来的索引与各个图层绑定。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapIndex">
            <summary>
            该类是表示文档索引及图层索引的结构。
            <example>
            <code>
            CMapIndex index=new CMapIndex();
            index.LayerIndex=1;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapIndex.MapName">
            <summary>
            说明：需要操作的文档的名称
            (主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapIndex.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapIndex.LayerIndex">
            <summary>
            说明：需要操作的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetMapImage">
            <summary>
            该类表示在地图文档打开的前提下，获取地图文档的指定范围的图片。
            <example>
            <code>
             // 初始化地图文档出图参数类
            CGetMapImage getMap=new CGetMapImage();
            //设置需要出图的数据范围（与数据的范围类型一致）
            getMap.DispRect=new Rect();
            //设置需要生成图片的高
            getMap.Height=400;
            //设置需要生成图片的宽
            getMap.Width=300;
            //设置需要生成图片的类型（gif，jpg，png）
            getMap.ImgFormat=ImgFormat.gif;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapImage.MapName">
            <summary>
            需要操作操作的文档的名称
            (主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapImage.DispRect">
            <summary>
            需要出图的范围。具体传参数请参见Rect类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapImage.Width">
            <summary>
            需要出图的图像宽。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapImage.Height">
            <summary>
            需要出图的图像高。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapImage.ImgFormat">
            <summary>
            出图的图像类型（gif，jpg，png）。
            可输入枚举类型ImgFormat。其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelectParam">
            <summary>
            该类表示在打开地图文档的前提下，查询并获取数据功能的参数类。
            <example>
            <code>
            //初始化查询参数类
            CMapSelectParam mapSelect=new CMapSelectParam();
            //设置需要返回的结果页数
            mapSelect.PageCount=0;
            //设置查询参数
            mapSelect.SelectParam=new CWebSelectParam();
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectParam.PageCount">
            <summary>
            返回结果的页数，从0开始。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectParam.SelectParam">
            <summary>
            查询参数。具体参数请参见CWebSelectParam类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectParam.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelect">
            <summary>
            地图文档查询功能的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelect.SelectParam">
            <summary>
            查询参数。具体参数请参见CWebSelectParam类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelect.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetCnt">
            <summary>
            文档开发方式下 查询函数的返回值类  不过该函数及该类已经过时，请使用新函数及其返回值。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetCnt.Count">
            <summary>
            
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelectAndGetAtt">
            <summary>
            该类表示在打开地图文档的前提下，查询并获取属性集合功能的返回值类。
            <example>
            <code>
            //该类为返回值类，一般不需要赋值，此例仅仅说明该类的结构而非用法
            CMapSelectAndGetAtt mapSelect=new CMapSelectAndGetAtt();
            //初始化记录集
            mapSelect.AttDS= new CAttDataSet[1];
            //初始化数组元素
            mapSelect.AttDS[0]=new CAttDataSet();
            //初始化记录个数
            mapSelect.Count=new new int[1][];
            mapSelect.Count[0] = new int[1];
            //初始化数组元素
            mapSelect.Count[0][0]= 0;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetAtt.Count">
            <summary>
            查询后返回的记录个数。此为二维数组，二维数组元素的类型为int型。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetAtt.AttDS">
            <summary>
            查询后返回的记录集。数组元素的类型为CAttDataSet型，
            具体请参见CAttDataSet类详细说明。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetAttCollection">
            <summary>
            文档开发方式下 查询后获取属性信息的返回值类 不过该函数及该类已经过时，请使用新函数及其返回值。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAttCollection.AttDS">
            <summary>
            查询的属性信息集合
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelectAndGetGem">
            <summary>
            该类表示在打开地图文档的前提下，查询并获取空间信息集合功能的返回值类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetGem.Count">
            <summary>
            说明：查询后返回的记录个数。此为二维数组，二维数组的元素类型为int型。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetGem.FGeomSet">
            <summary>
            说明：查询结果返回的要素集合。此为二维数组，二维数组的元素类型为SFGeomSet类型。具体可参见SFGeomSet类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelectAndGetFeature">
            <summary>
            该类表示在打开地图文档的前提下，查询并获取要素集合功能的返回值类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetFeature.Count">
            <summary>
            说明：查询后返回的记录个数。此为二维数组，二维数组的元素类型为int型。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndGetFeature.SFeaDS">
            <summary>
            说明：查询结果返回的要素集合。此为二维数组，二维数组的元素类型为SFeatureSet类型。具体可参见SFeatureSet类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGemCollection">
            <summary>
            文档开发方式下  查询后获取空间信息的返回值类 不过该函数及该类已经过时，请使用新函数及其返回值。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGemCollection.FGeomSet">
            <summary>
            查询后获取的空间信息集合
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetObjByID">
            <summary>
            该类表示在打开文档的前提下，根据要素id获取要素的各种信息功能的参数类
            <example>
            <code>
            //初始化类
            CGetObjByID getObj=new CGetObjByID();
            //设置要素id
            getObj.FeatureID=1;
            //设置图层索引
            getObj.LayerIndex=0;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetObjByID.MapName">
            <summary>
            需要操作的文档的名称
            (主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)。
            类型：COpenMap
            初始值：无
            
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetObjByID.MapDocIndex">
            <summary>
            需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetObjByID.LayerIndex">
            <summary>
            需要操作的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetObjByID.FeatureID">
            <summary>
            要素id。要素id是用于一条要素在一个图层中的唯一标识，是平台自动分配的索引。
            对应于平台数据记录表中的oid字段。
            类型：Number
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CReBuildReg">
            <summary>
            该类表示在文档打开的前提下，对于某个文档的图层将一定范围内的数据进行拓扑重建功能的参数类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildReg.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildReg.MapDocIndex">
            <summary>
            文档的索引，int型
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildReg.LayerIndex">
            <summary>
            文档中的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildReg.RcRect">
            <summary>
            说明：需要拓扑重建的范围
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUnionRegion">
            <summary>
            该类表示在文档打开前提下，合并区函数的参数类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegion.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegion.MapDocIndex">
            <summary>
            需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegion.LayerIndex">
            <summary>
            需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegion.Fids">
            <summary>
            说明：需要合并的要素id。每个数组元素类型是long型。要素id是用于一条要素在一个图层中的唯一标识，
            是平台自动分配的索引。对应于平台数据记录表中的oid字段。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGeomByIDArr">
            <summary>
            根据id数组获取空间信息的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomByIDArr.LayerAccessInfo">
            <summary>
            需要操作的图层的信息，包括：gdb信息，图层名、图层类型等
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomByIDArr.LayerIndex">
            <summary>
            需要操作的图层的索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomByIDArr.FeatureID">
            <summary>
            需要获取的要素的要素id
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGeomArr">
            <summary>
            根据id数组获取空间信息的返回值类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomArr.SfGeometry">
            <summary>
            根据ID获取的空间信息
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetMapLayerInfo">
            <summary>
            该类表示设置文档的图层状态参数类。
            <example>
            <code>
            //初始化参数类
             CSetMapLayerInfo setMapLayerInfo=new CSetMapLayerInfo();
             //设置要设置的图层状态参数
             //设置图层索引
             setMapLayerInfo.LayerIndex=0;
            </code>
            </example>
            </summary>   
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfo.MapName">
            <summary>
            说明：需要操作的文档的名称
                  (主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfo.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfo.LayerIndex">
            <summary>
            说明：需要操作的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfo.MapLayerInfo">
            <summary>
            说明：图层状态参数
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetMapLayerInfoList">
            <summary>
            该类表示设置多个图层的状态参数类。
            <example>
            <code>
            //初始化参数类
            CSetMapLayerInfoList setMapLayerInfo=new CSetMapLayerInfoList();
            setMapLayerInfo.MapLayerInfo=new CMapLayerInfo[1];//设置图层状态数组
            setMapLayerInfo.LayerIndex[0]=0;//设置要修改状态的图层索引
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfoList.MapName">
            <summary>
            需要操作的文档的名称
            (主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfoList.MapDocIndex">
            <summary>
            需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfoList.LayerIndex">
            <summary>
            需要操作的图层索引数组。数组元素是int型。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapLayerInfoList.MapLayerInfo">
            <summary>
            多个状态参数。每个数组元素类型为CMapLayerInfo类。
            具体赋值请参见CMapLayerInfo类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetMapDispStyle">
            <summary>
            该类表示设置文档显示参数类。
            <example>
            <code>
            //初始化参数类
            CSetMapDispStyle setMapDispStyle=new CSetMapDispStyle();
            //需要设置的显示参数
            setMapDispStyle.DispStyle=new CDisplayStyle();
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDispStyle.MapName">
            <summary>
            说明：需要操作的地图文档名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDispStyle.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDispStyle.DispStyle">
            <summary>
            说明：该文档的显示参数。数组元素类型为CDisplayStyle类。具体赋值可参见
                  CDisplayStyle类详细说明。
            类型：CDisplayStyle      
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetMapDisplayCondition">
            <summary>
            该类表示设置文档显示条件类。
            <example>
            <code>
            //初始化参数类
            CSetMapDisplayCondition setMapDisplayCondition=new CSetMapDisplayCondition();
            //需要设置的显示条件
            setMapDisplayCondition.condition=new string[1];
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDisplayCondition.LayerIndexArr">
            <summary>
            说明：该文档的图层序号。数组元素类型为int型。
            类型：int      
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDisplayCondition.Condition">
            <summary>
            说明：该文档的显示条件。数组元素类型为string类。具体赋值可参见
                  查询类中的条件参数详细说明。
            类型：string      
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDisplayCondition.MapName">
            <summary>
            说明：需要操作的地图文档名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapDisplayCondition.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetPageSize">
            <summary>
            该类表示在文档开发方式下，设置文档查询结果每页的个数参数类。
            <example>
            <code>
            CSetPageSize setPageSize=new CSetPageSize();
            //设置每页返回结果20条
            setPageSize.PageSize=20;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetPageSize.MapName">
            <summary>
            说明：需要操作的文档的名称(主要用于以防万一gis服务器重启之后，文档需要重新打开的
                  情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetPageSize.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetPageSize.PageSize">
            <summary>
            说明：查询结果每页的个数。
            类型：int
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSaveAs">
            <summary>
            保存文档的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSaveAs.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSaveAs.MapDocIndex">
            <summary>
            需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSaveAs.FilePathName">
            <summary>
            需要另存的文件路径
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapFeatureInfoList">
            <summary>
            该类表示要素信息集合，主要用于添加及修改要素功能所传的参数类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfoList.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfoList.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfoList.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfoList.FSet">
            <summary>
            说明：要素信息集合，类型为SFeature[]，包括空间信息及属性信息。具体数组元素赋值请参见SFeature类。
            类型：SFeature
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfoList.GInfo">
            <summary>
            说明：样式信息。具体赋值请参见WebGraphicsInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapFeatureInfo">
            <summary>
            该类表示要素信息，主要用于添加及修改要素功能所传的参数类。
            <example>
            <code>
            //初始化参数类
            CMapFeatureInfo featureInfo=new CMapFeatureInfo();
            //设置需要操作的图层索引
            featureInfo.LayerIndex=0;
            //设置样式信息
            featureInfo.GInfo=new WebGraphicsInfo();
            //设置要素信息
            featureInfo.FSet=new SFeature();
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfo.MapName">
            <summary>
            需要操作的地图文档名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfo.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfo.LayerIndex">
            <summary>
            说明：需要操作的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfo.FSet">
            <summary>
            说明：要素信息，包括空间信息及属性信息。具体赋值请参见SFeature类。
            类型：SFeature
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapFeatureInfo.GInfo">
            <summary>
            说明：样式信息。具体赋值请参见WebGraphicsInfo类。
            类型：WebGraphicsInfo
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetMapLayerInfoArr">
            <summary>
            获取文档相关信息的返回值类 
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapLayerInfoArr.MapLayerInfo">
            <summary>
            获取的文档信息。包括：图层状态（可见、编辑等）信息
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CCreateMapLayer">
            <summary>
            使用地图文档开发方式下，在gdb中创建一个图层，此功能中需要传入的参数类，包括gdb的信息，图层的名称及类型等。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateMapLayer.XClsType">
            <summary>
            说明：需要添加的图层类型。可赋值枚举类型：XClsType，具体参见XClsType类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateMapLayer.LayerName">
            <summary>
            说明：需要添加的图层名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateMapLayer.Stype">
            <summary>
            说明：需要添加的图层的几何约束形态（点，线，区）。可赋值枚举类型：SFclsGeomType，具体参见SFclsGeomType类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateMapLayer.AttStruct">
            <summary>
            说明：需要添加的图层的属性结构。属性结构的具体设置参见CAttStruct类详细说明。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateMapLayer.GdbInfo">
            <summary>
            说明：需要添加的图层所在的gdb的信息，具体传入参数参见CGdbInfo类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDeleteMapLayer">
            <summary>
            删除gdb中图层的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteMapLayer.GdbInfo">
            <summary>
            说明：需要删除的图层所在的gdb的信息，具体传入参数参见CGdbInfo类 
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteMapLayer.XClsType">
            <summary>
            说明：需要删除的图层类型。可赋值枚举类型：XClsType，具体参见XClsType类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteMapLayer.LayerName">
            <summary>
            说明：需要删除的图层名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateMapConfig">
            <summary>
            该类表示更新地图文档配置参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateMapConfig.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateMapConfig.ServerName">
            <summary>
            数据源名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateMapConfig.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateMapConfig.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateMapConfig.IsPermanentMap">
            <summary>
            是否添加永久文档
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAppendLayer">
            <summary>
            将指定gdb中的类添加到文档中的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendLayer.MapDocIndex">
            <summary>
            需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendLayer.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendLayer.LayerAccessInfo">
            <summary>
            需要添加的图层的信息
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDelMapLayer">
            <summary>
            移除文档中某个图层的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelMapLayer.LayerIndex">
            <summary>
            需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelMapLayer.MapDocIndex">
            <summary>
            需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelMapLayer.MapName">
            <summary>
            需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerAccessInfo">
            <summary>
            该类表示在地图文档打开的前提下，获取每个图层的信息功能的返回值，
            并且返回值是按照gdb的信息自动分类了的。
            具体关于CLayerAccessInfo结构的含义请参见CLayerAccessInfo类。
            <example>
            <code>
            //说明：该类是获取图层访问信息功能的返回值，一般不需要赋值。
            //所以此例仅仅说明该类的结构而非用法。
            CGetLayerAccessInfo getLayerInfo=new CGetLayerAccessInfo();
            //初始化数组
            getLayerInfo.LayerAccessInfo=new CLayerAccessInfo[1];
            //初始化数组元素
            getLayerInfo.LayerAccessInfo[0]=new CLayerAccessInfo();
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerAccessInfo.MapID">
            <summary>
            此属性已过时
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerAccessInfo.LayerAccessInfo">
            <summary>
            说明：图层的访问信息包括图层所在的gdb的信息，
            及图层的名称，类型等。数组的元素类型是CLayerAccessInfo类。
            具体请参见CLayerAccessInfo类详细说明。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByGeometry">
            <summary>
            该类为对传入的空间信息进行缓冲区分析功能的出入参数类。进行缓冲区分析功能可以不打开数据进行操作。
            具体功能为将传入的多个空间信息，比如多个区要素进行缓冲区分析，结果存放到webgis的临时gdb：IMSWEBGISGDB.HDF中。
            此gdb在安装完平台后附加。而结果的图层名即为传入的结果图层名。结果的图层类型（简单要素类，要素类）即为传入的结果图层类型。
            <example>
            <code>
            //初始化缓冲分析类
            CBufferByGeometry buffer=new CBufferByGeometry();
            //初始化需要缓冲分析的空间信息
            buffer.SfGeometry = new SFeatureGeometry[2];
            //初始化第1个空间信息
            buffer.SfGeometry[0] = new SFeatureGeometry();
            //此例将缓冲半径设置为0.003
             buffer.BufferRadius = 0.003;
            //此例将Trace半径设置为0.001（需比缓冲半径小一些）
              buffer.TraceRadius = 0.001;
            //此例将结果图层名设置为webgis
              buffer.ResultLayerName = "webgis";
            //此例将结果图层类型设置为简单要素类
              buffer.ResultLayerType = XClsType.SFeatureCls;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            类型：double
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.SfGeometry">
            <summary>
            说明：需要缓冲的空间信息数组。每个数组元素为SfeatureGeometry类。具体可参见
                  SfeatureGeometry类详细说明。可对多个空间信息做缓冲区分析操作。
            类型：SFeatureGeometry[]
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.AttStrct">
            <summary>
            说明：需要做缓冲分析的空间信息的对应的属性结构。如果传空则表示分析结果无属性结构。
            类型：CAttStruct
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.AttRows">
            <summary>
            说明：表示上述空间信息对应的属性记录。每个数组元素的类型是CAttDataRow。具体可参
                  见CAttDataRow类。传空表示该分析结果的对应属性为系统默认值。此数组个数需与上述多
                  个空间信息的数组个数一致。
             类型：CAttDataRow[]
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.BufferRadius">
            <summary>
            说明：缓冲半径。对空间信息进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包
            围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册
            或者地理参考资料。
            类型：double
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            类型：XClsType
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByGeometry.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败。
            类型：String
            初始值："buffer"
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByFID">
            <summary>
            该类为对传入的要素ID进行缓冲区分析功能的出入参数类。
            进行缓冲区分析功能可以不打开数据进行操作。具体功能为将传入的要素ID，比如多个区要素进行缓冲区分析，结果存放到webgis的临时gdb：webgisimsgdb中。此gdb在安装完平台后会自动附加。而结果的图层名即为传入的结果图层名。
            结果的图层类型（简单要素类，要素类）即为传入的结果图层类型。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            类型：double
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.MapName">
            <summary>
            说明：需要操作的文档的名称(主要用于以防万一gis服务器重启之后，文档需要重新打开的
                  情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.LayerIndex">
            <summary>
            说明：需要操作的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.FeatureID">
            <summary>
            说明：需要缓冲的要素ID数组。每个数组元素为long类型。
            类型：long[]
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.BufferRadius">
            <summary>
            说明：缓冲半径。对要素ID进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。
            同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFID.ResultLayerName">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            参数传递具体参见XClsType类详细说明。
            初始值："buffer"
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByPolygon">
            <summary>
            该类为对传入的多边形信息进行缓冲区分析功能的出入参数类 
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.Region">
            <summary>
            说明：需要缓冲的多边形几何范围信息数组，每个数组元素为GRegion类，具体可参见GRegion类详细说明。
            可对多个多边形范围信息做缓冲区分析操作。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.AttStrct">
            <summary>
            说明：需要做缓冲分析的多边形几何范围信息的对应的属性结构。如果传空则表示分析结果无属性结构。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.AttRows">
            <summary>
            说明：表示上述多边形范围信息对应的属性记录。每个数组元素的类型是CAttDataRow。具体可参
            见CAttDataRow类。传空表示该分析结果的对应属性为系统默认值。此数组个数需与上述多
            个多边形范围信息的数组个数一致。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.BufferRadius">
            <summary>
            说明：缓冲半径。对多边形范围进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包
            围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册
            或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            类型：XClsType
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolygon.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByPolyline">
            <summary>
            该类为对传入的折线范围进行缓冲区分析功能的出入参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.Line">
            <summary>
            说明：需要缓冲的折线几何范围信息数组，每个数组元素为GLine类，具体可参见GLine类详细说明。
            可对多条折线范围信息做缓冲区分析操作。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.AttStrct">
            <summary>
            说明：需要做缓冲分析的折线几何范围信息的对应的属性结构。如果传空则表示分析结果无属性结构。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.AttRows">
            <summary>
            说明：表示上述折线范围信息对应的属性记录。每个数组元素的类型是CAttDataRow。具体可参
            见CAttDataRow类。传空表示该分析结果的对应属性为系统默认值。此数组个数需与上述多
            个多边形范围信息的数组个数一致。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.BufferRadius">
            <summary>
            说明：缓冲半径。对折线进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            类型：XClsType
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPolyline.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByPoint">
            <summary>
            该类为对传入的点信息进行缓冲区分析功能的出入参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.Point">
            <summary>
            说明：需要缓冲的点信息数组，每个数组元素为GPoint类，具体可参见GPoint类详细说明。
            可对多个多点信息做缓冲区分析操作。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.AttStrct">
            <summary>
            说明：需要做缓冲分析的点范围信息对应的属性结构。如果传空则表示分析结果无属性结构。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.AttRows">
            <summary>
            说明：表示上述点范围信息对应的属性记录。每个数组元素的类型是CAttDataRow。具体可参
            见CAttDataRow类。传空表示该分析结果的对应属性为系统默认值。此数组个数需与上述多
            个多边形范围信息的数组个数一致。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.BufferRadius">
            <summary>
            说明：缓冲半径。对点进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            类型：XClsType
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByPoint.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferFeature">
            <summary>
            对于已经打开的地图文档中，其中的某个图层的单个要素，
            根据其唯一标识（要素id）进行缓冲分析所传入的参数。
            <example>
            <code>
            //初始化缓冲分析类
            CBufferFeature buffer=new CBufferFeature();
            //需要设置所打开的地图文档中，需要做缓冲分析的空间信息所在的文档索引，图层索引及要素的唯一标识（要素id）
            buffer.FeatureInfo=new CGetObjByID();
            //此例将缓冲半径设置为0.003
            buffer.BufferRadius=0.003;
            //此例将Trace半径设置为0.001（需比缓冲半径小一些）
            buffer.TraceRadius=0.001;
            //此例将结果图层名设置为webgis
            buffer.ResultLayerName="webgis";
            //此例将结果图层类型设置为简单要素类
            buffer.ResultLayerType=XClsType.SFeatureCls;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferFeature.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferFeature.BufferRadius">
            <summary>
            说明：缓冲半径。对要素信息进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferFeature.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            类型：XClsType
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferFeature.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败。
            初始值："buffer"
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferFeature.FeatureInfo">
            <summary>
            说明：对于已经打开的地图文档，
            其图层索引即为可视的图层列表中从上到下的排列，起始索引为0。 其具体说明参见CGetObjByID类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAutoTopoAnalyse">
            <summary>
            几何区空间关系类型判断的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAutoTopoAnalyse.GdbInfo">
            <summary>
            需要操作的图层的gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAutoTopoAnalyse.Layername">
            <summary>
            需要操作的图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAutoTopoAnalyse.PolygonDots">
            <summary>
            几何区的点坐标
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferAnaly">
            <summary>
            对整个要素类的缓冲分析的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.GdbInfo">
            <summary>
            需要进行缓冲分析的图层的gdb信息,包括gdb的名称，gdb数据源的名称。
            具体赋值请参见CGdbInfo类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.LayerName">
            <summary>
            需要操作的图层名称
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.XClsType">
            <summary>
            需要缓冲分析的图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.FClsNameRtn">
            <summary>
            生成的要素类名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.BufferRadius">
            <summary>
            缓冲分析半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.IsNetData">
            <summary>
            是否网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.IsReCalculate">
            <summary>
            是否需要重算面积。如无必要则设置为false
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.Username">
            <summary>
            用户所在的用户名，可以不传
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferAnaly.UserIP">
            <summary>
            用户所在的ip地址，可以不传
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CClipByPolygon">
            <summary>
            用于多边形裁剪功能传入的参数类。可以不打开图层。对于传入的gdb信息及图层的名称和
            类型定位到该图层，进行裁剪操作。将结果保存在webgis的临时gdb：IMSWEBGISGDB.HDF中。该gdb
            在安装完webgis平台后附加。而结果的图层名即为传入的结果图层名。
            <example>
            <code>
            //初始化多边形裁剪功能的参数类
            CClipByPolygon clip= new CClipByPolygon();
            //初始化需要裁剪的图层所在的gdb信息
            clip.GdbInfo=new CGdbInfo();
            //设置需要裁剪的图层名称
            clip.LayerName="行政区.wp";
            //设置需要裁剪的图层的类型（简单要素类）
            clip.XClsType=XClsType.SFeatureCls;
            //设置裁剪生成的结果的名称（不可与上述gdb中的数据重名）
            clip.FClsNameRtn="webgis";
            //设置裁剪类型：内裁
            clip.ClipFlg=3;
            //设置是否重算面积
            clip.IsReCalculate=false;
            //设置裁剪半径
            clip.Radius=0.0001;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.GdbInfo">
            <summary>
            说明：需要裁剪的图层所在的gdb的信息，具体传入参数参见CGdbInfo类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.LayerName">
            <summary>
            说明：需要裁剪的图层名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.XClsType">
            <summary>
            说明：需要裁剪的图层类型。根据上述三个属性可定位到需要裁剪的图层。可赋值枚举类型：XClsType，具体参见XClsType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.FClsNameRtn">
            <summary>
            说明：裁剪结果图层的名称。这里需要注意gdb中的图层名不可重名，如果重名则会提示裁剪分析失败。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.Region">
            <summary>
            说明：需要裁剪的裁剪框。具体赋值可参见GRegion类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.Radius">
            <summary>
            说明：裁剪的半径。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.IsReCalculate">
            <summary>
            说明：是否需要重算面积。如无必要则设置为false，可减少裁剪分析的时间。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.ClipFlg">
            <summary>
            说明：裁剪分析的类型（分为两种：内裁为3，外裁为4）。裁剪类型的说明可以参考地理相关资料
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.Username">
            <summary>
            说明：用户所在的用户名。可以不传
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByPolygon.UserIP">
            <summary>
            说明：用户所在的ip地址。可以不传
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CClipByCircle">
            <summary>
            用于圆裁剪功能传入的参数类。可以不打开图层。对于传入的gdb信息及图层的名称和
            类型定位到该图层，进行裁剪操作。将结果保存在webgis的临时gdb：IMSWEBGISGDB.HDF中。该gdb在安装完webgis平台后附加。而结果的图层名即为传入的结果图层名。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.GdbInfo">
            <summary>
            说明：需要裁剪的图层所在的gdb的信息，具体传入参数参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.LayerName">
            <summary>
            说明：需要裁剪的图层名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.XClsType">
            <summary>
            说明：需要裁剪的图层类型。默认值为XClsType.SFeatureCls（简单要素类）。根据上述三个属性可定位到需要裁剪的图层。可赋值枚举类型：XClsType，具体参见XClsType类
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.FClsNameRtn">
            <summary>
            说明：裁剪结果图层的名称。这里需要注意gdb中的图层名不可重名，如果重名则会提示裁剪分析失败。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.Circle">
            <summary>
            说明：需要裁剪的圆形裁剪框。具体赋值可参见Circle类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.Radius">
            <summary>
            说明：裁剪的半径。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.IsNetData">
            <summary>
            是否为网络数据
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.IsReCalculate">
            <summary>
            说明：是否需要重算面积。如无必要则设置为false，可减少裁剪分析的时间
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.ClipFlg">
            <summary>
            说明：裁剪分析的类型（分为两种：内裁为3，外裁为4）。裁剪类型的说明可以参考地理相关资料
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.Username">
            <summary>
            说明：用户所在的用户名。可以不传
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByCircle.UserIP">
            <summary>
            说明：用户所在的ip地址。可以不传
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CClipByLayer">
            <summary>
            该类表示图层与图层进行裁剪分析操作所需要传入的参数类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.GdbInfo">
            <summary>
            说明：被裁剪的图层所在的gdb的信息，具体传入参数参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.LayerName">
            <summary>
            说明：被裁剪的图层名称。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.XClsType">
            <summary>
            说明：裁剪分析的图层类型。默认值为XClsType.SFeatureCls（简单要素类）。根据上述三个属性可定位到需要裁剪的图层。可赋值枚举类型：XClsType，具体参见XClsType类
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.GdbInfoClip">
            <summary>
            说明：裁剪图层所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.ClipLayerName">
            <summary>
            说明：裁剪图层的名称。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.FClsNameRtn">
            <summary>
            说明：裁剪结果图层的名称。这里需要注意gdb中的图层名不可重名，如果重名则会提示裁剪分析失败。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.Radius">
            <summary>
            说明：裁剪的半径。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.IsReCalculate">
            <summary>
            说明：是否需要重算面积。如无必要则设置为false，可减少裁剪分析的时间
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.ClipFlg">
            <summary>
            说明：裁剪分析的类型（分为两种：内裁为3，外裁为4）。裁剪类型的说明可以参考地理相关资料
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.Username">
            <summary>
            说明：用户所在的用户名。可以不传
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CClipByLayer.UserIP">
            <summary>
            说明：用户所在的ip地址。可以不传
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COverlayByPolygon">
            <summary>
            该类是多边形叠加分析功能的传入参数
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.GdbInfo">
            <summary>
            说明：被叠加图层所在的gdb信息,包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.LayerName">
            <summary>
            说明：被叠加分析图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.XClsType">
            <summary>
            说明：被叠加分析图层类型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.FClsNameRtn">
            <summary>
            说明：叠加分析结果图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.Region">
            <summary>
            说明：叠加分析的多边形范围,类型是GRegion
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.Radius">
            <summary>
            说明：误差半径
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.IsReCalculate">
            <summary>
            说明：是否重算面积与周长
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.OverlayType">
            <summary>
            说明：叠加类型（0：合并，1：相交，2：相减，6：对称差）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByPolygon.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COverlayByLayer">
            <summary>
            该类表示图层与图层进行叠加分析操作所需要传入的参数类
            <example>
            <code>
            //初始化叠加分析类
            COverlayByLayer overAnalyze=new COverlayByLayer();
            //设置被叠加图层所在的gdb的信息
            overAnalyze.gdbInfo=new CGdbInfo();
            //设置被叠加图层的名称
            overAnalyze.layerName="行政区.wp";
            //设置叠加图层所在的gdb信息
            overAnalyze.gdbInfoOverlay=new CGdbInfo();
            //设置叠加图层的名称
            overAnalyze.overlayLayerName="水系.wp";
            //设置叠加类型为相交
            overAnalyze.overlayType=1;
            //设置生成的结果图层名称
            overAnalyze.fClsNameRtn="overLayer";
            //设置不重算面积
            overAnalyze.isReCalculate=false;
            //设置叠加的图层类型为简单要素类
            overAnalyze.xClsType=XClsType.SFeatureCls;
            //设置误差半径
            overAnalyze.radius=0.0001;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.GdbInfo">
            <summary>
            说明：被叠加图层所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.LayerName">
            <summary>
            说明：被叠加图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.XClsType">
            <summary>
            说明：叠加分析操作的图层类型
            类型：XClsType
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.FClsNameRtn">
            <summary>
            说明：叠加分析结果图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.GdbInfoOverlay">
            <summary>
            说明：叠加图层所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.OverlayLayerName">
            <summary>
            说明：叠加图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.Radius">
            <summary>
            说明：误差半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.IsReCalculate">
            <summary>
            说明：是否重算面积与周长
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.OverlayType">
            <summary>
            说明：叠加类型（0：合并，1：相交，2：相减，6：对称差）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByLayer.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COverlayByGeometry">
            <summary>
            要素类叠加分析参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.SFeatureGeometry1">
            <summary>
            说明：被叠加要素类的空间信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.SFeatureGeometry2">
            <summary>
            说明：叠加要素类的空间信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.FClsNameRtn">
            <summary>
            说明：叠加分析结果图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.Radius">
            <summary>
            说明：误差半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.IsReCalculate">
            <summary>
            说明：是否重算面积与周长
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.OverlayType">
            <summary>
            说明：叠加类型（0：合并，1：相交，2：相减，6：对称差）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeometry.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COverlayByGeomAndLayer">
            <summary>
            要素类图层与空间信息叠加分析的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.GdbInfo">
            <summary>
            说明：被叠加图层所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.LayerName">
            <summary>
            说明：被叠加图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.XClsType">
            <summary>
            说明：叠加分析操作的图层类型,可赋值枚举类型：XClsType，具体参见XClsType类
            类型：XClsType
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.SFeatureGeometry">
            <summary>
            说明：叠加要素类的空间信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.FClsNameRtn">
            <summary>
            说明：叠加分析结果图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.Radius">
            <summary>
            说明：误差半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.IsReCalculate">
            <summary>
            说明：是否重算面积与周长
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.OverlayType">
            <summary>
            说明：叠加类型（0：合并，1：相交，2：相减，6：对称差）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByGeomAndLayer.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COverlayByFID">
            <summary>
            该类表示根据要素id叠加分析的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.MapName">
            <summary>
            说明：需要操作的文档的名称(主要用于以防万一gis服务器重启之后，文档需要重新打开的
                  情况)。
            类型：COpenMap
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.MapDocIndex1">
            <summary>
            说明：被叠加要素所在的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.LayerIndex1">
            <summary>
            说明：被叠加要素所在的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.FeatureID1">
            <summary>
            说明：被叠加的要素ID
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.MapDocIndex2">
            <summary>
            说明：叠加要素所在的文档索引。（此处不建议修改其默认值）。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.LayerIndex2">
            <summary>
            说明：叠加要素所在的图层索引。
            类型：int
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.FeatureID2">
            <summary>
            说明：叠加的要素ID
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.FClsNameRtn">
            <summary>
            说明：叠加分析结果图层的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.Radius">
            <summary>
            说明：误差半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.IsNetData">
            <summary>
            说明：是否为网络数据
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.IsReCalculate">
            <summary>
            说明：是否重算面积与周长
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.OverlayType">
            <summary>
            说明：叠加类型（0：合并，1：相交，2：相减，6：对称差）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COverlayByFID.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CData7xTo6x">
            <summary>
            7x数据转换为6x数据参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.GdbInfo">
            <summary>
            说明：图层所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.LayerName">
            <summary>
            说明：图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.XClsType">
            <summary>
            说明：图层类型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.FClsNameFile">
            <summary>
            说明：转换后的6x数据的文件名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.FClsNameTbFilePath">
            <summary>
            说明：6x与7数据的符号对照表路径
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.FileType">
            <summary>
            说明：数据类型（0  PNT；1  LIN；2  REG）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.Username">
            <summary>
            说明：用户名
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CData7xTo6x.UserIP">
            <summary>
            说明：用户IP
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetAnalyse">
            <summary>
            该类表示路劲分析功能的参数类
            <example>
            <code>
            //初始化路径分析参数类
            CNetAnalyse analyse = new CNetAnalyse();
            //设置网络类所在的gdb信息
            analyse.GdbInfo = new CGdbInfo();
            //设置网络类的名称
            analyse.NetLayerName = "武汉道路网";
            //设置网络类的网权（建网的时候需要创建其网权）
            analyse.NetWeight = ",Weight1,Weight1";
            //设置路径分析的路径点坐标序列（障碍点根据实际情况设置，可不设置）
            analyse.BarrierDots = "114.2,30.1,114.3,30.2";
            //设置路径分析的半径
            analyse.NearDis = 0.0001;
            //设置网标的类型为线网标
            analyse.FlgType = "line";
            //设置路径分析的模式为用户模式(与系统中的模式相对应)
            analyse.AnalysTypeParam = AnalysType.UserMode.ToString();
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.AnalysTypeParam">
            <summary>
            说明：网络分析类型。具体参见AnalysType类
            /// 初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.GdbInfo">
            <summary>
            <summary>
            说明：网络类所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见
                  CGdbInfo类
            初始值：无
            </summary>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.NetLayerName">
            <summary>
            说明：网络类的图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.FlgType">
            <summary>
            说明：网标的类型。"point"表示点网标，"line"表示线网标
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.RequestDots">
            <summary>
            说明：路径点坐标序列。x坐标与y坐标之间以逗号分隔，各个点之间也以逗号分隔
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.BarrierDots">
            <summary>
            说明：障碍点坐标序列。x坐标与y坐标之间以逗号分隔，各个点之间也以逗号分隔
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.NetWeight">
            <summary>
            说明：网权
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.NearDis">
            <summary>
            说明：路径分析的半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyse.RequireGeomDots">
            <summary>
            说明：是否需要获取拐点信息，true表示需要获取，false表示不需要获取
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CRelationAnalyse">
            <summary>
            几何关系类型判断参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRelationAnalyse.SfGeometry1">
            <summary>
            第一个空间信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRelationAnalyse.SfGeometry2">
            <summary>
            第二个空间信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRelationAnalyse.NearDis">
            <summary>
            说明：容差半径
            初始值:0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CRegionRelationAnalyse">
            <summary>
            该类表示判断区与区之间的拓扑关系功能所传参数类
            <example>
            <code>
            //初始化参数类
             CRegionRelationAnalyse relationAnalyse = new CRegionRelationAnalyse();
             relationAnalyse.Reg0 = new GRegion();
               relationAnalyse.Reg1 = new GRegion();
               //设置分析容差半径
               relationAnalyse.NearDis = 0.001;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionRelationAnalyse.Reg0">
            <summary>
            说明：第一个区信息。具体参数赋值请参见GRegion类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionRelationAnalyse.Reg1">
            <summary>
            说明：第二个区信息。具体参数赋值请参见GRegion类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionRelationAnalyse.NearDis">
            <summary>
            说明：容差半径
            初始值:0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CPntRegRelationAnalyse">
            <summary>
             该类表示判断点与区之间的拓扑关系功能所传参数类
             <example>
             <code>
             //初始化参数类
             CPntRegRelationAnalyse relationAnalyse = new CPntRegRelationAnalyse();
                relationAnalyse.Pnt = new GPoint();
                relationAnalyse.Reg = new GRegion();
                //设置分析容差半径
                relationAnalyse.NearDis = 0.001;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPntRegRelationAnalyse.Pnt">
            <summary>
            说明：点信息。具体参数赋值请参见GPoint类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPntRegRelationAnalyse.Reg">
            /// <summary>
            说明：区信息。具体参数赋值请参见GRegion类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPntRegRelationAnalyse.NearDis">
            <summary>
            说明：容差半径
            初始值:0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLinRegRelationAnalyse">
            <summary>
            该类表示判断线与区之间的拓扑关系功能所传参数类
             <example>
             <code>
             //初始化参数类
             CLinRegRelationAnalyse relationAnalyse = new CLinRegRelationAnalyse();
                relationAnalyse.Lin = new GLine();
                relationAnalyse.Reg = new GRegion();
                //设置分析容差半径
                relationAnalyse.NearDis = 0.001;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLinRegRelationAnalyse.Lin">
            <summary>
            说明：线信息。具体参数赋值请参见GLine类
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLinRegRelationAnalyse.Reg">
            /// <summary>
            说明：区信息。具体参数赋值请参见GRegion类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLinRegRelationAnalyse.NearDis">
            <summary>
            说明：容差半径
            初始值:0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGdbList">
            <summary>
            该类是根据数据源的名称及用户名，
            密码获取该数据源下所有gdb的名称列表功能的参数类
            <example>
            <code>
            //初始化获取数据库列表参数类
            CGetGdbList getGDB = new CGetGdbList();
            //此例获取MapGisLocal下面的所有数据库名称。
                getGDB.GdbSvrName = "MapGisLocal";
              // MapGisLocal数据源为本地数据库不需要输入用户名。可不写。  
              getGDB.GdbSvrUser = "";
              // MapGisLocal数据源为本地数据源不需要输入密码。可不写。
              getGDB.GdbSvrPwds = "";
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGdbList.GdbSvrName">
            <summary>
            说明：获取gdb名称列表所需要的数据源的名称,如MapGisLocal
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGdbList.GdbSvrUser">
            <summary>
            说明：上述数据源登陆所需要的用户名。本地数据源（MapGisLocal）可不传
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGdbList.GdbSvrPwds">
            <summary>
            说明：上述数据源登陆所需要的密码。本地数据源（MapGisLocal）可不传
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetListName">
            <summary>
            获取图层或需要的字符串的返回值。一般用于获取gdb名称列表，gdb数据源列表，
            图层列表等函数的返回值
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法。
            //初始化返回值类
            CGetListName listName = new CGetListName();
            //初始化列表数组
            listName.Name = new string[3];
            //说明其数组元素为string
            listName.Name[0] = "MapGisLocal";
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetListName.Name">
            <summary>
            说明：名称列表。每个数组元素为String类型。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetXClsList">
            <summary>
            该类表示获取指定数据源内指定GDB下的某类图层名称列表的参数类
            <example>
            <code>
            //初始化类
            CGetXClsList getList = new CGetXClsList();
            //设置需要获取的图层列表所在的数据源名称
            getList.GdbSvrName = "MapGisLocal";
            //设置需要获取的图层列表所在的数据源的用户名
             getList.GdbSvrUser = "";
             //设置需要获取的图层列表所在的数据源的密码
            getList.GdbSvrPwds = "";
            //设置需要获取的图层列表所在的数据库
            getList.GdbName = "world";
            getList.XclsType = XClsType.SFeatureCls;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsList.GdbSvrName">
            <summary>
            说明：gdb信息中的数据源名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsList.GdbSvrUser">
            <summary>
            说明：gdb信息中的用户名。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsList.GdbSvrPwds">
            <summary>
            说明：gdb信息中的密码。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsList.GdbName">
            <summary>
            说明：gdb信息中的数据库名称
            /// 初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsList.XclsType">
            <summary>
            说明：图层类型。可赋值枚举类型：XClsType，具体参见XClsType类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetRdsetList">
            <summary>
            获取要素数据集列表参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRdsetList.GdbSvrName">
            <summary>
            说明：gdb信息中的数据源名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRdsetList.GdbSvrUser">
            <summary>
            说明：gdb信息中的用户名。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRdsetList.GdbSvrPwds">
            <summary>
            说明：gdb信息中的密码。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRdsetList.GdbName">
            <summary>
            说明：gdb信息中的数据库名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetXClsListByRds">
            <summary>
            根据要素数据集的名称及类型获取X类列表
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.FdsName">
            <summary>
            说明：要素数据集的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.GdbSvrName">
            <summary>
            说明：gdb信息中的数据源名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.GdbSvrUser">
            <summary>
            说明：gdb信息中的用户名。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.GdbSvrPwds">
            <summary>
            说明：gdb信息中的密码。本地数据源不需要赋该值，网络数据源需要输入用户名和密码
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.GdbName">
            <summary>
            说明：gdb信息中的数据库名称
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetXClsListByRds.XclsType">
            <summary>
            说明：图层类型。可赋值枚举类型：XClsType，具体参见XClsType类
             初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetProjectDots">
            <summary>
            该类表示对于传入的多点进行投影，返回投影后的点数组。此类为该功能的返回值类
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
            //初始化类
            CGetProjectDots projectDots = new CGetProjectDots();
            //初始化数组
            projectDots.DesDots = new Dot_2D[2];
            //初始化数组元素
            projectDots.DesDots[0] = new Dot_2D();
            projectDots.DesDots[1] = new Dot_2D();
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetProjectDots.DesDots">
            <summary>
            说明：返回投影后的点数组。每个数组元素类型为Dot_2D类。其说明可参见Dot_2D类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CProjectDots">
            <summary>
            该类表示点的投影功能所传的参数类
            <example>
            <code>
            //初始化投影参数类
             CProjectDots project = new CProjectDots();
             //设置源投影参数
             project.SrcProjParam = new ProjectParam();
             //设置目的投影参数
             project.DesProjParm = new ProjectParam();
             //设置需要投影的点坐标
             project.InputDots = new Dot_2D[1];
             project.InputDots[0] = new Dot_2D();
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectDots.SrcProjParam">
            <summary>
            说明：原始参考系信息。具体赋值请参见ProjectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectDots.DesProjParm">
            <summary>
            说明：目的参考系信息。具体赋值请参见ProjectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectDots.InputDots">
            <summary>
            说明：输入点序列。各个数组元素类型为Dot_2D类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CProjectLayer">
            <summary>
            文件投影参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.SrcProjParam">
            <summary>
            说明：原始参考系信息。具体赋值请参见ProjectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.SsrcGdbInfo">
            <summary>
            原始gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.SrcLayerInfo">
            <summary>
            原始图层信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.DesProjParm">
            <summary>
            说明：目标参考系信息。具体赋值请参见ProjectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.DesGdbInfo">
            <summary>
            目标gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayer.DesLayerInfo">
            <summary>
            目标图层信息
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CProjectLayerBySrsID">
            <summary>
            根据参考系id投影参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerBySrsID.SrcGdbInfo">
            <summary>
            原始gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerBySrsID.SrcLayerInfo">
            <summary>
            原始图层信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerBySrsID.DesSrsID">
            <summary>
            目标参考系id
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerBySrsID.DesGdbInfo">
            <summary>
            目标gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerBySrsID.DesLayerInfo">
            <summary>
            目标图层信息
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CProjectLayerToDataSet">
            <summary>
            根据投影参考系id将数据投影到目标要素数据集内参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.DesSetName">
            <summary>
            目标要素数据集的名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.SrcGdbInfo">
            <summary>
            原始gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.SrcLayerInfo">
            <summary>
            原始图层信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.DesSrsID">
            <summary>
            目标参考系id
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.DesGdbInfo">
            <summary>
            目标gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CProjectLayerToDataSet.DesLayerInfo">
            <summary>
            目标图层信息
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetProjectParamBySrsID">
            <summary>
            根据参考系id获取某个gdb下的投影参数参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetProjectParamBySrsID.GdbInfo">
            <summary>
            说明：gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetProjectParamBySrsID.DesSrsID">
            <summary>
            说明：要获取的参考系id
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetJWDArea">
            <summary>
            获取经纬度面积参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetJWDArea.Region">
            <summary>
            区几何信息，类型为GRegion
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetJWDArea.ProjAngleUnit">
            <summary>
            弧度单位，其值为枚举类型EnumProjAngleUnit
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetJWDArea.SphereType">
            <summary>
            椭球类型，其值为枚举类型EnumSphereType
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetPolygonArea">
            <summary>
            计算区域面积参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetPolygonArea.Region">
            <summary>
            说明：需要传入的多边形几何范围
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetPolygonArea.SrcProjParam">
            <summary>
            说明：源投影参考系参数。具体赋值请参见ProjectParam类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetMapFrameNo">
            <summary>
            根据经纬度获取当前点所在图幅号
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapFrameNo.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapFrameNo.Latitude">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetMapFrameNo.MapScale">
            <summary>
            国家标准比例尺类型
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CPrintMap">
            <summary>
            打印地图参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.LayerAccessInfo">
            <summary>
            说明：需要打印的数据所在的gdb及图层信息
            具体设置请参见CLayerAccessInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.StrFileName">
            <summary>
            文件路径加文件名
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.Resolution">
            <summary>
            分辨率
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.ColorMode">
            <summary>
            颜色模式
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.MapRect">
            <summary>
            需要打印的地图范围（逻辑范围）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.LayerRect">
            <summary>
            需要打印的纸张个数的范围
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.PageRect">
            <summary>
            纸张的范围（像素值）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPrintMap.SOrig">
            <summary>
            是否还原显示
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetImage">
            <summary>
            该类表示在打开地图文档的前提下，想要单独获取地图文档中某个图层一定范围内的图片所传的参数类
            <example>
            <code>
            //初始化获取图像类
            CGetImage getImage = new CGetImage();
            //初始化图层访问信息类，需要设置出图的图层信息
            getImage.LayerAccessInfo = new CLayerAccessInfo();
            //此例设置出图的图像高为300像素
            getImage.Height = 300;
            //此例设置出图的图像宽为400像素
            getImage.Width = 400;
            //设置图像出图的逻辑范围
            getImage.DisRect = new ZDIMS.BaseLib.Rect();
            //此例设置出图的图片类型为gif图
            getImage.ImgFormat = ImgFormat.gif;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetImage.DisRect">
            <summary>
            说明：需要出图的范围。具体传参数请参见Rect类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetImage.LayerAccessInfo">
            <summary>
            说明：需要出图的图层的相关信息，包括图层所在的gdb信息，图层名称及图层类型。
            具体设置请参见CLayerAccessInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetImage.Width">
            <summary>
            说明：需要出图的图像宽
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetImage.Height">
            <summary>
            说明：需要出图的图像高
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetImage.ImgFormat">
            <summary>
            说明：出图的图像类型（gif，jpg，png）。可输入枚举类型ImgFormat
            其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSelectAndGetRlt">
            <summary>
            该类表示对传入的数据打开并根据传入的查询条件并获取属性集合
            <example>
            <code>
             //初始化参数类
             CSelectAndGetRlt select = new CSelectAndGetRlt();
             //设置需要打开的图层信息
             select.LayerAccessInfo = new CLayerAccessInfo();
             //设置需要获取的结果页码
             select.PageCount = 0;
             //设置需要获取的结果每页显示的条数
             select.PageSize = 20;
             //设置查询条件
             select.SelectParm = new CWebSelectParam();
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSelectAndGetRlt.LayerAccessInfo">
            <summary>
            说明：需要打开的图层数据信息。具体参见CLayerAccessInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSelectAndGetRlt.SelectParm">
            <summary>
            说明：需要查询的条件，参数赋值请参见CWebSelectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSelectAndGetRlt.PageCount">
            <summary>
            说明：需要获取结果的页码
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSelectAndGetRlt.PageSize">
            <summary>
             说明：每页获取的查询结果条数
             初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetAttRlt">
            <summary>
            查询并返回结果的返回值类（该类主要用于行业版中功能，目前已过时，请使用新函数）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAttRlt.Count">
            <summary>
            返回的查询结果个数
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAttRlt.AttDS">
            <summary>
            返回的属性信息
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGeomSet">
            <summary>
            查询并返回结果的返回值类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomSet.Count">
            <summary>
            返回的查询结果个数
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomSet.SfGeomSet">
            <summary>
            返回的空间信息
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerBound">
            <summary>
            获取某个数据的范围参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerBound.LayerAccessInfo">
            /// <summary>
            说明：需要操作的图层数据信息。具体参见CLayerAccessInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerBound.LayerIndex">
            <summary>
            说明：需要操作的某图层索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetReduceRadius">
            <summary>
            设置抽吸因子参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetReduceRadius.ReduceRadius">
            <summary>
            抽吸因子
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetReduceRadius.MapName">
            <summary>
            说明：需要操作的地图文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetReduceRadius.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CReduceDots">
            <summary>
            抽吸点参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReduceDots.Dot2dArr">
            <summary>
            需要抽吸的点数组
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReduceDots.Reduce">
            <summary>
            抽吸因子
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDots">
            <summary>
            抽吸点返回值类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDots.Dot2dArr">
            <summary>
            抽吸后的点数组
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CBufferByFIDArr">
            <summary>
            根据要素id信息集进行缓冲区分析的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFIDArr.ResultLayerType">
            <summary>
            说明：缓冲分析结果图层类型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFIDArr.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFIDArr.BufferRadius">
            <summary>
            说明：缓冲半径。对空间信息进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFIDArr.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CBufferByFIDArr.GetObjByID">
            <summary>
            说明：需要传入的要素id信息集
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetTopoEdit">
            <summary>
            该类表示在文档开发方式下，设置是否拓扑编辑参数类
            <example>
            <code>
            //初始化参数类
            CSetTopoEdit setTopoEdit = new CSetTopoEdit();
            //设置图层索引
            setTopoEdit.LayerIndex = 0;
            //设置该图层为拓扑编辑状态
            setTopoEdit.IsTopoEdit = true;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetTopoEdit.MapName">
            <summary>
            说明：需要操作的文档的名称(主要用于以防万一gis服务器重启之后，文档需要重新打开的情况)
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetTopoEdit.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetTopoEdit.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetTopoEdit.IsTopoEdit">
            <summary>
            说明：是否为拓扑编辑状态
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GetObjByID">
            <summary>
            要素ID信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.GetObjByID.SymbolNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.GetObjByID.Width">
            <summary>
            说明：需要出图的图像宽
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.GetObjByID.Height">
            <summary>
            说明：需要出图的图像高
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.GetObjByID.ImgFormat">
            <summary>
            说明：出图的图像类型（gif，jpg，png）。可输入枚举类型ImgFormat。其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLineImage">
            <summary>
            获取线型图片参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLineImage.LinstyID">
            <summary>
            说明：线型id
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLineImage.LinstyID2">
            <summary>
            说明：辅助线型id
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLineImage.Width">
            <summary>
            说明：需要出图的图像宽
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLineImage.Height">
            <summary>
            说明：需要出图的图像高
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLineImage.ImgFormat">
            <summary>
            说明：出图的图像类型（gif，jpg，png）。可输入枚举类型ImgFormat。其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetRegImage">
            <summary>
            获取区子图图片参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRegImage.PatID">
            <summary>
            说明：子图id
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRegImage.Width">
            <summary>
            说明：需要出图的图像宽
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRegImage.Height">
            <summary>
            说明：需要出图的图像高
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetRegImage.ImgFormat">
            <summary>
            说明：出图的图像类型（gif，jpg，png）。可输入枚举类型ImgFormat。其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetMapSrsByID">
            <summary>
            根据参考系id设置文档的参考系参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapSrsByID.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapSrsByID.GdbInfo">
            <summary>
            说明：需要操作的图层的gdb信息，包括gdb数据源，数据库信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapSrsByID.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetMapSrsByID.DesSrsID">
            <summary>
            投影的目标参考系id
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetAnnLayerScaleXY">
            <summary>
            设置注记类显示比率参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAnnLayerScaleXY.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAnnLayerScaleXY.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAnnLayerScaleXY.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAnnLayerScaleXY.SymbleScale">
            <summary>
            显示比率
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttStatistic">
            <summary>
            属性统计参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAttStatistic.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAttStatistic.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAttStatistic.SelectParm">
            <summary>
            说明：查询参数信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAttStatistic.StatisticParam">
            <summary>
            说明：统计参数
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAddField">
            <summary>
            添加属性字段参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddField.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddField.FieldName">
             <summary>
            说明： 属性字段名称
             </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddField.FieldType">
             <summary>
            说明： 属性字段类型
             </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddField.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddField.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDelField">
            <summary>
            删除属性字段参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelField.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelField.FieldName">
            <summary>
            说明：属性字段名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelField.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelField.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateField">
            <summary>
            更新属性字段参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateField.MapName">
            <summary>
            说明：需要操作的文档名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateField.AttStruct">
            <summary>
            说明：需要更新的属性信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateField.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateField.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetAnalyseONFlex">
            <summary>
            该类表示网络分析功能的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.AnalysTypeParam">
            <summary>
            说明：网络分析类型。具体参见AnalysType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.GdbInfo">
            <summary>
            说明：网络类所在的gdb的信息，包括gdb的名称，gdb数据源的名称。具体赋值请参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.NetLayerName">
            <summary>
            说明：网络类的图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.FlgType">
            <summary>
            说明：网标的类型。"point"表示点网标，"line"表示线网标
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.RequestDots">
            <summary>
            说明：路径点坐标序列。x坐标与y坐标之间以逗号分隔，各个点之间也以逗号分隔
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.BarrierDots">
            <summary>
            说明：障碍点坐标序列。x坐标与y坐标之间以逗号分隔，各个点之间也以逗号分隔
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.NetWeight">
            <summary>
            说明：网权
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.NearDis">
            <summary>
            说明：路径分析的半径
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CNetAnalyseONFlex.RequireGeomDots">
            <summary>
            说明：是否需要获取拐点信息，true表示需要获取，false表示不需要获取
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapSelectAndUpdate">
            <summary>
            统改要素的属性参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.MapDocIndex">
            <summary>
            说明：需要操作的文档索引
            初始值：0
            
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.AttStructIndex">
            <summary>
            说明：要修改的属性参数的索引
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.NewValue">
             <summary>
            说明： 要素的新属性值
            初始值：无
             </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.SelectParam">
            <summary>
            说明：查询参数。具体参数请参见CWebSelectParam类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMapSelectAndUpdate.MapName">
            <summary>
            说明：需要操作的文档索引
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMultiBufferByGeometry">
            <summary>
            多要素缓冲分析参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.TraceRadius">
            <summary>
            说明：缓冲半径。对空间信息进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.SfGeometry">
            <summary>
            说明：多要素空间信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.AttStrct">
            <summary>
            说明：要素的属性信息结构
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.AttRows">
            <summary>
            说明：要素的属性记录信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.BufferRadius">
            <summary>
            说明：缓冲半径。对空间信息进行缓冲区分析时必须设置的属性。设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，其半径的具体含义可参见平台详细说明手册或者地理参考资料
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，要素类。参数传递具体参见XClsType类详细说明
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CMultiBufferByGeometry.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，如果重名则会提示缓冲区分析失败
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAddGisTheme">
            <summary>
            加专题图参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddGisTheme.MapName">
            <summary>
            说明：需要操作的文档的名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddGisTheme.MapDocIndex">
            <summary>
            说明：需要操作的文档索引。（此处不建议修改其默认值）
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddGisTheme.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddGisTheme.ThemeParam">
            <summary>
            说明：专题图参数类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDataSetClass">
            <summary>
            创建一个数据集参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDataSetClass.GdbInfo">
            <summary>
            说明：gdb 的信息，包括gdb 的名称，gdb 数据源的名称。具体赋值请参见CGdbInfo 类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDataSetClass.DsName">
            <summary>
            说明：要创建的数据集名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateClsName">
            <summary>
            修改图层的名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateClsName.GdbInfo">
            <summary>
            说明：gdb 的信息，包括gdb 的名称，gdb 数据源的名称。具体赋值请参见CGdbInfo 类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateClsName.XclsType">
            <summary>
            说明：需要修改的的图层类型，可赋值枚举类型：XClsType，具体参见XClsType 类。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateClsName.OldClsName">
            <summary>
            说明：需要修改的图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateClsName.NewClsName">
            <summary>
            说明：新的图层名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateDataSetName">
            <summary>
            修改数据集的名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateDataSetName.GdbInfo">
            <summary>
            说明：需要修改数据集所在的gdb 的信息，包括gdb 的名称，gdb 数据源的名称。具体赋值请参
             见CGdbInfo 类
             初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateDataSetName.OlddsName">
            <summary>
            说明：需要修改的数据集名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateDataSetName.NewdsName">
            <summary>
            说明：新的数据集名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.OverlayType">
            <summary>
            叠加类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OverlayType.Combination">
            <summary>
            合并运算
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OverlayType.Intersect">
            <summary>
            相交运算
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OverlayType.Subtract">
            <summary>
            相减运算
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OverlayType.Symmetrical">
            <summary>
            /// 对称差运算
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.FlgType">
            <summary>
            网标的类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.FlgType.point">
            <summary>
            点网标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.FlgType.line">
            <summary>
            线网标
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ClipType">
            <summary>
            裁剪类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ClipType.InnerClip">
            <summary>
            内裁
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ClipType.OuterClip">
            <summary>
            外裁
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebGeomType">
            <summary>
            Web几何类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Point">
            <summary>
            点
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Line">
            <summary>
            线
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Polygon">
            <summary>
            多边形
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGeomType.Arc">
            <summary>
            弧段
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SelectionType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SelectionType.Condition">
            <summary>
            条件查询
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SelectionType.SpatialRange">
            <summary>
            简单查询
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SelectionType.Both">
            <summary>
            组合查询
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.XClsType">
            <summary>
            枚举：X类的类型,图层类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.FeatureCls">
            <summary>
            要素类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.SFeatureCls">
            <summary>
            简单要素类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.ObjectCls">
            <summary>
            对象类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.AnnotationCls">
            <summary>
            注记类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.RelationCls">
            <summary>
            关系类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.RasterDataset">
            <summary>
            栅格数据集
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.RasterCatalog">
            <summary>
            栅格目录
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.GNetCls">
            <summary>
            几何网络
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.GNetSet">
            <summary>
            几何网络集
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.AddrBaseCls">
            <summary>
            地名库
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XClsType.Unknown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GInfoType">
            <summary>
            枚举：图形参数类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GInfoType.PntInfo">
            <summary>
            /// 点几何实体
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GInfoType.LinInfo">
            <summary>
            线几何实体
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GInfoType.RegInfo">
            <summary>
            区几何实体
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ImgFormat">
            <summary>
            枚举：图像类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ImgFormat.gif">
            <summary>
            gif
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ImgFormat.png">
            <summary>
            png
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ImgFormat.jpg">
            <summary>
            jpg
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SFclsGeomType">
            <summary>
            枚举：简单要素类几何约束形态
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFclsGeomType.Pnt">
            <summary>
            点几何实体
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFclsGeomType.Lin">
            <summary>
            线几何实体
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFclsGeomType.Reg">
            <summary>
            区几何实体
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFclsGeomType.Unknown">
            <summary>
            无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumLayerStatus">
            <summary>
            枚举：图层显示状态
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumLayerStatus.Visiable">
            <summary>
            可见
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumLayerStatus.Invisiable">
            <summary>
            不可见
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumLayerStatus.Selectable">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumLayerStatus.Editable">
            <summary>
            编辑
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.XDBType">
            <summary>//added by wjy 2009-01-14
            数据库类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XDBType.SqlServer">
            <summary>
            sql数据库
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XDBType.Oracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XDBType.MySql">
            <summary>
            MySql数据库
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XDBType.ODBC">
            <summary>
            ODBC
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.XDBType.OLEDB">
            <summary>
            OLEDB
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.OpType">
            <summary>
            数据操作类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OpType.Add">
            <summary>
             增加数据
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OpType.Delete">
            <summary>
            删除数据
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OpType.Update">
            <summary>
            更新数据
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ISShowArc">
            <summary>
            是否显示弧段
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ISShowArc.Reg">
            <summary>
             只显示填充区域
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ISShowArc.Arc">
            <summary>
            只显示弧段
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ISShowArc.All">
            <summary>
            两者都显示
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.AnalysType">
            <summary>
            路径分析类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeCommwayPrefer">
            <summary>
            系统模式-普通公路优先
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeHighWayPrefer">
            <summary>
            系统模式-高速公路优先
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeMinCost">
            <summary>
            系统模式-最少花费
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeMinDis">
            <summary>
            系统模式-最短路径
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeMinTime">
            <summary>
            系统模式-最短时间
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.SysModeSysRecommend">
            <summary>
            系统模式-系统推荐
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnalysType.UserMode">
            <summary>
            用户模式
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.OutputType">
            <summary>
            换乘方案输出格式类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OutputType.xml">
            <summary>
            xml格式字符串
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OutputType.str">
            <summary>
            字符串形式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.OutputType.json">
            <summary>
            JSON格式
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EncodeType">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EncodeType.escape">
            <summary>
            escape编码方式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EncodeType.uriEncode">
            <summary>
            uriEncode编码方式
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GoogleLayerType">
            <summary>
            Google 地图的类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GoogleLayerType.BasicMap">
            <summary>
            基本地图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GoogleLayerType.TerrainMap">
            <summary>
            地形图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GoogleLayerType.RasterMap">
            <summary>
            遥感图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GoogleLayerType.RoadMap">
            <summary>
            道路及地名数据
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.TianDiLayerType">
            <summary>
            天地图地图类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.TianDiLayerType.VectorLayer">
            <summary>
            矢量图层
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.TianDiLayerType.RasterLayer">
            <summary>
            遥感图层
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.TianDiLayerType.AnnoLayer">
            <summary>
            注记图层
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.IWebGeometry">
            <summary>
            该类表示接口： 空间数据类型。一般不需要用这个类
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.IWebGeometry.GetGeomType">
            <summary>
            接口中实现方法
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.IWebGisTheme">
            <summary>
            专题图接口
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.IWebGisTheme.GetThemeType">
            <summary>
            接口中实现方法
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.Dot_2D">
            <summary>
            结构：2维点
            <example>
            <code>
             Dot_2D dot = new Dot_2D();//初始化点结构
             dot.x = 114.2;//为点的x，y坐标赋值
             dot.y = 30.5;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Dot_2D.x">
            <summary>
            x
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Dot_2D.y">
            <summary>
            y
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_2D.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_2D.#ctor(System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_2D.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType. Point。WebGeomType 为枚举类
             型，空间查询类型。具体参见枚举类WebGeomType
            </summary>
            <returns>return WebGeomType.Point</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Dot_3D">
            <summary>
            结构：3维点
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Dot_3D.x">
            <summary>
            x
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Dot_3D.y">
            <summary>
            y
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Dot_3D.z">
            <summary>
            z
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_3D.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Dot_3D.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType. Point。WebGeomType 为枚举类
             型，空间查询类型。具体参见枚举类WebGeomType
            </summary>
            <returns>return WebGeomType.Point</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Rect">
            <summary>
            矩形边界
            <example>
            <code>
            ZDIMS.BaseLib.Rect rect = new ZDIMS.BaseLib.Rect();//初始化矩形类
            rect.xmax = 114.9;
            rect.xmin = 114.1;
            rect.ymax = 30.5;
            rect.ymin = 30.1;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Rect.xmin">
            <summary>
            最小 x 值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Rect.ymin">
            <summary>
            最小 y值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Rect.xmax">
            <summary>
            最大 x 值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Rect.ymax">
            <summary>
            最大 y 值
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Rect.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="xmin">最小 y值</param>
            <param name="ymin">最小 y值</param>
            <param name="xmax">最大 x 值</param>
            <param name="ymax">最大 y 值</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Rect.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType. Rect。WebGeomType 为枚举类
            型，空间查询类型。具体参见枚举类WebGeomType。
            </summary>
            <returns>return WebGeomType.Rect</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Arc">
            <summary>
            结构：该类主要构造弧段的结构。弧段由多个点构成。
            <example>
            <code>
             Arc arc = new Arc();//初始化弧段定义
             arc.Dots = new Dot_2D[1];//初始化弧段的属性：点
             arc.Dots[0] = new Dot_2D();//初始化点的数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Arc.Dots">
            <summary>
            说明：该弧段中的多个点，数组类型。每个数组元素的类型是Dot_2D类型。Dot_2D类型的详细说明请参见Dot_2D类
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Arc.ArcID">
            <summary>
            说明：该弧段的弧段id。此属性在构建弧段的过程中可以不设置，主要用于对数据进行拓扑重建功能后，系统任意分配给每个弧段的id
            初始值：0
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Arc.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Arc.#ctor(ZDIMS.BaseLib.Dot_2D[],System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="dots">弧段中的多个点</param>
            <param name="arcID">弧段id</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Arc.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType. Rect。WebGeomType 为枚举类
            型，空间查询类型。具体参见枚举类WebGeomType。
            </summary>
            <returns>return WebGeomType.Line</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.AnyLine">
            <summary>
            结构：该类主要构造任意线的结构，比如单线，多线等。线由多个弧段构成
            <example>
            <code>
            AnyLine line = new AnyLine();//初始化线定义
            line.Arcs = new Arc[1];      //初始化线的属性：弧段
            line.Arcs[0] = new Arc();    //初始化弧段的数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AnyLine.Arcs">
            <summary>
            说明：该任意线中的弧段，数组类型。每个数组元素的类型是Arc类型。Arc类型的详细说明请参见Arc类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.AnyLine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.AnyLine.#ctor(ZDIMS.BaseLib.Arc[])">
            <summary>
            构造函数
            </summary>
            <param name="arcs">任意线中的弧</param>
        </member>
        <member name="M:ZDIMS.BaseLib.AnyLine.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType.Line。WebGeomType为枚举类型，空间查询类型。具体参见枚举类WebGeomType。用于对于空间查询时需要传入查询类型，线查询或者矩形查询，此时需要获取空间查询类型传入。具体参数传递说明请参见查询类CWebSelectParam类
            </summary>
            <returns>return WebGeomType.Line</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Polygon">
            <summary>
            结构：多边形
            <example>
            <code>
            //初始化区结构
            ZDIMS.BaseLib.Polygon reg = new ZDIMS.BaseLib.Polygon();
            reg.Dots = new Dot_2D[2];
            reg.Dots[0] = new Dot_2D();
            reg.Dots[1] = new Dot_2D();
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Polygon.Dots">
            <summary>
            说明：多边形上的点。数组元素类型为Dot_2D类，具体赋值请参见Dot_2D类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Polygon.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Polygon.#ctor(ZDIMS.BaseLib.Dot_2D[])">
            <summary>
            构造函数1
            </summary>
            <param name="dots"></param>
        </member>
        <member name="M:ZDIMS.BaseLib.Polygon.#ctor(System.Double[],System.Double[])">
            <summary>
            构造函数2
            </summary>
            <param name="XDots">x数组</param>
            <param name="YDots">y数组</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Polygon.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType. Polygon。WebGeomType为枚举类型，空间查询类型。具体参见枚举类WebGeomType
            </summary>
            <returns>return WebGeomType.Polygon</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Circle">
            <summary>
             结构：圆，该类表示一种数据结构为圆。由半径及圆心构成
             <example>
             <code>
            ZDIMS.BaseLib.Circle circle = new Circle();//初始化圆数据结构
            circle.Center = new Dot_2D();//设置圆心坐标
            circle.Radius = 0.003;//设置半径 
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Circle.Center">
            <summary>
            说明：圆心的点坐标
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Circle.Radius">
            <summary>
            说明：半径的值
            初始值：0
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Circle.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Circle.#ctor(ZDIMS.BaseLib.Dot_2D,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="center">中心点</param>
            <param name="radius">半径</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Circle.GetDots">
            <summary>
            说明：获取圆上点坐标。将圆看做120边形的多边形结构，获取其各个点的坐标。返回值数组的数组元素类型为Dot_2D。具体获取其点坐标请参考Dot_2D类
            
            </summary>
            <returns>return Dot_2D[]</returns>
        </member>
        <member name="M:ZDIMS.BaseLib.Circle.GetGeomType">
            <summary>
            说明：获取空间查询类型。返回固定值：WebGeomType.Circle。EWebGeomType为枚举类型，空间查询类型。具体参见枚举类WebGeomType。用于对于空间查询时需要传入查询类型，线查询或者矩形查询，此时需要获取空间查询类型传入。具体参数传递说明请参见查询类CWebSelectParam类
            
            </summary>
            <returns>return WebGeomType.Circle</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.Ellipse">
            <summary>
             结构：弧段
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Ellipse.Rect">
            <summary>
            定义椭圆的边界
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Ellipse.StartAngle">
            <summary>
            从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.Ellipse.SweepAngle">
            <summary>
            从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。 
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Ellipse.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.Ellipse.#ctor(ZDIMS.BaseLib.Rect,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="rect">椭圆的边界</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:ZDIMS.BaseLib.Ellipse.GetGeomType">
            <summary>
            获取web几何类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZDIMS.BaseLib.GPoint">
            <summary>
            结构：点几何
            <example>
            <code>
            //初始化点结构
            GPoint point= new GPoint();
            point.Dot=new Dot_2D();
            </code></example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GPoint.Dot">
            <summary>
            点(多点或多点)
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GPoint.GID">
            <summary>
            几何ID
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GPoint.#ctor(ZDIMS.BaseLib.Dot_2D)">
            <summary>
            构造函数1
            </summary>
            <param name="pnt">点数</param>
        </member>
        <member name="M:ZDIMS.BaseLib.GPoint.#ctor(ZDIMS.BaseLib.Dot_2D,System.Int64)">
            <summary>
            构造函数2
            </summary>
            <param name="pnt">点数</param>
            <param name="gid">几何ID</param>
        </member>
        <member name="M:ZDIMS.BaseLib.GPoint.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GLine">
            <summary>
            结构：线几何
            //初始化线结构
            GLine line= new GLine();
            line.Line=new AnyLine();
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GLine.Line">
            <summary>
            线
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GLine.GID">
            <summary>
            线的几何ID
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GLine.#ctor(ZDIMS.BaseLib.AnyLine,System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="lin">线</param>
            <param name="gid">线的几何ID</param>
        </member>
        <member name="M:ZDIMS.BaseLib.GLine.#ctor(ZDIMS.BaseLib.AnyLine)">
            <summary>
            构造函数2
            </summary>
            <param name="lin">线</param>
        </member>
        <member name="M:ZDIMS.BaseLib.GLine.#ctor">
            <summary>
            构造函数3
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GRegion">
            <summary>
            结构：区几何
            <example>
            <code>
            //初始化多区结构
            GRegion reg= new GRegion();
            reg.Rings=new AnyLine[1];
            reg.Rings[0]=new AnyLine();
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GRegion.Rings">
            <summary>
            区(单圈或多圈)
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GRegion.GID">
            <summary>
            几何ID
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GRegion.#ctor">
            <summary>
            空构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GRegion.#ctor(ZDIMS.BaseLib.AnyLine[],System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="linArr">区</param>
            <param name="gid">几何ID</param>
        </member>
        <member name="M:ZDIMS.BaseLib.GRegion.#ctor(ZDIMS.BaseLib.AnyLine[])">
            <summary>
            构造函数2
            </summary>
            <param name="linArr">区</param>
        </member>
        <member name="T:ZDIMS.BaseLib.UserDrawingType">
            <summary>
            用户绘图类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Point">
            <summary>
            点
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.PolyLine">
            <summary>
            折线
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Arc">
            <summary>
            弧段
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Polygon">
            <summary>
            多边形
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.UserDrawingType.Words">
            <summary>
            文字
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.DrawingCoorType">
            <summary>
            用户绘图传入坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DrawingCoorType.Logical">
            <summary>
            逻辑坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DrawingCoorType.Screen">
            <summary>
            窗口坐标
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.IWebGraphicsInfo">
            <summary>
            图形参数信息接口   
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.IWebGraphicsInfo.GetInfoType">
            <summary>
            获取图形参数类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZDIMS.BaseLib.WebGraphicsInfo">
            <summary>
            图形参数信息
            <example>
            <code>
            WebGraphicsInfo graphicsInfo = new WebGraphicsInfo();//初始化图形参数类
            graphicsInfo.InfoType = GInfoType.PntInfo;//设置图形参数类型
            graphicsInfo.PntInfo = new CPointInfo();
            </code></example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGraphicsInfo.InfoType">
            <summary>
            图层类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGraphicsInfo.PntInfo">
            <summary>
            点几何图形参数信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGraphicsInfo.LinInfo">
            <summary>
            线几何图形参数信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGraphicsInfo.RegInfo">
            <summary>
            区几何图形参数信息
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CRegionInfo">
            <summary>
            区几何图形参数结构
            <example>
            <code>
             CRegionInfo regionInfo = new CRegionInfo();//初始化区样式信息类
             regionInfo.FillColor = 1;//设置区填充颜色
             regionInfo.PatID = 1;//设置填充图案ID
             regionInfo.PatHeight = 21;//设置填充图案高度
             regionInfo.PatWidth = 21;//设置填充图案宽度
             regionInfo.PatColor = 1;//设置填充图案颜色
             regionInfo.EndColor = 1;//设置结束填充色
            </code></example>
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CRegionInfo.#ctor">
            <summary>
            说明：构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CRegionInfo.GetInfoType">
            <summary>
            说明：返回样式信息的类型：区信息（GInfoType. RegInfo），具体可参见GInfoType类
            </summary>
            <returns>return GInfoType.RegInfo</returns>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.PatID">
            <summary>
            说明：填充图案ID
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.FillMode">
            <summary>
            填充模式
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.FillColor">
            <summary>
            填充颜色
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.EndColor">
            <summary>
            结束填充色
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.PatHeight">
            <summary>
            填充图案高度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.PatWidth">
            <summary>
            填充图案宽度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.PatAngle">
            <summary>
            填充图案角度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.PatColor">
            <summary>
            填充图案颜色
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.OutPenWidth">
            <summary>
            填充图案笔宽
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CRegionInfo.OverMethod">
            <summary>
            覆盖方式
            初始值：-1
            
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CPointInfo">
             <summary>
            点几何图形参数结构
            
             </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CPointInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CPointInfo.space">
             <summary>
            字符间隔
             初始值：-1
             </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CPointInfo.GetInfoType">
            <summary>
            说明：返回样式信息的类型：点信息（ GInfoType.PntInfo），具体可参见GInfoType类
            </summary>       
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.SymID">
            <summary>
            子图ID
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.SymHeight">
            <summary>
            子图高度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.SymWidth">
            <summary>
            子图宽度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.Angle">
            <summary>
            子图角度
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.Color">
            <summary>
            子图颜色
            初始值：-1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CPointInfo.Space">
            <summary>
            间隔距离
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLineInfo">
            <summary>
            线几何图形参数结构
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CLineInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CLineInfo.GetInfoType">
            <summary>
            说明：返回样式信息的类型：点信息（GInfoType.LinInfo），具体可参见GInfoType类
            
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.LinWidth">
            <summary>
            线宽度
            初始值：1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.Color">
            <summary>
            线颜色
            初始值：1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.LinStyleID">
            <summary>
            线型ID
            初始值：1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.LinStyleID2">
            <summary>
            辅助线型ID
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.Xscale">
            <summary>
            x比例系数
            初始值：1
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLineInfo.Yscale">
            <summary>
            y比例系数
            初始值：1
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMessageQueue">
            <summary>
            消息信息的定义
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.SrcNode">
            <summary>
            消息发送结点的ID
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.DesNode">
            <summary>
            消息到达结点的ID
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.DesTab">
            <summary>
            目标表的名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.IDList">
            <summary>
            所操作数据的ID列表
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.ChargeFlag">
            <summary>
            标志位：0表示数据从未处理，255表示数据处理成功，其他值表示数据处理失败的次数(该记录不超过10)，
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.CreateTime">
            <summary>
            消息创建时间
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMessageQueue.OpType">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CNodeInfo">
            <summary>
            结点信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNodeInfo.NodeID">
             <summary>
            结点ID
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNodeInfo.NodeName">
            <summary>
            结点名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNodeInfo.NodeAddress">
             <summary>
            结点IP
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNodeInfo.NodeDescrib">
            <summary>
            结点描述
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNodeInfo.#ctor">
            <summary>
            构造函数1
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNodeInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="nodeID">结点id</param>
            <param name="nodeName">结点名称</param>
            <param name="nodeAddress">结点IP</param>
            <param name="nodeDescrib">结点描述</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CGdbInfo">
            <summary>
            GDB信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.NodeID">
            <summary>
            结点ID
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.ServerAddress">
            <summary>
            GDB服务器所在地址,可以为IP或者计算机名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.GDBSvrName">
            <summary>
            GDB服务器名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.GDBName">
            <summary>
            GDB名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.User">
            <summary>
            GDB服务器用户名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CGdbInfo.Password">
            <summary>
            GDB服务器密码
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CGdbInfo.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CGdbInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数1
            </summary>
            <param name="serverAddress">服务地址</param>
            <param name="gdbSvrName">数据源名称</param>
            <param name="gdbName">gdb名称</param>
            <param name="user">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:ZDIMS.BaseLib.CGdbInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数2
            </summary>
            <param name="nodeID">结点id</param>
            <param name="serverAddress">服务地址</param>
            <param name="gdbSvrName">数据源名称</param>
            <param name="gdbName">gdb名称</param>
            <param name="user">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:ZDIMS.BaseLib.CGdbInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造函数3
            </summary>
            <param name="gdbSvrName">数据源名称</param>
            <param name="gdbName">gdb名称</param>
            <param name="user">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerInfo">
            <summary>
            该类表示某个图层的信息，主要包括图层的名称及图层类型
            <example>
            <code>
            CLayerInfo layerInfo = new CLayerInfo();//初始化图层信息类
            layerInfo.LayerDataName = "行政区.wp";//设置图层名称
            layerInfo.LayerType = XClsType.SFeatureCls;//设置图层类型
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.LayerAliasName">
            <summary>
            图层名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.LayerDataName">
            <summary>
            图层数据名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.LayerType">
            <summary>
            图层类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.Bound">
            <summary>
            图层的逻辑范围
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.CRS">
            <summary>
            图层座标参考系
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.GeomType">
            <summary>
            图层的几何约束类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerInfo.GdbID">
            <summary>
            gdb的ID
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerAccessInfo">
            <summary>
            图层访问信息类，描述了取实际数据的信息，如GDB数据源信息
            该类的结构可看做是gdb企业管理器中某个gdb及其下的图层的结构，属性中GdbInfo表示某个gdb的信息，包括gdb的名称及所在的数据源的名称，
            属性中LayerInfoList数据则表示该gdb中的图层的信息，主要包括图层的名称及图层类型。在需要打开部分图层时，不需要将所有图层都赋值到该类中，
            需要打开某个图层再赋值某个图层的信息，否则将把设置进去的所有图层均打开
            <example>
            <code>
             CLayerAccessInfo layeraccessInfo = new CLayerAccessInfo();//初始化图层访问信息类
             layeraccessInfo.GdbInfo = new CGdbInfo();//初始化gdb信息
             layeraccessInfo.LayerInfoList = new CLayerInfo[1];//初始化图层信息数组
             layeraccessInfo.LayerInfoList[0] = new CLayerInfo();//初始化数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerAccessInfo.GdbInfo">
            <summary>
            说明：GDB信息
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerAccessInfo.LayerInfoList">
            <summary>
            说明：上述gdb中某些图层的信息。数组的元素类型为CLayerInfo类，具体赋值请参见CLayerInfo类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CLayerAccessInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CLayerAccessInfo.#ctor(ZDIMS.BaseLib.CGdbInfo,ZDIMS.BaseLib.CLayerInfo[])">
            <summary>
            构造函数
            </summary>
            <param name="gdbInfo">GDB信息</param>
            <param name="layerInfoList">图层信息</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapInfo">
            <summary>
            地图文档信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapInfo.NodeID">
            <summary>
            结点ID
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapInfo.SvrAddress">
            <summary>
            服务器的IP地址
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapInfo.MapDocName">
            <summary>
            地图文档的名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapInfo.RelPath">
            <summary>
            相对路径
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapInfo.Bound">
            <summary>
            逻辑范围
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDistrGridDataInfo">
            <summary>
            分布式栅格流信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.NodeID">
            <summary>
            结点ID
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.MdTitle">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.HDFName">
            <summary>
            栅格流文件的名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.ServerAddress">
            <summary>
            栅格流服务器所在机器的IP
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.GisPort">
            <summary>
            服务器的端口号
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.MapLevel">
            <summary>
            地图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.StartLev">
            <summary>
            地图开始显示的级数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.EndLev">
             <summary>
            地图结束显示的级数 
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.Bound">
            <summary>
            地图的逻辑范围
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.SplitInterval">
            <summary>
            裁图时的经纬度跨度
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.MapBufferSize">
            <summary>
            缓存的大小
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.MainLev">
            <summary>
            位于主图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.Scale">
            <summary>
            比例尺分母，1：5万为50000，1：5000为5000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.TypeCapital">
            <summary>
            专题类型：0为无类型，1为地质图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.AttTblName">
            <summary>
            对应的属性表名
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.IsMainMap">
            <summary>
            是否为主图,1为是，0为否；
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDistrGridDataInfo.TopLevel">
            <summary>
            最高级数
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDynNoteInfo">
            <summary>
            动态注记信息
            该类表示图层的动态注记类。将此类实例化后需要赋值给CDisplayStyle类
            才可设置图层的动态注记
            <example>
            <code>
            CDynNoteInfo noteInfo = new CDynNoteInfo();//初始化动态注记类
            noteInfo.FieldName = "名称";//设置要显示的动态注记的字段
            noteInfo.FontColor = 6;//此例设置动态注记的字体颜色为红色
            noteInfo.FontSize = 12;//此例设置动态注记的大小为12
            noteInfo.FontStyle = 0;//此例设置动态注记的字体为宋体
            </code>
            </example>
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CDynNoteInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CDynNoteInfo.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">动态显示的注记的名称</param>
            <param name="fontStyle">动态注记的字体</param>
            <param name="fontSize">动态注记的字体的大小</param>
            <param name="fontColor">动态注记的字体颜色</param>
        </member>
        <member name="P:ZDIMS.BaseLib.CDynNoteInfo.FieldName">
            <summary>
            说明：设置需要动态显示的注记的名称。应该为图层的属性字段之一
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDynNoteInfo.FontStyle">
            <summary>
            说明：设置显示的动态注记的字体。其编号需与平台中设置动态注记时候的字体编号一致
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDynNoteInfo.FontSize">
            <summary>
            说明：设置显示的动态注记的字体的大小。其设置方式可参考平台中设置动态注记时候的大小
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDynNoteInfo.FontColor">
            <summary>
            说明：设置显示的动态注记的字体颜色。其编号需与平台中的颜色库编号一致
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.DynShowStyle">
            <summary>
            地图显示参数
            <example>
            <code>
            DynShowStyle dynStyle = new DynShowStyle();//初始化地图显示参数类
            dynStyle.DynNoteFlag = true;//设置显示动态注记
            dynStyle.DynNoteInfo = new CDynNoteInfo();//设置动态注记信息
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DynShowStyle.SymbleScale">
            <summary>
            符号显示比例
            初始值：-1
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DynShowStyle.DynNoteFlag">
            <summary>
            是否动态注记
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DynShowStyle.DynNoteInfo">
             <summary>
            动态注记参数
             初始值：null
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DynShowStyle.IsShowArc">
            <summary>
            是否显示填充区域的弧段
            初始值："Reg" 即ISShowArc.Reg
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.DynShowStyle.LineInfo">
            <summary>
            显示的弧段样式
            初始值：null
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.DynShowStyle.#ctor">
            <summary>
            默认构造函数
            初始值：null
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDisplayStyle">
            <summary>
            该类表示图层的显示样式类。可以设置还原显示，跟随显示，动态注记等功能
            <example>
            <code>
            CDisplayStyle display = new CDisplayStyle();//初始化显示设置类
            display.FollowScale = true;//设置跟随显示为true，即符号跟随显示放大而放大
            display.DriverQuality = 2;//此例设置图像质量为高质量
            display.SymbleShow = false;//设置还原显示为false，即不还原显示
            display.ShowStyle = new DynShowStyle[1];//初始化地图显示参数：弧段样式、动态注记等类的定义
            display.ShowStyle[0] = new DynShowStyle();//初始化第一个图层的显示参数：弧段样式、动态注记等的显示设置
            </code></example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.SymbleShow">
            <summary>
            是否进行还原显示
            初始值：false
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.LinPenWidFixed">
            <summary>
            线状符号线宽固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.LinSizeFixed">
            <summary>
            线状符号大小固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.PntPenWidFixed">
            <summary>
            点状符号线宽固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.PntSizeFixed">
            <summary>
            点状符号大小固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.RegPenWidFixed">
            <summary>
            填充符号线宽固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.RegSizeFixed">
            <summary>
            填充符号大小固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.AnnSizeFixed">
            <summary>
            注记符号大小固定
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.FollowScale">
            <summary>
            符号是否跟随显示放大
            初始值：true
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.ShowCoordPnt">
            <summary>
            显示坐标点
            初始值：false
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.ShowElemRect">
            <summary>
            显示元素的外包矩形
            初始值：false
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.DriverQuality">
            <summary>
            图像质量
            初始值：2
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.DynProjFlag">
            <summary>
            是否动态投影
            初始值：false
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CDisplayStyle.ShowStyle">
            <summary>
            地图显示参数
            初始值：null
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CDisplayStyle.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SFeatureGeometry">
            <summary>
            该类表示简单要素定义
            <example>
            <code>
            //初始化简单要素类结构
            SFeatureGeometry sfeatureGeometry=new SFeatureGeometry();
            sfeatureGeometry.PntGeom=new GRegion[1];
            </code></example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeatureGeometry.PntGeom">
            <summary>
            (多)点几何
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeatureGeometry.LinGeom">
            <summary>
            (多)线几何
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeatureGeometry.RegGeom">
            <summary>
            (多)区几何
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFeatureGeometry.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SFGeomSet">
            <summary>
            该类表示空间几何集
            <example>
            <code>
            SFGeomSet sfGeomset = new SFGeomSet();//初始化空间几何集类
            sfGeomset.SFGeometrySet = new SFeatureGeometry[2];
            sfGeomset.SFGeometrySet[0] = new SFeatureGeometry();
            sfGeomset.SFGeometrySet[1] = new SFeatureGeometry();
            </code></example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFGeomSet.SFGeometrySet">
            <summary>
            说明：空间几何数组。数组元素类型为SFeatureGeometry类。具体请参见SFeatureGeometry类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFGeomSet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFGeomSet.#ctor(ZDIMS.BaseLib.SFeatureGeometry[])">
            <summary>
            构造函数
            </summary>
            <param name="sFGeomSet">空间几何数组</param>
        </member>
        <member name="T:ZDIMS.BaseLib.SFeature">
            <summary>
             结构：要素
             <example>
             <code>
              SFeature sfeature = new SFeature();//初始化要素类
              sfeature.ftype = SFclsGeomType.Pnt;//设置查询类型
              sfeature.AttValue = new string[1];//设置属性值
              sfeature.AttValue[0] = "webgis";
             </code></example>
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeature.FID">
            <summary>
            要素ID
            初始值：0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeature.bound">
            <summary>
            要素的外包络矩形范围
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeature.AttValue">
            <summary>
            属性字段值
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeature.fGeom">
            <summary>
            空间几何信息
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.SFeature.ftype">
            <summary>
            简单要素类几何约束形态，获取空间查询类型，WebGeomType为枚举类型，具体参见枚举类WebGeomType
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFeature.#ctor">
            <summary>
            构造函数     
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.SFeatureSet">
            <summary>
            该类表示多个要素集
            <example>
            <code>
             SFeatureSet sfset = new SFeatureSet();//初始化数据集类
             sfset.SfSet = new SFeature[2];
             sfset.SfSet[0] = new SFeature();
             sfset.SfSet[1] = new SFeature();
            </code></example>
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFeatureSet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.SFeatureSet.#ctor(ZDIMS.BaseLib.SFeature[])">
            <summary>
            构造函数
            </summary>
            <param name="sfArray">要素集合数组</param>
        </member>
        <member name="P:ZDIMS.BaseLib.SFeatureSet.SfSet">
            <summary>
            说明：各个数组元素类型为SFeature类。具体参见SFeature类
            初始值：SfSet[0]
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttStruct">
            <summary>
            结构：该类表示数据表的字段结构，要素属性结构
            <example>
            <code>
            CAttStruct attStruct = new CAttStruct();//初始化属性结构类
            attStruct.FldNumber = 2;//属性结构字段个数，此例设置为2个。
            attStruct.FldName = new string[2];//属性结构字段名称初始化
            attStruct.FldName[0] = "id";//设置第一个属性结构字段为id
            attStruct.FldName[1] = "name";//设置第二个属性结构字段为name
            attStruct.FldType = new string[2];//属性结构字段类型初始化
            attStruct.FldType[0] = "integer";//设置id字段的类型为整型
            attStruct.FldType[1] = "string";//设置name字段的类型为字符串型
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttStruct.FldNumber">
            <summary>
            属性字段个数
            初始值：0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttStruct.FldName">
            <summary>
            属性字段名
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttStruct.FldType">
            <summary>
            属性字段类型
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttStruct.#ctor">
            <summary>
            构造函数1
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttStruct.#ctor(System.String[],System.String[])">
            <summary>
            构造函数2
            </summary>
            <param name="fldNameList">属性字段名数组</param>
            <param name="fldTypeList">属性字段类型数组</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttDataSet">
            <summary>
            属性数据集类,该类表示数据表的集合。将一个图层的数据看做一张表，则多个图层则可看作是多个表格，即数据集的形式
            <example>
            <code>
            CAttDataSet dataSet = new CAttDataSet();//初始化数据集类
            dataSet.attTables = new CAttDataTable[0];//初始化数据集中的表数组
            dataSet.attTables[0] = new CAttDataTable();//初始化第0个数据表
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttDataSet.attTables">
            <summary>
            说明：多个数据表。每个数组元素为CAttDataTable类型。其说明可参见CAttDataTable类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataSet.#ctor">
            <summary>
            空构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataSet.#ctor(ZDIMS.BaseLib.CAttDataTable[])">
            <summary>
            构造函数2
            </summary>
            <param name="attributeDataTabSet">属性表集对象</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttDataTable">
            <summary>
            属性数据表类,该类表示一个数据表。可将一个图层的数据看做一张表
            <example>
            <code>
            CAttDataTable dataTable = new CAttDataTable();//初始化数据表
            dataTable.Columns = new CAttStruct();//初始化数据表的字段结构
            dataTable.Rows = new CAttDataRow[0];//初始化数据表的行的集合
            dataTable.Rows[0] = new CAttDataRow();//初始化第0条数据
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttDataTable.Rows">
            <summary>
            说明：属性表中的多条数据。可看做是一个数据表中的多条记录。每个元素是CAttDataRow类型。具体可参见CAttDataRow类
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttDataTable.Columns">
            <summary>
            说明：属性结构。可看作是一个图层的属性的字段结构。其属性结构类请参见CAttStruct类
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataTable.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataTable.#ctor(ZDIMS.BaseLib.CAttStruct,ZDIMS.BaseLib.CAttDataRow[])">
            <summary>
            构造函数1
            </summary>
            <param name="attStruct">属性结构</param>
            <param name="attRows">属性表中的数据记录</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttDataRow">
            <summary>
            属性数据行类,该类表示数据表中的行属性值。
            <example>
            <code>
             CAttDataRow dataRow = new CAttDataRow();//初始化数据属性中的一行
             dataRow.Values = new string[0];//初始化数据的属性数组
             dataRow.Values[0] = "webgis";//为该条数据中第0个字段赋值
             dataRow.FID = 1;//为该条数据设置唯一标书ID：1
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttDataRow.FID">
            <summary>
            说明：要素id。要素id是用于一条要素在一个图层中的唯一标识，是平台自动分配的索引。对应于平台数据记录表中的oid字段
            初始值：0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttDataRow.Values">
            <summary>
            说明：一条要素所对应的属性值。数组元素的类型为String类型
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataRow.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataRow.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="attributeRow">数据行</param>
        </member>
        <member name="M:ZDIMS.BaseLib.CAttDataRow.#ctor(System.String[],System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="attributeRow">数据行</param>
            <param name="fid">要素ID</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CWebSelectParam">
            <summary>
            该类表示查询参数
            <example>
            <code>
             CWebSelectParam websel = new CWebSelectParam();//初始化参数类
             websel.SelectionType = SelectionType.Condition;//设置查询类型
             websel.WhereClause = "id>5";//设置查询条件
             websel.NearDistance = 0.0003;//设置查询搜索半径0.0003
             websel.GeomType = WebGeomType.Polygon;//设置查询方式WebGeomType.Polygon
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.Geometry">
            <summary>
            查询范围
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.GeomType">
            <summary>
            所输入空间范围的几何类型
            初始值：" Point " ,WebGeomType.Point
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.NearDistance">
            <summary>
            搜索半径
            初始值：0.0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.WhereClause">
            <summary>
            条件查询的where语句
            初始值：""
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.SelectionType">
            <summary>
            查询类型：空间范围查询/条件查询/空间和条件组合查询
            初始值：SelectionType.SpatialRange
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.CompareRectOnly">
            <summary>
            是否仅仅比较查询对象的外包络矩形框  
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.MustInside">
            <summary>
            查询对象是否必须完全包含在输入的空间范围内（此条件与Intersect相交条件互斥）
            初始值：false
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.Intersect">
            <summary>
            是否于查询对象相交
            初始值：true
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebSelectParam.EnableDispCondition">
            <summary>
            是否将设置图层显示条件
            初始值：false
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CMapLayerInfo">
            <summary>
            该类表示地图文档图层状态定义
            <example>
            <code>
             CMapLayerInfo mapInfo = new CMapLayerInfo();//该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
             mapInfo.LayerStatus = EnumLayerStatus.Selectable;
             mapInfo.LayerType = XClsType.SFeatureCls;
             mapInfo.GeomType = SFclsGeomType.Reg;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.LayerStatus">
            <summary>
            图层的状态（可见，可查，不可见，可编辑）。可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.SymbolScale">
            <summary>
            符号显示比例
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.MinScale">
            <summary>
            最小显示比列
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.MaxScale">
            <summary>
            最大显示比列
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.DispSymbolFlag">
            <summary>
            是否显示符号比例
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.LayerType">
            <summary>
            图层类型
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CMapLayerInfo.GeomType">
            <summary>
            空间几何形态
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerScaleInfo">
            <summary>
            该类表示图层的显示比率。包括最小显示比及最大显示比
            <example>
            <code>
             CLayerScaleInfo layerScaleInfo = new CLayerScaleInfo();//初始化显示比率类
             layerScaleInfo.MinScale = 0;//设置最小显示比率
             layerScaleInfo.MaxScale = 20;//设置最大显示比率
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerScaleInfo.MinScale">
            <summary>
            最小显示比率
            初始值：0.0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CLayerScaleInfo.MaxScale">
            <summary>
            最大显示比率
            初始值：0.0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CPathAnalyzeResult">
            <summary>
            路径分析结果类
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
            CPathAnalyzeResult pathResult = new CPathAnalyzeResult();
            pathResult.edgeFieldNameArray = new string[1];
            pathResult.edgeFieldNameArray[0] = "长青路";
            pathResult.inputDots = new CNetInputDot[1];
            pathResult.inputDots[0] = new CNetInputDot();
            pathResult.nodeFieldNameArray = new string[1];
            pathResult.nodeFieldNameArray[0] = "";
            pathResult.Paths = new CNetPath[1];
            pathResult.Paths[0] = new CNetPath();
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CPathAnalyzeResult.inputDots">
             <summary>
            输入点的信息 ,各个数组元素的类型为CNetInputDot类。具体请参见CNetInputDot类说明
            初始值：无
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CPathAnalyzeResult.nodeFieldNameArray">
             <summary>
             结点字段名数组,各个数组元素的类型为string类
            初始值：无
             </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CPathAnalyzeResult.edgeFieldNameArray">
            <summary>
            边线字段名数组,数组元素的类型为string类型
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CPathAnalyzeResult.Paths">
            <summary>
            路径信息,各个数组元素的类型为CNetPath类，具体请参见CNetPath类说明
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetInputDot">
            <summary>
            输入点信息
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
            CNetInputDot inputDot = new CNetInputDot();
            inputDot.pDot = new Dot_2D();
            inputDot.positionPercent = 0.5;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetInputDot.pDot">
            <summary>
            输入点在边线上的垂点坐标
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetInputDot.positionPercent">
            <summary>
            垂点在边线上的位置百分比
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetInputDot.#ctor">
            <summary>
            构造函数1
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetInputDot.#ctor(ZDIMS.BaseLib.Dot_2D,System.Double)">
            <summary>
            构造函数2
            </summary>
            <param name="pDot">输入点坐标</param>
            <param name="posPercent">输入点在边线上的位置百分比</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetPath">
            <summary>
            网络路径
            <example>
            <code>
             //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
             CNetPath path = new CNetPath();
             path.Edges = new CNetEdge[1];
             path.Nodes = new CNetNode[1];
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetPath.Edges">
            <summary>
            路径上的边线信息
            个数组元素类型为CNetEdge类。具体参见CNetEdge类说明
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetPath.Nodes">
            <summary>
            路径上的结点信息
            各个数组元素类型为CNetNode类。具体参见CNetNode类说明
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetPath.#ctor">
            <summary>
            构造函数1
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetPath.#ctor(ZDIMS.BaseLib.CNetEdge[],ZDIMS.BaseLib.CNetNode[])">
            <summary>
            构造函数2
            </summary>
            <param name="edgesData">路径上的边线信息</param>
            <param name="nodesData">路径上的结点信息</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetEdge">
            <summary>
            网络边线
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
            CNetEdge edge = new CNetEdge();
            edge.Dots = new Dot_2D[1];
            edge.FieldValus = new string[1];
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetEdge.Dots">
            <summary>
            边线上的控制点,数组元素的类型为Dot_2D，具体参见Dot_2D类
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetEdge.FieldValus">
            <summary>
            该边线的属性字段值,每个数组元素为String类型,数组个数为该属性字段的个数
            初始值：无
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetEdge.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetEdge.#ctor(ZDIMS.BaseLib.Dot_2D[],System.String[])">
            <summary>
            构造函数2
            </summary>
            <param name="dotsData">边线上的控制点</param>
            <param name="fldVals">边线的属性字段值</param>
        </member>
        <member name="T:ZDIMS.BaseLib.CNetNode">
            <summary>
            网络结点
            <example>
            <code>
             //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
             CNetNode netNode = new CNetNode();
             netNode.Node = new Dot_2D();
             netNode.FieldValus = new string[1];
            </code>
            </example>
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetNode.Node">
            <summary>
            路径上的结点坐标。具体参见Dot_2D类
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetNode.FieldValus">
            <summary>
            结点的属性字段值,个数组元素为string类型。数组个数为该属性字段的个数
            初始值：无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CNetNode.TurnAngle">
            
             <summary>
             与该结点相连的边线夹角
             值域为[-180,180]
             [-180,0]右转，[0,180]左转
             0度直行(看实际情况，度数小可以近似的认为是直行)，180度折返
             </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetNode.#ctor">
            <summary>
            构造函数1
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetNode.#ctor(ZDIMS.BaseLib.Dot_2D,System.String[])">
            <summary>
            构造函数2
            </summary>
            <param name="nodeData"> 路径上的结点坐标</param>
            <param name="fldVals">结点的属性字段值</param>
        </member>
        <member name="M:ZDIMS.BaseLib.CNetNode.#ctor(ZDIMS.BaseLib.Dot_2D,System.String[],System.Double)">
            <summary>
            构造函数3
            </summary>
            <param name="nodeData">路径上的结点坐标</param>
            <param name="fldVals">结点的属性字段值</param>
            <param name="turnAngle">与该结点相连的边线夹角</param>
        </member>
        <member name="T:ZDIMS.BaseLib.WebTopoType">
            <summary>
            拓扑关系定义
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebTopoType.Unknown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebTopoType.Intersect">
            <summary>
            相交
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebTopoType.Disjoin">
            <summary>
            相离
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebTopoType.Include">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebTopoType.Adjacent">
            <summary>
            相邻
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumType">
            <summary>
            坐标系类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_NOPAR">
            <summary>
            用户自定义坐标系 Cartesian coordinates 笛卡儿坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_JWD">
            <summary>
            地理坐标系
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_LOC">
            <summary>
            local coordinates 地方坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_PRJ">
            <summary>
            投影平面直角坐标系 projected coordinates投影坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_XYZ">
            <summary>
            地心大地直角坐标系  geocentric coordinates 地心坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_VTC">
            <summary>
            vertical coordinates 纵坐标 
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_PHG">
            <summary>
            photograph coordinates 
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_SOS">
            <summary>
            stereo-object-space coordinates
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_DSP">
            <summary>
            display coordinates 显示坐标
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumType.TYPE_MGC">
            <summary>
            military grid coordinates
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumSphereType">
            <summary>
            椭球类型定义
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumSphereType.Beijing54">
            <summary>
            北京54
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumSphereType.Xian80">
            <summary>
            西安80
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumSphereType.WGS84">
            <summary>
            WGS84
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumProjType">
            <summary>
            投影类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.LonLat">
            <summary>
            地理坐标系(经纬度)
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.UTM">
            <summary>
            通用横向墨卡托投影坐标系(UTM)"
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Albers">
            <summary>
            亚尔勃斯等积圆锥投影坐标系",ALBERS CONICAL EQ
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Lambert">
            <summary>
            兰伯特等角圆锥投影坐标系",LAMBERT CONFORMAL C
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Mercator">
            <summary>
            墨卡托(正轴等角圆柱)投影坐标系",MERCATOR
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Gauss_Kruger">
            <summary>
            高斯-克吕格(横切椭圆柱等角)投影",GAUSS-KRUGER
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Polyconic">
            <summary>
            普通多圆锥投影坐标系",POLYCONIC
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.EQ_Dist_Conic">
            <summary>
            等距圆锥投影坐标系",EQUIDISTANT  CONIC
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjType.Transverse_Mecator">
            <summary>
            横向墨卡托(横切圆柱等角)投影",TRANSVERSE MECA
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumProjUnit">
            <summary>
            水平单位
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_MM">
            <summary>
            毫米
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_MilliMeter">
            <summary>
            毫米
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_Meter">
            <summary>
            米UNIT_KM 
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_KiloMeter">
            <summary>
            公里
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_DM">
            <summary>
            分米
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjUnit.UNIT_CM">
            <summary>
            厘米
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.EnumProjAngleUnit">
            <summary>
            弧度单位
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_Degree">
            <summary>
            度
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_DMS">
            <summary>
            度分秒,即±DDDMMSS.SSSS格式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_Minute">
            <summary>
            分(60分之一度)
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_Radian">
            <summary>
            弧度
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.EnumProjAngleUnit.UNIT_GRAD">
            <summary>
            梯度   1梯度=0.015707963267949弧度
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ProjectParam">
            <summary>
            该类表示投影参考系类。
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ProjectParam.projTypeID">
            <summary>
            投影类型
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjTypeID">
            <summary>
            投影类型（枚举类型EnumProjType）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.SphereID">
            <summary>
            椭球体参数，投影分带类型。具体参见EnumSphereType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjAngleUnit">
            <summary>
            角度单位，枚举类型EnumProjAngleUnit）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjType">
            <summary>
            坐标系类型，（枚举类型EnumType）
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjZoneType">
            <summary>
            投影分带类型
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjZoneNO">
            <summary>
            投影带号
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjLon">
            <summary>
              中央子午线经度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjLat">
            <summary>
            投影原点纬度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjLat1">
            <summary>
            第一标准维度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjLat2">
            <summary>
            第二标准维度
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjUnit">
            <summary>
            长度单位
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectParam.ProjRate">
            <summary>
            水平比例尺
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ProjectObj">
            <summary>
            投影参考系对象
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectObj.ProjectID">
            <summary>
            投影参照系id
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.ProjectObj.ProjectName">
            <summary>
            投影参照系名称
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CRectConverter">
            <summary>
            修正之后的显示范围,坐标转换类
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CRectConverter.GetDisplayBound(ZDIMS.BaseLib.Rect,System.Int32,System.Int32)">
            <summary>
            获取显示范围
            </summary>
            <param name="mapRect">需要显示的矢量范围</param>
            <param name="imageWidth">需要显示的图片宽</param>
            <param name="imageHeight">需要显示的图片高</param>
            <returns></returns>
        </member>
        <member name="T:ZDIMS.BaseLib.CTypeConverter">
            <summary>
            GML、.NET系统以及Mapgis数据类型的转换
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CTypeConverter.Gml2Sys(System.String)">
            <summary>
            GML字段类型转.NET格式
            </summary>
            <param name="gmlFldType">Gml字段类型</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.BaseLib.CTypeConverter.Sys2Gml(System.Type)">
            <summary>
            .NET字段类型转GML格式
            </summary>
            <param name="sType">系统字段类型</param>
            <returns>return string 类型</returns>
        </member>
        <member name="T:ZDIMS.BaseLib.MapDoc">
            <summary>
            地图文档类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.mapDocName">
            <summary>
            地图文档名称
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.layerCount">
            <summary>
            地图文档图层数
            初始值：0
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.MapBound">
            <summary>
            地图文档边框范围
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.layerAcessInfo">
            <summary>
            图层信息：包括gdb信息、图层名、图层类型等
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.mapLayerInfo">
            <summary>
            地图图层状态信息
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.displayStyle">
            <summary>
            地图图层的显示样式
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.sFclsGeomType">
            <summary>
            简单要素类几何约束形态
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.attStruct">
            <summary>
            文档图层的属性结构
            初始值：null
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.MapDoc.attDataSet">
            <summary>
            文档图层的数据表
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CExceptionDis">
            <summary>
            异常类
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.CExceptionDis.ThrowException(System.String,System.Exception)">
            <summary>
            抛出异常
            </summary>
            <param name="des"></param>
            <param name="ex"></param>
        </member>
        <member name="M:ZDIMS.BaseLib.CExceptionDis.ThrowException(System.String)">
            <summary>
            抛出异常
            </summary>
            <param name="des"></param>
        </member>
        <member name="T:ZDIMS.BaseLib.WebScaleType">
            <summary>
            国家标准比例尺
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._100THOUSAND">
            <summary>
            1:100000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._10THOUSAND">
            <summary>
            1:10000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._1MILLION">
            <summary>
            1:1000000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._250THOUSAND">
            <summary>
            1:250000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._25THOUSAND">
            <summary>
            1:25000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._500THOUSAND">
            <summary>
            1:500000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._50THOUSAND">
            <summary>
            1:50000
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebScaleType._5THOUSAND">
            <summary>
            1:5000
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.ColorMode">
            <summary>
            打印颜色模式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ColorMode.RGB">
            <summary>
            颜色模式RGB
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.ColorMode.CMYK">
            <summary>
            颜色模式CMYK
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.AddrInfo">
            <summary>
            地址库列表的信息
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AddrInfo.ParentNodeInfo">
            <summary>
            父结点
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AddrInfo.Dot">
            <summary>
            点(多点或多点)
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AddrInfo.Addr">
            <summary>
            当前地址名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AddrInfo.ChildNodeInfo">
            <summary>
            子结点
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.AddrInfoList">
            <summary>
            地址库列表的信息集合
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.AddrInfoList.AddrList">
            <summary>
            地址列表
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CWebAddrParam">
            <summary>
            按照空间信息查询的参数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebAddrParam.Geometry">
            <summary>
            查询范围
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebAddrParam.GeomType">
            <summary>
            所输入空间范围的几何类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CWebAddrParam.NearDistance">
            <summary>
            搜索半径
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebClassMode">
            <summary>
            分类模式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebClassMode.OneVal">
            <summary>
            一值一类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebClassMode.Sect">
            <summary>
            分段分类
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebStatMode">
            <summary>
            统计模式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeAvg">
            <summary>
            平均值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeCount">
            <summary>
            计数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeExp">
            <summary>
            算术表达式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeFrc">
            <summary>
            频率
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeMax">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeMin">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeStdDev">
            <summary>
            标准差
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeSum">
            <summary>
            求和
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatMode.StatModeVar">
            <summary>
            方差
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSortParm">
            <summary>
            分类字段参数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CSortParm.ClassMode">
            <summary>
             分类模式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CSortParm.FldIndex">
            <summary>
             添加分类的字段索引
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CSortParm.SectNum">
            <summary>
             分段分类模式默认分段数（一值一类模式此设置无效）
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CStatParm">
            <summary>
            统计字段参数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CStatParm.StatMode">
            <summary>
             统计模式
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CStatParm.FldIndex">
            <summary>
             添加统计的字段索引
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAttStatisticParam">
            <summary>
            属性统计分析参数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttStatisticParam.SortParm">
            <summary>
            分类字段
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.CAttStatisticParam.StatParm">
            <summary>
            统计字段
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebGisThemeType">
            <summary>
            专题图类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisThemeType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisThemeType.Each">
            <summary>
            单值专题图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisThemeType.Single">
            <summary>
            统一配置专题图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisThemeType.Section">
            <summary>
            分段专题图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisThemeType.Statistic">
            <summary>
            统计专题图
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebStatisticType">
            <summary>
            统计图类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STBar">
            <summary>
            柱状图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STBar3D">
            <summary>
            立体柱状图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STBreakLin">
            <summary>
            折线图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STBreakLin3D">
            <summary>
            立体折线图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STPie">
            <summary>
            饼图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STPie3D">
            <summary>
            立体饼图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebStatisticType.STSpot">
            <summary>
            点图
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.WebGisTheme">
            <summary>
            专题图参数类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisTheme.GisThemeName">
            <summary>
            专题图的名称
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisTheme.IsVisible">
            <summary>
             是否显示专题图
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.WebGisTheme.GisThemeParam">
            <summary>
             是否显示专题图
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.GisThemeStatistic">
            <summary>
            统计专题图类
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.LabelVisible">
            <summary>
             是否显示统计参数值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.FieldName">
            <summary>
            需要统计的字段数组
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.color">
            <summary>
            需要统计的字段对应的颜色值
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.StatisticType">
            <summary>
            统计图类型
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.Scale">
            <summary>
            比例尺
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.Rate">
            <summary>
            绘制时的倍数
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.XOffset">
            <summary>
            绘制时的左右偏移量
            </summary>
        </member>
        <member name="F:ZDIMS.BaseLib.GisThemeStatistic.YOffset">
            <summary>
            绘制时的上下偏移量
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GisThemeStatistic.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ZDIMS.BaseLib.GisThemeStatistic.GetThemeType">
            <summary>
             获取专题图类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZDIMS.Map.TileCacheManager">
            <summary>
            瓦片缓存管理类
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TileCacheManager.#ctor(System.Int32)">
            <summary>
            瓦片缓存管理类构造函数
            </summary>
            <param name="cacheSize">缓存长度</param>
        </member>
        <member name="M:ZDIMS.Map.TileCacheManager.Add(System.String,System.Windows.Media.ImageSource)">
            <summary>
            添加瓦片
            </summary>
            <param name="key">关键字</param>
            <param name="img">瓦片数据</param>
        </member>
        <member name="M:ZDIMS.Map.TileCacheManager.Remove(System.String)">
            <summary>
            根据关键字删除瓦皮
            </summary>
            <param name="key">关键字</param>
        </member>
        <member name="M:ZDIMS.Map.TileCacheManager.FillImage(System.String,System.Windows.Controls.Image)">
            <summary>
            查找填充图片
            </summary>
            <param name="key">关键字</param>
            <param name="img">Image对象</param>
            <returns>在缓存中找到并成功填充图像返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.TileCacheManager.RemoveAll">
            <summary>
            清除所有瓦片缓存
            </summary>
        </member>
        <member name="T:ZDIMS.Map.OGCWSLayer">
            <summary>
            OGC服务图层
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_syncContext">
            <summary>
            上下文管理（用于跨线程访问UI）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_layerStrlist">
            <summary>
            图层列表
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_wmsVersion">
            <summary>
            wms版本号
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_wfsVersion">
            <summary>
            wfs版本号
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_format">
            <summary>
            图片格式
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer._wmsServerAddress">
            <summary>
            WMS服务的地址,url 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer._wfsServerAddress">
            <summary>
            WFS服务的地址，url 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer.m_resourcesName">
            <summary>
            资源名称
            </summary>
        </member>
        <member name="F:ZDIMS.Map.OGCWSLayer._wms">
            <summary>
            WMS服务 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.#ctor">
            <summary>
            OGC服务图层构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.Call(System.Object,System.String,System.Net.UploadStringCompletedEventHandler,System.Boolean)">
            <summary>
            该方法已经失效，请使用新方法OGCCall
            </summary>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OGCCall(System.Uri,System.Net.OpenReadCompletedEventHandler)">
            <summary>
            向服务器发送请求 
            </summary>
            <param name="uri">请求地址</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetImage(ZDIMS.Util.RectBound,System.Double,System.Double)">
            <summary>
            根据传入范围和高宽生成图像
            </summary>
            <param name="rectView">图像范围</param>
            <param name="width">图像宽度</param>
            <param name="height">图像高度</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetWMSFeatureInfo(System.String,System.Double,System.Double,System.Net.OpenReadCompletedEventHandler)">
            <summary>
            点查询指定图层属性信息
            </summary>
            <param name="layerName">图层名称(多个用","分隔)</param>
            <param name="x">窗口可视范围内的x方向像素坐标(注意：x大于等于0且x小于等于width)</param>
            <param name="y">窗口可视范围内的y方向像素坐标(注意：y大于等于0且y小于等于height)</param>
            <param name="callback">回调函数(要解析结果，请在callback中调用OnGetWMSFeatureInfo解析获取结果)</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnGetWMSFeatureInfo(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            解析点查询图层属性信息结果
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetWMSCapabilities(System.Net.OpenReadCompletedEventHandler)">
            <summary>
            获取WMS服务描述信息
            </summary>
            <param name="callback">回调函数(要解析结果，请在callback中调用GetWMSCapabilities或GetWMSCapabilitiesEx解析获取结果)</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnGetWMSCapabilities(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            解析WMS服务描述信息返回结果(xml字符串形式)
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <returns>xml字符串结果</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetWFSCapabilities(System.Net.OpenReadCompletedEventHandler)">
            <summary>
            获取WFS服务描述信息
            </summary>
            <param name="callback">回调函数(要解析结果，请在callback中调用GetWFSCapabilities解析获取结果)</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnGetWFSCapabilities(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            解析WFS服务描述信息返回结果(xml字符串形式)
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <returns>xml字符串结果</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.DescribeFeatureType(System.String,System.Net.OpenReadCompletedEventHandler)">
            <summary>
            获取要素图层属性信息
            </summary>
            <param name="layerName">图层名称(多个用","分隔)</param>
            <param name="callback">回调函数(要解析结果，请在callback中调用OnDescribeFeatureType解析获取结果)</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnDescribeFeatureType(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            解析要素图层属性信息返回结果
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <returns>xml字符串结果</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetWFSFeature(System.String,System.String,System.Net.OpenReadCompletedEventHandler)">
            <summary>
            根据条件查询图层信息（条件filter是xml格式）
            </summary>
            <param name="layerName">图层名称(多个用","分隔)</param>
            <param name="filter">xml格式条件</param>
            <param name="callback">回调函数(要解析结果，请在callback中调用OnGetWFSFeature解析获取结果)</param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnGetWFSFeature(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            解析根据条件查询图层信息返回结果
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <returns>xml字符串结果</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetOGCCallResult(System.Object,System.Net.OpenReadCompletedEventArgs,System.Type)">
            <summary>
            返回OGC请求结果
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <param name="t">返回结果对象类型</param>
            <returns>结果对象</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetOGCCallXmlStrRes(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            返回OGC请求xml字符串结果
            </summary>
            <param name="sender">事件源</param>
            <param name="e">包含事件数据</param>
            <returns>xml字符串结果</returns>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.GetImgResponseCallback(System.IAsyncResult)">
            <summary>
             获取数据
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:ZDIMS.Map.OGCWSLayer.OnGetImage(System.Object)">
            <summary>
            读取地图数据
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.LayerStrList">
            <summary>
            要显示的图层列表(以逗号分隔多个图层,例如"行政区.wp,加油站.wt,道路.wl")
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.ImgFormat">
            <summary>
            地图图片格式
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.WMSServerAddress">
            <summary>
            WMS服务地址
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.WFSServerAddress">
            <summary>
            WFS服务地址 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.ResourcesName">
            <summary>
            资源名称
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.ServiceType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.ServerAddress">
            <summary>
            该属性在OGC图层中不是在使用，请设置WMSServerAddress和WFSServerAddress属性 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.BBOX">
            <summary>
            范围
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.WMS_URI">
            <summary>
            WMS网址
            </summary>
        </member>
        <member name="P:ZDIMS.Map.OGCWSLayer.WFS_URI">
            <summary>
            WFS网址
            </summary>
        </member>
        <member name="T:ZDIMS.Map.IMSMap">
            <summary>
            地图容器(用于容纳各种图层及其它叠加控件)
            </summary>
        </member>
        <member name="F:ZDIMS.Map.IMSMap.m_dx">
            <summary>
            两点x轴坐标差值
            </summary>
        </member>
        <member name="F:ZDIMS.Map.IMSMap.isTouchZoomOper">
            <summary>
            是否是两点触碰放缩操作
            </summary>
        </member>
        <member name="F:ZDIMS.Map.IMSMap.enableInertiaMove">
            <summary>
            是否允许使用移动地图时的惯性效果(默认值为true) 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.AccelerateMenuItem_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            是否启用加速浏览菜单项的处理事件
            </summary>
            <param name="sender">加速浏览菜单对象</param>
            <param name="e">菜单点击事件</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.#ctor">
            <summary>
            地图容器构造函数
            </summary>
            <example>
            该示例显示怎样使用该控件
            <code>
                IMSMap imsmap = new IMSMap()
                {
                    LevelNum = 7,
                    XMinMap=114.125686114315,
                    XMaxMap=114.500788705197,
                    YMaxMap=30.7085740673183,
                    YMinMap=30.4582609083728
                };
                LayoutRoot.Children.Add(imsmap);
                TileLayer tileLayer=new TileLayer()
                {
                    HdfName="wh.hdf",
                    ServerAddress="http://127.0.0.1/RelayHandlerSite/RelayHandler.ashx"
                };
                imsmap.AddChild(tileLayer);
                IMSEagleEye eye=new IMSEagleEye()
                {
                    EagleLocation=EagleLocation.BottomLeft
                }
                imsmap.AddChild(eye);
            </code>
            </example>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/IMSMap_Demo.rar">IMSMap_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.GetLevel">
            <summary>
            获取当前显示级数（存在瓦片图时有效）
            </summary>
            <returns>返回地图当前级数</returns>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.SetLevel(System.Int32)">
            <summary>
            设置显示级数（存在瓦片图时有效）
            </summary>
            <param name="level">显示级数</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.GetBuffer(System.Int32)">
            <summary>
            获取当前地图容器窗口宽度代表的逻辑坐标宽度
            </summary>
            <param name="screenSize">窗口宽度（单位：像素）</param>
            <returns>逻辑坐标宽度</returns>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ZoomIn">
            <summary>
            动画放大地图（存在瓦片图层时有动画，否则没有动画）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ZoomOut">
            <summary>
            动画缩小地图（存在瓦片图层时有动画，否则没有动画）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.JumpByRectBound(ZDIMS.Util.RectBound)">
            <summary>
            根据矩形范围来跳转地图
            </summary>
            <param name="rect">范围</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.CloneMap">
            <summary>
            将所有图层(不包括自定义类型图层)拷贝一份放入一个零时创建的Canvas中(只拷贝图层地图数据，不拷贝图层配置信息)
            </summary>
            <returns>包含所有图层的一个Canvas</returns>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.MoveMapView(System.Int32,System.Int32,System.Int32)">
            <summary>
            移动地图视图
            </summary>
            <param name="directX">值大于零表示地图x轴向左移动32像素，小于零表示地图x轴向右移动32像素，等于零表示x轴不移动</param>
            <param name="directY">值大于零表示地图y轴向上移动32像素，小于零表示地图y轴向下移动32像素，等于零表示y轴不移动</param>
            <param name="moveValue">地图移动的像素值（默认值‘32’）</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.OnCreateComplete">
            <summary>
            控件创建完毕回调方法
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenu_Opened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键打开事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_ZoomIn(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键放大回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_ZoomOut(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键缩小回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_Drag(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键拖动回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_Restore(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键复位回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_Refresh(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键刷新回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_FullScreen(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右键全屏回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ContextMenuClick_ClearStatus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            清除状态
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.AutoGetMapInfoCallback(ZDIMS.Interface.IMap)">
            <summary>
            自动取地图信息回调
            </summary>
            <param name="layer">图层对象</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            右键按下事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标按下回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移动事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键弹起事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键按下事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_KeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_MouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            鼠标滚轮事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移出容器时
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.IMSMap_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            容器大小发生改变事件回调
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.Current_UnhandledException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)">
            <summary>
            捕捉未处理的异常
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            load完毕
            </summary>
            <param name="sender">事件放送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ZoomInByRect">
            <summary>
            拉框放大地图
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.ZoomOutByRect">
            <summary>
            拉框缩小地图
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSMap.Touch_FrameReported(System.Object,System.Windows.Input.TouchFrameEventArgs)">
            <summary>
            多点触碰事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件包含的数据源</param>
        </member>
        <member name="E:ZDIMS.Map.IMSMap.MapInitComplete">
            <summary>
            地图初始化完毕事件
            </summary>
        </member>
        <member name="E:ZDIMS.Map.IMSMap.IMSResizeOver">
            <summary>
            容器大小改变完毕事件
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.EnableInertiaMove">
            <summary>
            是否允许使用移动地图时的惯性效果(默认值为true) 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.EnableAutoMoveMapView">
            <summary>
            是否根据鼠标位置自动移动当前地图，保持地图所需内容总是可见 (默认值“false”)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.AutoMoveMapViewMouseOperType">
            <summary>
            自动移动当前地图的鼠标状态(状态为‘IMSOperType’枚举值,默认值为‘IMSOperType.None’表示任何鼠标状态都自动移动)
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.TmpBoderValue">
            <summary>
            自动移动当前地图时，鼠标距离地图容器边框判断值（默认值为‘15’）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.EnableAccelerateMenu">
            <summary>
            获取或设置是否在地图的右键菜单中添加“加速浏览”菜单
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.LogoImgUri">
            <summary>
            地图容器logo图片链接地址（注意：默认为内部logo图片）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.OperType">
            <summary>
            获取或设置当前操作类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.Width">
            <summary>
            容器宽度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.Height">
            <summary>
            容器高度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.EnableCenCross">
            <summary>
            设置中心十字架是否可用 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSMap.EnableProgressBar">
            <summary>
            是否允许使用进度条
            </summary>
        </member>
        <member name="T:ZDIMS.Map.Tile">
            <summary>
            瓦片结构类
            </summary>
        </member>
        <member name="F:ZDIMS.Map.Tile.m_webClient">
            <summary>
            下载对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.Tile.m_tileImg">
            <summary>
            瓦片图
            </summary>
        </member>
        <member name="F:ZDIMS.Map.Tile.m_syncContext">
            <summary>
            上下文管理（用于跨线程访问UI）
            </summary>
        </member>
        <member name="F:ZDIMS.Map.Tile.m_tileContainer">
            <summary>
            瓦片容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Map.Tile.errorInfoLabel">
            <summary>
            显示错误显示的label
            </summary>
        </member>
        <member name="M:ZDIMS.Map.Tile.#ctor(System.Int32,System.Int32,System.Int32,System.Windows.Controls.Image,ZDIMS.Map.TileContainer)">
            <summary>
            构造函数
            </summary>
            <param name="rowNo">行号</param>
            <param name="colNo">列号</param>
            <param name="level">级数</param>
            <param name="tileImg">瓦片图</param>
            <param name="layer">瓦片容器对象</param>
        </member>
        <member name="M:ZDIMS.Map.Tile.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:ZDIMS.Map.Tile.Download">
            <summary>
            下载瓦片图并加载瓦片数据
            </summary>
        </member>
        <member name="M:ZDIMS.Map.Tile.OpenReadCompleted(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            下载瓦片图结束的回调
            </summary>
        </member>
        <member name="M:ZDIMS.Map.Tile.DisplayError(System.String)">
            <summary>
            在瓦片图位置显示倾斜45度角的错误信息 
            </summary>
            <param name="errorInfo">错误信息</param>
        </member>
        <member name="M:ZDIMS.Map.Tile.ClearErrorInfo">
            <summary>
            清除显示的错误信息
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.RowNo">
            <summary>
            瓦片所在行号
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.CellNo">
            <summary>
            瓦片所在列号
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.TileImg">
            <summary>
            瓦片图
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.TileCacheKey">
            <summary>
            瓦片缓存的key
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.TileContainer">
            <summary>
            瓦片容器对象
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.X">
            <summary>
            x轴位置
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.Y">
            <summary>
            y轴位置
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.Width">
            <summary>
            瓦片宽度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.Tile.Height">
            <summary>
            瓦片高度
            </summary>
        </member>
        <member name="T:ZDIMS.Event.IMSMapClipEvent">
            <summary>
            遮罩事件
            </summary>
        </member>
        <member name="M:ZDIMS.Event.IMSMapClipEvent.#ctor(System.Windows.Size)">
            <summary>
            遮罩事件构造函数
            </summary>
            <param name="newSize">新的大小</param>
        </member>
        <member name="P:ZDIMS.Event.IMSMapClipEvent.NewSize">
            <summary>
            新的遮罩大小
            </summary>
        </member>
        <member name="T:ZDIMS.Event.IMSMapClipEventHandler">
            <summary>
            表示处理UpdateClipEvent等事件的方法。
            </summary>
            <param name="e">遮罩事件数据源</param>
        </member>
        <member name="T:ZDIMS.Map.TiledMapService.TiledMapServiceLayer">
            <summary>
            任意比例瓦片图层 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.m_benchmarkLayer">
            <summary>
            标准参照图层对象 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.m_isBenchmarkLayer">
            <summary>
            是否是标准参照图层（默认为false） 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.m_mapServiceInfo">
            <summary>
            地图信息 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.m_tileSpanWithin">
            <summary>
            瓦片的行列范围 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.Token">
            <summary>
            Token for accessing a secure tiled 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.Units">
            <summary>
            单位
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.OriginX">
            <summary>
            原点x轴坐标 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.OriginY">
            <summary>
            原点y轴坐标 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.Restore">
            <summary>
            复位地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.SetCenter(System.Double,System.Double,System.Int32)">
            <summary>
            移动地图至某处（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">目标位置x坐标</param>
            <param name="y">目标位置y坐标</param>
            <param name="level">显示级别</param>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.ZoomByPnt(System.Windows.Point,System.Windows.Point,System.Int32)">
            <summary>
            将地图按指定坐标位置放缩
            </summary>
            <param name="logicPnt">放缩位置的的逻辑坐标</param>
            <param name="scrPnt">放缩位置的的窗口坐标</param>
            <param name="level">级数</param>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.ScreenToLogic(System.Double,System.Double)">
            <summary>
            窗口坐标转逻辑坐标 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（窗口左上角坐标系）</param>
            <param name="y">y轴方向坐标（窗口左上角坐标系）</param>
            <returns>逻辑坐标（地理坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.LogicToScreen(System.Double,System.Double)">
            <summary>
            逻辑坐标转窗口坐标（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="x">x轴方向坐标（地理坐标）</param>
            <param name="y">y轴方向坐标（地理坐标）</param>
            <returns>窗口坐标（窗口左上角坐标系）</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.GetTileSpanWithin(System.Int32)">
            <summary>
            根据级数获取瓦片范围 
            </summary>
            <param name="level">级数</param>
            <returns>瓦片行列范围</returns>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.CreatTileContainer">
            <summary>
            创建瓦片容器
            </summary>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.AutoGetMapInfo_DownloadStringCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            自动取图层信息回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件源数据</param>
        </member>
        <member name="M:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="E:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.AutoGetMapInfoOverEvent">
            <summary>
            自动获取地图参数完成事件
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.AutoGetMapInfo">
            <summary>
            获取或设置自动获取地图图层信息的标志位  
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.IsBenchmarkLayer">
            <summary>
            是否是基准图层标志位 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.TiledMapService.TiledMapServiceLayer.MapServiceInfo">
            <summary>
            地图信息 
            </summary>
        </member>
        <member name="T:ZDIMS.Util.ZDIMSLogo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSLogo.#ctor(ZDIMS.Map.MapContainerBase,System.Uri)">
            <summary>
            logo控件构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSLogo.UpdatePosition">
            <summary>
            更新logo位置
            </summary>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSLogo.OnDownloadProgress(System.Object,System.Windows.Media.Imaging.DownloadProgressEventArgs)">
            <summary>
            获取动态图片尺寸大小
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZDIMS.Util.ZDIMSLogo.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ZDIMS.Util.HashTable">
            <summary>
            自定义的哈希表
            </summary>
        </member>
        <member name="M:ZDIMS.Util.HashTable.#ctor">
            <summary>
            自定义的哈希表构造函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Exist(System.String)">
            <summary>
            根据关键字判断是否有存在的项
            </summary>
            <param name="key">关键字</param>
            <returns>存在返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Exist(System.String,System.Int32@)">
            <summary>
            根据关键字判断是否有存在的项
            </summary>
            <param name="key">关键字</param>
            <param name="index">返回的索引值</param>
            <returns>存在返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.IndexOf(System.Object)">
            <summary>
            搜索指定的对象，并返回整个HashTable中第一个匹配项的从零开始的索引。
            </summary>
            <param name="item">HashTable中元素</param>
            <returns>返回索引</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.GetIndexByKey(System.String)">
            <summary>
            根据关键字获取索引值
            </summary>
            <param name="key">关键字</param>
            <returns>返回关键字对应的索引，不存在关键字是返回“-1”</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.GetKeyByIndex(System.Int32)">
            <summary>
            根据索引获取关键字
            </summary>
            <param name="index">索引</param>
            <returns>返回索引对应的关键字，获取失败时返回“null”</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.GetItemByIndex(System.Int32)">
            <summary>
            根据索引获取表元素
            </summary>
            <param name="index">索引</param>
            <returns>值</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.GetItemByKey(System.String)">
            <summary>
            根据关键字获取数组元素
            </summary>
            <param name="key">关键字</param>
            <returns>值</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.SetItemByIndex(System.Int32,System.Object)">
            <summary>
            设置索引对应元素的值
            </summary>
            <param name="index">索引</param>
            <param name="content">值</param>
            <returns>返回设置是否成功标志</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.SetItemByKey(System.String,System.Object)">
            <summary>
            设置关键字对应元素的值
            </summary>
            <param name="key">关键字</param>
            <param name="content">值</param>
            <returns>返回设置是否成功标志</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.RemoveAll">
            <summary>
            移除所有元素
            </summary>
        </member>
        <member name="M:ZDIMS.Util.HashTable.RemoveItemByIndex(System.Int32)">
            <summary>
            移除指定索引对应元素
            </summary>
            <param name="index">索引</param>
            <returns>返回移除是否成功标志</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.RemoveItemByKey(System.String)">
            <summary>
            移除指定关键字对应元素
            </summary>
            <param name="key">关键字</param>
            <returns>返回移除是否成功标志</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Remove(System.Object)">
            <summary>
            移除指定元素
            </summary>
            <param name="item">元素</param>
            <returns>成功返回“true”否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Push(System.String,System.Object)">
            <summary>
            在表末尾添加元素
            </summary>
            <param name="key">关键字</param>
            <param name="content">内容</param>
            <returns>返回新添加项的索引</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Push(System.Object)">
            <summary>
            在表末尾添加元素
            </summary>
            <param name="content">内容</param>
            <returns>返回新添加项的索引</returns>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Pop">
            <summary>
            移除表末尾元素并返回该元素
            </summary>
        </member>
        <member name="M:ZDIMS.Util.HashTable.Shift">
            <summary>
            移除表头元素并返回该元素
            </summary>
        </member>
        <member name="P:ZDIMS.Util.HashTable.Length">
            <summary>
            表长度 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.HashTable.Item(System.String)">
            <summary>
            根据关键字获取其对应值
            </summary>
            <param name="key">关键字</param>
            <returns>值</returns>
        </member>
        <member name="P:ZDIMS.Util.HashTable.Item(System.Int32)">
            <summary>
            根据索引获取其对应值
            </summary>
            <param name="index">数组中的索引值</param>
            <returns>值</returns>
        </member>
        <member name="T:ZDIMS.Map.VectorMapDoc">
            <summary>
            矢量文档图层
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorMapDoc.m_isLoading">
            <summary>
            加载中标志位 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.#ctor">
            <summary>
            矢量文档构造函数
            </summary>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/VectorMapDoc_Demo.rar">VectorMapDoc_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetOpenMapObj">
            <summary>
            获取打开地图文档使用的参数对象 
            </summary>
            <returns>打开地图文档使用的参数对象 </returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.LoadMap(System.String,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            加载地图文档
            </summary>
            <param name="mapDocName">地图文档名称</param>
            <param name="callback">处理事件</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnLoadMap(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取LoadMap请求得到的结果对象
            </summary>
            <param name="e">LoadMap方法发送的请求完成事件</param>
            <returns>地图文档加载结果对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnInnerLoadMap(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            LoadMap请求内部自动处理事件
            </summary>
            <param name="sender">请求对象</param>
            <param name="e">LoadMap方法发送的请求完成事件</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetImage(ZDIMS.Util.RectBound,System.Double,System.Double)">
            <summary>
            根据传入范围和高宽生成图像
            </summary>
            <param name="rectView">图像范围</param>
            <param name="width">图像宽度</param>
            <param name="height">图像高度</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetMap(ZDIMS.BaseLib.CGetMapImage,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取传入详细参数生成图像
            </summary>
            <param name="obj">获取图像参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetMap(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetMap操作结果
            </summary>
            <param name="e">GetMap操作完成事件</param>
            <returns>GetMap操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetMapLayerInfo(System.Int32)">
            <summary>
            获取某个图层的显示参数等信息
            </summary>
            <param name="index">图层索引</param>
            <returns>某个图层的显示参数等信息</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetLayerInfo(System.Int32)">
            <summary>
            获取图层信息（图层名等信息）
            </summary>
            <param name="index">图层索引</param>
            <returns>图层信息（图层名等信息）</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetLayerAccessInfo(System.Int32)">
            <summary>
            获取图层访问信息
            </summary>
            <param name="index">图层索引</param>
            <returns>图层访问信息</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.UpdateLayerInfo(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新某个图层的状态 
            </summary>
            <param name="index">图层索引</param>
            <param name="callback">处理事件</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnInnerUpdateLayerInfo(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            更新图层状态操作结果处理函数
            </summary>
            <param name="obj">请求对象</param>
            <param name="e">UpdateLayerInfo请求完成事件</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnUpdateLayerInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            更新图层状态操作结果处理函数
            </summary>
            <param name="e">请求完成事件</param>
            <returns>更新图层状态结果对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.UpdateAllLayerInfo(System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新所有图层状态 
            </summary>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.UpdateMapLayerInfoList(System.Int32[],System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新某几个图层状态 
            </summary>
            <param name="indexArr">要更新的图层的索引</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.SetLayerOrder(System.Int32[],System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置图层显示顺序 
            </summary>
            <param name="indexList">新的显示顺序下图层真实索引数组</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.SetPageSize(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置地图文档查询结果每页包含的个数的返回值
            </summary>
            <param name="pageSize">描述每页包含记录条数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnSetPageSize(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetPageSize操作结果
            </summary>
            <param name="e">SetPageSize操作完成事件</param>
            <returns>SetPageSize操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetPageSize">
            <summary>
            获取每页记录数
            </summary>
            <returns>获取每页记录数</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.SetTopoEdit(ZDIMS.BaseLib.CSetTopoEdit,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置是否拓扑编辑
            </summary>
            <param name="topo">拓扑编辑标志</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnSetTopoEdit(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetTopoEdit操作结果
            </summary>
            <param name="e">SetTopoEdit操作完成事件</param>
            <returns>SetTopoEdit操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.Select(ZDIMS.BaseLib.CMapSelectParam,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            使用查询参数对象进行地图文档查询 
            </summary>
            <param name="selectParam">查询使用的参数对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnSelect(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取Select操作结果
            </summary>
            <param name="e">Select操作完成事件</param>
            <returns>Select操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.AddFeature(ZDIMS.BaseLib.CMapFeatureInfo,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            添加要素 
            </summary>
            <param name="featureInfo">要素信息对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnAddFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取AddFeature操作结果
            </summary>
            <param name="e">AddFeature操作完成事件</param>
            <returns>AddFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.UpdateFeature(ZDIMS.BaseLib.CMapFeatureInfo,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新要素 
            </summary>
            <param name="featureInfo">要素信息对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnUpdateFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取UpdateFeature操作结果
            </summary>
            <param name="e">UpdateFeature操作完成事件</param>
            <returns>UpdateFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.DeleteFeature(ZDIMS.BaseLib.CGetObjByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            删除要素
            </summary>
            <param name="featureToDel">要素标识信息对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnDeleteFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取DeleteFeature操作结果
            </summary>
            <param name="e">DeleteFeature操作完成事件</param>
            <returns>DeleteFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.BufferFeature(ZDIMS.BaseLib.CBufferFeature,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            要素缓冲区分析
            </summary>
            <param name="obj">要素对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnBufferFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取BufferFeature操作结果
            </summary>
            <param name="e">BufferFeature操作完成事件</param>
            <returns>BufferFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetMapLayerAttStruct(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取地图文档中某一图层的属性结构
            </summary>
            <param name="layerIndex">图层索引</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetMapLayerAttStruct(System.Int32)">
            <summary>
            获取缓存的某一图层的属性结构。如果没有调用过GetMapLayerAttStruct(int layerIndex,UploadStringCompletedEventHandler callback)，则相应的缓存为NULL.
            如果返回值为NULL，可以使用GetMapLayerAttStruct(int layerIndex,UploadStringCompletedEventHandler callback)获取图层属性结构
            </summary>
            <param name="layerIndex">图层索引</param>
            <returns>缓存的某一图层的属性结构</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetMapLayerAttStruct(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetMapLayerAttStruct操作结果
            </summary>
            <param name="e">GetMapLayerAttStruct操作完成事件</param>
            <returns>GetMapLayerAttStruct操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.SetMapDispStyle(ZDIMS.BaseLib.CSetMapDispStyle,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置地图显示参数
            </summary>
            <param name="obj">地图显示参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnSetMapDispStyle(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetMapDispStyle操作结果
            </summary>
            <param name="e">SetMapDispStyle操作完成事件</param>
            <returns>SetMapDispStyle操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.SetMapDisplayCondition(ZDIMS.BaseLib.CSetMapDisplayCondition,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置地图显示参数
            </summary>
            <param name="obj">地图显示参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnSetMapDisplayCondition(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetMapDispStyle操作结果
            </summary>
            <param name="e">SetMapDispStyle操作完成事件</param>
            <returns>SetMapDispStyle操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetMapDispStyle(System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取地图显示参数
            </summary>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetMapDispStyle(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetMapDispStyle操作结果
            </summary>
            <param name="e">GetMapDispStyle操作完成事件</param>
            <returns>GetMapDispStyle操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetFeatureStyleInfo(ZDIMS.BaseLib.CGetObjByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取要素图形参数
            </summary>
            <param name="obj">要素信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetFeatureStyleInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetFeatureStyleInfo操作结果
            </summary>
            <param name="e">GetFeatureStyleInfo操作完成事件</param>
            <returns>GetFeatureStyleInfo操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetGeomByID(ZDIMS.BaseLib.CGetObjByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取要素空间信息
            </summary>
            <param name="obj">要素信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetGeomByID(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetGeomByID操作结果
            </summary>
            <param name="e">GetGeomByID操作完成事件</param>
            <returns>GetGeomByID操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.GetFeatureByID(ZDIMS.BaseLib.CGetObjByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取要素属性信息和空间信息
            </summary>
            <param name="obj">要素信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorMapDoc.OnGetFeatureByID(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetFeatureByID操作结果
            </summary>
            <param name="e">GetFeatureByID操作完成事件</param>
            <returns>GetFeatureByID操作结果</returns>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.LoadMapResult">
            <summary>
            地图文档加载结果信息 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.LayerCount">
            <summary>
            地图文档中的图层个数，必须加载地图成功后才能正确获取该属性 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ActiveLayerAccessInfo">
            <summary>
            获取当前激活的图层的访问信息 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ActiveLayerType">
            <summary>
            获取当前激活的图层的类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ActiveLayerGeoType">
            <summary>
            获取当前激活的图层要素几何类型 
            </summary>	    
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ActiveMapLayerInfo">
            <summary>
            获取当前激活的图层基本信息
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ActiveLayerAttStruct">
            <summary>
            获取激活的图层的属性结构，如果未调用过GetMapLayerAttStruct函数或未给LoadMapResult的LayerAttStruct属性赋过值，则返回NULL。
            不建议使用该属性，若要获取图层属性结构，请使用GetMapLayerAttStruct函数。
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.MapDocName">
            <summary>
            地图文档名称
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorMapDoc.ServiceType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="T:ZDIMS.Util.RectangleEx">
            <summary>
            画带中心十字架框
            </summary>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.#ctor(System.Windows.Controls.Panel,System.Double,System.Double,System.UInt32,System.UInt32)">
            <summary>
            构造函数
            </summary>
            <param name="parent">父容器</param>
            <param name="opacity">透明度</param>
            <param name="strokeThickness">边框厚度</param>
            <param name="strokeColor">边框颜色</param>
            <param name="fillColor">填充颜色</param>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.Draw(System.Windows.Point,System.Windows.Point)">
            <summary>
            绘制矩形
            </summary>
            <param name="sPnt">起点</param>
            <param name="ePnt">终点</param>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.Draw(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            绘制矩形
            </summary>
            <param name="sX">起点x轴坐标</param>
            <param name="sY">起点y轴坐标</param>
            <param name="eX">终点x轴坐标</param>
            <param name="eY">终点y轴坐标</param>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.Dispose(System.Boolean)">
            <summary>
            相关资源释放
            </summary>
            <param name="isDisposing">正在释放标志</param>
        </member>
        <member name="M:ZDIMS.Util.RectangleEx.Dispose">
            <summary>
            释放绘制十字架的相关资源
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectangleEx.Display">
            <summary>
            是否加载显示矩形框标志
            </summary>
        </member>
        <member name="P:ZDIMS.Util.RectangleEx.EnableCrossShape">
            <summary>
            是否允许使用中心十字架
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Plugin.m_clientUID">
            <summary>
            唯一id
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Plugin.m_serverAddress">
            <summary>
            服务地址
            </summary>
        </member>
        <member name="M:ZDIMS.Util.Plugin.CallPlugin(System.String,System.String,System.String,System.String,System.String,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            调用IMS服务插件
            </summary>
            <param name="pluginNamespace">插件命名空间</param>
            <param name="pluginClassName">插件类名称</param>
            <param name="method">插件类方法名称</param>
            <param name="urlParameter">URL请求地址中的参数</param>
            <param name="postData">使用POST方式传递的内容</param>
            <param name="callback">请求得到响应时的回调函数</param>
        </member>
        <member name="M:ZDIMS.Util.Plugin.OnCallPlugin(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取callPlugin请求的结果
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Util.Plugin.GetPluginList(System.Net.UploadStringCompletedEventHandler)">
            <summary>
             获取IMS服务器上自动加载的插件列表
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:ZDIMS.Util.Plugin.OnGetPluginList(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            服务器上自动加载的插件列表
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.Util.Plugin.Call(System.String,System.String,System.String,System.String,System.String,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            发送调用远程服务器上某个插件中的方法的请求
            </summary>
            <param name="pluginNamespace">插件命名空间</param>
            <param name="pluginClassName">插件类名称</param>
            <param name="method">插件类方法名称</param>
            <param name="urlParameter">URL请求地址中的参数</param>
            <param name="postData">使用POST方式传递的内容</param>
            <param name="callback">请求得到响应时的回调函数</param>
        </member>
        <member name="P:ZDIMS.Util.Plugin.ClientUID">
            <summary>
            表示唯一id
            </summary>
        </member>
        <member name="P:ZDIMS.Util.Plugin.ServerAddress">
            <summary>
            矢量数据服务地址 
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.MarkFlickerOverDelegate">
            <summary>
            图形闪烁完毕回调委托
            </summary>
            <param name="g">闪烁的标注对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.MarkDragOverDelegate">
            <summary>
            图形拖拽完毕回调委托
            </summary>
            <param name="g">标注对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.MarkDragStartDelegate">
            <summary>
            开始图形拖拽回调委托
            </summary>
            <param name="g">标注对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.MarkReviseOverDelegate">
            <summary>
            在地图放缩后，修正标注位置完毕的回调委托
            </summary>
            <param name="g">标注对象</param>
        </member>
        <member name="T:ZDIMS.Util.LinearEquation">
            <summary>
            直线方程 
            </summary>
        </member>
        <member name="M:ZDIMS.Util.LinearEquation.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            直线方程构造函数 
            </summary>
            <param name="x1">第一个点x轴坐标</param>
            <param name="y1">第一个点y轴坐标</param>
            <param name="x2">第二个点x轴坐标</param>
            <param name="y2">第二个点y轴坐标</param>
        </member>
        <member name="M:ZDIMS.Util.LinearEquation.GetXOffset(System.Double)">
            <summary>
            根据偏移距离获取x轴偏移 
            </summary>
            <param name="disOffset">偏移距离</param>
            <returns>x轴偏移</returns>
        </member>
        <member name="M:ZDIMS.Util.LinearEquation.GetYOffset(System.Double)">
            <summary>
            根据偏移距离获取y轴偏移 
            </summary>
            <param name="disOffset">偏移距离</param>
            <returns>y轴偏移</returns>
        </member>
        <member name="M:ZDIMS.Util.LinearEquation.GetExtendPnt(System.Double)">
            <summary>
            获取直线上第二点的指定距离延长点
            </summary>
            <param name="dis">指定距离</param>
            <returns>延长线上点</returns>
        </member>
        <member name="T:ZDIMS.OtherMap.TianDiTileLayer">
            <summary>
            google 瓦片图层类
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.TianDiTileLayer.startDataLvl">
            <summary>
             MapGIS 瓦片数据第0级在天地图的级数
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.TianDiTileLayer.originalRow">
            <summary>
            MapGIS 瓦片数据第0级在天地图的行号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.TianDiTileLayer.originalColumn">
            <summary>
             MapGIS 瓦片数据第0级在天地图的列号
            </summary>
        </member>
        <member name="F:ZDIMS.OtherMap.TianDiTileLayer.tiandituLayerType">
            <summary>
            天地图图层的类型: 矢量图层、影像图层、注记图层,默认情况为矢量地图
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.#ctor">
            <summary>
            在构造函数中实现:将四种类型地图的取图URL保存到变量googleDataSvr中
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.GetTitleUrl(System.Int32,System.Int32,System.Int32)">
            <summary>
             通过url获取天地图瓦片数据
            </summary>
            <param name="row">客户端传过来的行号</param>
            <param name="col">客户端传过来的列号</param>
            <param name="lvl">客户端传过来的级数</param>
            <returns></returns>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.GetTileBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据行列号获取该瓦片经纬度坐标系的范围
            </summary>
            <param name="col">列号</param>
            <param name="row">行号</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>范围</returns>		
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.LonLatToPixel(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            经纬度坐标转地图像素坐标（非客户端屏幕坐标，需要转换） 
            </summary>
            <param name="lon">经度</param>
            <param name="lat">纬度</param>
            <param name="level">级数</param>
            <param name="tileSize">瓦片尺寸</param>
            <returns>转换后坐标</returns>
        </member>
        <member name="M:ZDIMS.OtherMap.TianDiTileLayer.LonLatToTile(System.Double,System.Double,System.Int32)">
            <summary>
            获取经纬度坐标所在指定级数下的行列值
            </summary>
            <param name="lon">经度</param>
            <param name="lat">纬度</param>
            <param name="level">级数</param>
            <returns>转换后的行列值</returns>		
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.StartDataLvl">
            <summary>
            设置或获取MapGIS 瓦片数据第0级在天地图的级数
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.OriginalRow">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在天地图的行号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.OriginalColumn">
             <summary>
            设置或获取 MapGIS 瓦片数据第0级在天地图的列号
             </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.GlLayerType">
            <summary>
            设置或获取天地图的类型
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.TiandituLayerType">
            <summary>
            设置或获取天地图的类型
            </summary>
        </member>
        <member name="P:ZDIMS.OtherMap.TianDiTileLayer.ServerAddress">
            <summary>
            Google Map瓦片数据服务地址 
            </summary>
        </member>
        <member name="T:ZDIMS.Map.GDBItem">
            <summary>
            矢量图层的GDB数据源
            </summary>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.#ctor">
            <summary>
            矢量图层的GDB数据源构造函数
            </summary>
            <example>
            该示例显示怎样使用该控件
            <code>
            <!--<my:IMSMap Name="iMSMap1"
                XMinMap="114.125686114315" XMaxMap="114.500788705197" LevelNum="7" YMaxMap="30.7085740673183" YMinMap="30.4582609083728">
                <my:VectorLayer ServerAddress="http://127.0.0.1/relayhandlersite/relayhandler.ashx" Canvas.Left="225" Canvas.Top="76" Height="217" Name="vectorLayer1" Width="357">
                        <my:GDBItem Canvas.Left="54" Canvas.Top="33" Height="147" Name="gDBItem1" Width="256" GDBName="world" GDBServerName="MapGisLocal">
                                <my:LayerItem Canvas.Left="74" Canvas.Top="55" Height="50" Name="layerItem1" Width="50" LayerName="行政区.wp" />
                                <my:LayerItem Canvas.Left="42" Canvas.Top="25" Height="50" Name="layerItem2" Width="50" LayerName="中心线" />
                                <my:LayerItem Canvas.Left="171" Canvas.Top="58" Height="50" Name="layerItem3" Width="50" LayerName="水系.wp" />
                        </my:GDBItem>
                </my:VectorLayer>
            </my:IMSMap>-->
            </code>
            </example>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.AddLayerItem(ZDIMS.Map.LayerItem)">
            <summary>
            添加子图层配置信息控件
            </summary>
            <param name="child">子控件对象</param>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.GetLayerItemZIndex(ZDIMS.Map.LayerItem)">
            <summary>
            获取子图层配置信息控件的ZIndex值
            </summary>
            <param name="child">子图层配置信息</param>
            <returns>ZIndex值</returns>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.GetChildByIndex(System.Int32)">
            <summary>
            根据索引获取子图层配置信息控件对象
            </summary>
            <param name="index">索引</param>
            <returns>子控件对象</returns>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.RemoveLayerItem(ZDIMS.Map.LayerItem)">
            <summary>
            移除子控件
            </summary>
            <param name="child">子图层配置信息控件对象</param>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.RemoveAll">
            <summary>
            移除所有子图层配置信息控件对象
            </summary>
        </member>
        <member name="M:ZDIMS.Map.GDBItem.GetCLayerAccessInfoObj">
            <summary>
            返回包装的CLayerAccessInfo对象
            </summary>
            <returns>CLayerAccessInfo对象</returns>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.GDBServerName">
            <summary>
            数据源名称
            </summary>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.GDBName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.Children">
            <summary>
            该属性已禁用，请使用AddLayerItem、AddLayerItem、RemoveAll等方法添加删除子控件!
            </summary>
        </member>
        <member name="P:ZDIMS.Map.GDBItem.ChildrenCount">
            <summary>
            子控件个数
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.AutoGetMapInfoEventHandler">
            <summary>
            自动获取地图相关信息（包括地图范围等）事件handler
            </summary>
            <param name="layer">图层对象</param>
        </member>
        <member name="T:ZDIMS.Interface.AddedToMapContainerDelegate">
            <summary>
            图层添加到地图容器回调委托
            </summary>
            <param name="layer">添加的图层对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.GraphicsFlickerOverDelegate">
            <summary>
            图形闪烁完毕回调委托
            </summary>
            <param name="g">当前绘图对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.EditMarkDelegate">
            <summary>
            编辑mark的回调委托
            </summary>
            <param name="curEditMarkIndex">当前拖拽的mark在列表中的索引</param>
            <param name="curEditMark">当前拖拽的mark对象</param>
            <param name="editMarkList">该类型的mark列表</param>
            <param name="g">绘图对象</param>
        </member>
        <member name="T:ZDIMS.Util.Direction">
            <summary>
            方向按键状态
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.Illegal">
            <summary>
            不合法的
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.LeftUp">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.RightUp">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.RightDown">
            <summary>
            右下
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.LeftDown">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.Up">
            <summary>
            上
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="F:ZDIMS.Util.Direction.Down">
            <summary>
            下
            </summary>
        </member>
        <member name="T:ZDIMS.Util.DirectionKey">
            <summary>
            方向键状态(键盘移动地图用)
            </summary>
        </member>
        <member name="M:ZDIMS.Util.DirectionKey.SetKeyDownState(System.Windows.Input.Key)">
            <summary>
            设置方向键按下的状态 
            </summary>
            <param name="key">按键代码</param>
        </member>
        <member name="M:ZDIMS.Util.DirectionKey.SetKeyUpState(System.Windows.Input.Key)">
            <summary>
            设置方向键弹起的状态  
            </summary>
            <param name="key">按键代码</param>
        </member>
        <member name="M:ZDIMS.Util.DirectionKey.Restore">
            <summary>
            复位方向键的状态
            </summary>
        </member>
        <member name="P:ZDIMS.Util.DirectionKey.IsLeftKeyDown">
            <summary>
            方向向左键按下 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.DirectionKey.IsUpKeyDown">
            <summary>
            方向向上键按下 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.DirectionKey.IsRightKeyDown">
            <summary>
            方向向右键按下 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.DirectionKey.IsBottomKeyDown">
            <summary>
            方向向下键按下 
            </summary>
        </member>
        <member name="P:ZDIMS.Util.DirectionKey.Direction">
            <summary>
            获取方向
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.DrawingEventHandler">
            <summary>
            表示处理DrawingStart、DrawingOver等事件的方法。
            </summary>
            <param name="gLayer">GraphicsLayer图层对象</param>
            <param name="graphics">绘图对象</param>
            <param name="logPntArr">绘图保存的逻辑坐标数组</param>
        </member>
        <member name="T:ZDIMS.Drawing.DrawingTypeChangeEventHandler">
            <summary>
            表示处理DrawingTypeChange事件的方法。
            </summary>
            <param name="gLayer">GraphicsLayer图层对象</param>
            <param name="oldDrawingType">上一次的DrawingType</param>
            <param name="newDrawingType">现在的DrawingType</param>
        </member>
        <member name="T:ZDIMS.Drawing.GraphicsLayer">
            <summary>
            绘图图层
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_drawingType">
            <summary>
            手动绘图类型
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_drawingGraphics">
            <summary>
            手动绘图对象
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_scrPntArr">
            <summary>
            绘图屏幕坐标点数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_logPntArr">
            <summary>
            绘图逻辑坐标点数组
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_mouseDownNum">
            <summary>
            鼠标按下次数
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.GraphicsLayer.m_graphicsArr">
            <summary>
            图层中所有图形管理数组
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.#ctor">
            <summary>
            绘图图层构造函数
            </summary>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/GraphicsLayer_Demo.rar">GraphicsLayer_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.AddGraphics(ZDIMS.Interface.IGraphics)">
            <summary>
            添加图形到图层
            </summary>
            <param name="graphics">图形对象</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.AddGraphicsAt(ZDIMS.Interface.IGraphics,System.Int32)">
            <summary>
            添加图形到图层
            </summary>
            <param name="graphics">图形对象</param>
            <param name="zIndex">显示的顺序</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.RemoveGraphics(ZDIMS.Interface.IGraphics)">
            <summary>
            移除图形
            </summary>
            <param name="graphics">图形</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.GetGraphicsByIndex(System.Int32)">
            <summary>
            根据索引获取绘图图形对象
            </summary>
            <param name="index">索引</param>
            <returns>绘图图形对象,没有返回null</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.Contains(ZDIMS.Interface.IGraphics)">
            <summary>
            是否包含特定绘图对象
            </summary>
            <param name="g">绘图对象</param>
            <returns>包含返回“true”，否则返回“false”</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.RemoveAll">
            <summary>
            移除所有绘图对象
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.MapMouseDown(System.EventArgs)">
            <summary>
            鼠标左键按下 （该方法一般内部自动调用，一般不在外部通过对象调用 ） 
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.MapMouseMove(System.EventArgs)">
            <summary>
            鼠标移动（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.MapMouseUp(System.EventArgs)">
            <summary>
            鼠标左键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.MapKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            键盘按键弹起（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.Clear">
            <summary>
            清除地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.Refresh">
            <summary>
            刷新地图（该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.ClearAllDrawingOverEvent">
            <summary>
            清除所有绘图结束事件的监听
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            控件加载完事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件的数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.GraphicsLayer.Draw_IMSMapLDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标双击事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="E:ZDIMS.Drawing.GraphicsLayer.DrawingStart">
            <summary>
            开始绘图之前事件
            </summary>
        </member>
        <member name="E:ZDIMS.Drawing.GraphicsLayer.Drawing">
            <summary>
            绘图过程中事件
            </summary>
        </member>
        <member name="E:ZDIMS.Drawing.GraphicsLayer.DrawingOver">
            <summary>
            绘图结束事件
            </summary>
        </member>
        <member name="E:ZDIMS.Drawing.GraphicsLayer.DrawingTypeChange">
            <summary>
            DrawingType改变的事件
            </summary>
        </member>
        <member name="E:ZDIMS.Drawing.GraphicsLayer.DrawingTypeBeforeChange">
            <summary>
            DrawingType改变之前的事件
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingCallback">
            <summary>
            绘图过程中的回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingOverCallback">
            <summary>
            绘图结束的回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingTypeChangeCallback">
            <summary>
            DrawingType改变的回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingTypeBeforeChangeCallback">
            <summary>
            DrawingType改变之前的回调
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.EnableGPUMode">
            <summary>
            是否开启GPU加速模式
            并且在页面要设置Silverlight插件参数允许开启GPU加速才能完全开启（param name="enableGPUAcceleration" value="true"）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingType">
            <summary>
            绘制图形类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingObj">
            <summary>
            获取绘图对象
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.DrawingPoints">
            <summary>
            获取绘图屏幕坐标串
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.ChildrenCount">
            <summary>
            绘图图形总个数
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.Left">
            <summary>
            图层左距
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.GraphicsLayer.Top">
            <summary>
            图层上距
            </summary>
        </member>
        <member name="T:ZDIMS.Util.StateManager">
            <summary>
            状态管理类
            </summary>
        </member>
        <member name="F:ZDIMS.Util.StateManager.m_count">
            <summary>
            忙状态计数值
            </summary>
        </member>
        <member name="F:ZDIMS.Util.StateManager.m_mapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="F:ZDIMS.Util.StateManager.m_zdimsProgressBar">
            <summary>
            进度条控件对象
            </summary>
        </member>
        <member name="M:ZDIMS.Util.StateManager.SetBusy(System.Windows.Input.Cursor,System.String)">
            <summary>
            设置操作忙状态(鼠标光标将设置成默认的等待)
            </summary>
            <param name="cursor">鼠标光标</param>
            <param name="disInfo">进度条显示信息</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.SetBusy(System.String)">
            <summary>
            设置操作忙状态
            </summary>
            <param name="disInfo">进度条显示信息</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.RemoveBusy(System.Windows.Input.Cursor)">
            <summary>
            移除操作忙状态
            </summary>
            <param name="cursor">鼠标光标</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.RemoveBusy">
            <summary>
            移除操作忙状态(解除忙状态后鼠标光标将设置成默认箭头)
            </summary>        
        </member>
        <member name="M:ZDIMS.Util.StateManager.ResetState(System.String,System.Boolean)">
            <summary>
            重置加载的状态
            </summary>
            <param name="disInfo">显示的提示信息</param>
            <param name="isVisible">是否显示进度条标志位</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.DetectState">
            <summary>
            检测进度条状态
            </summary>
        </member>
        <member name="M:ZDIMS.Util.StateManager.AddMaximum(System.Int32)">
            <summary>
            增加进度条最大进度值
            </summary>
            <param name="value">增加的值</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.AddValue(System.Int32)">
            <summary>
            增加进度条当前值
            </summary>
            <param name="value">增加的值</param>
        </member>
        <member name="M:ZDIMS.Util.StateManager.Clear">
            <summary>
            清除状态
            </summary>
        </member>
        <member name="M:ZDIMS.Util.StateManager.SetProgressBarVisible(System.Boolean)">
            <summary>
            设置进度条是否显示
            </summary>
            <param name="visible"></param>
        </member>
        <member name="P:ZDIMS.Util.StateManager.MapContainer">
            <summary>
            地图容器对象
            </summary>
        </member>
        <member name="P:ZDIMS.Util.StateManager.ZDIMSProgressBar">
            <summary>
            进度条对象
            </summary>
        </member>
        <member name="P:ZDIMS.Util.StateManager.EnableProgressBar">
            <summary>
            是否允许使用进度条
            </summary>
        </member>
        <member name="P:ZDIMS.Util.StateManager.IsBusy">
            <summary>
            获取当前是否处于忙的状态
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.MarkClickDelegate">
            <summary>
            mark点击回调委托
            </summary>
            <param name="mark">mark对象</param>
        </member>
        <member name="T:ZDIMS.Drawing.MouseOperDelegate">
            <summary>
            mark鼠标操作回调委托
            </summary>
            <param name="mark">mark对象</param>
            <param name="sender">事件发送对象</param>
            <param name="e">包含事件的数据源</param>
        </member>
        <member name="T:ZDIMS.Drawing.IMSMark">
            <summary>
            标注类
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.MarkClickCallback">
            <summary>
            mark点击回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseLeaveCallback">
            <summary>
            鼠标从标注上移走时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseEnterCallback">
            <summary>
            鼠标移上标注时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseLeftButtonUpCallback">
            <summary>
            鼠标在标注上左键弹起时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseRightButtonUpCallback">
            <summary>
            鼠标在标注上右键弹起时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseMoveCallback">
            <summary>
            鼠标在标注上移动时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseLeftButtonDownCallback">
            <summary>
            鼠标在标注上左键按下时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseRightButtonDownCallback">
            <summary>
            鼠标在标注上右键按下时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="F:ZDIMS.Drawing.IMSMark.m_mouseClickCallback">
            <summary>
            鼠标在标注上点击时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.#ctor(System.Windows.FrameworkElement,ZDIMS.Interface.CoordinateType,ZDIMS.Drawing.MarkLayer)">
            <summary>
            构造函数
            </summary>
            <param name="markControl">要显示的标注点控件对象</param>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
            <param name="mLayer">标注图层对象，为“null”时会内部自动获取</param>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/IMSMark_Demo.rar">IMSMark_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标从Mark上移开事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移上Mark事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键按下事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.OnMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键弹起事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSMark.OnClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            mark上点击
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseLeaveCallback">
            <summary>
            鼠标从标注上移走时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseEnterCallback">
            <summary>
            鼠标移上标注时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseLeftButtonUpCallback">
            <summary>
            鼠标在标注上左键弹起时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseRightButtonUpCallback">
            <summary>
            鼠标在标注上右键弹起时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseMoveCallback">
            <summary>
            鼠标在标注上移动时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseLeftButtonDownCallback">
            <summary>
            鼠标在标注上左键按下时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseRightButtonDownCallback">
            <summary>
            鼠标在标注上右键按下时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.MouseClickCallback">
            <summary>
            鼠标在标注上点击时回调（不需要该回调时，请赋值为null） 
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSMark.EnableAnimation">
            <summary>
            是否允许使用动画效果
            </summary>
        </member>
        <member name="T:ZDIMS.Map.IMSEagleEye">
            <summary>
            鹰眼类 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.#ctor">
            <summary>
            鹰眼类构造函数
            </summary>        
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/IMSEagleEye_Demo.rar">IMSEagleEye_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.AnimationOpenOrClose">
            <summary>
            动画打开或关闭鹰眼
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.IMSEagleEye_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            右键按下事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.IMSEagleEye_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标按下回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移动事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.IMSEagleEye_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标左键弹起事件回调
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.ImgBtn_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            图片按钮鼠标按下事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.ImgBtn_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            图片按钮鼠标弹起事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.DisplayRect_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            在框上鼠标按下事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.IMSMap_UpdateClipEvent(ZDIMS.Event.IMSMapClipEvent)">
            <summary>
            遮罩更新回调事件
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.InitEagleEyeMap(ZDIMS.Event.IMSMapEvent)">
            <summary>
            主图出图完毕事件回调
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.CloneLayer_Loaded(ZDIMS.Interface.IMap)">
            <summary>
            克隆图层添加到地图容器完毕回调
            </summary>
            <param name="layer">图层对象</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.EagleEyeMove(ZDIMS.Event.IMSMapEvent)">
            <summary>
            主图移动完毕事件回调
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.EagleEyeZoom(ZDIMS.Event.IMSMapEvent)">
            <summary>
            主图放缩完毕事件回调
            </summary>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            load完毕
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.OnCreateComplete">
            <summary>
            初始化完毕事件
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.ResetParameter">
            <summary>
            复位地图相关参数
            </summary>
        </member>
        <member name="M:ZDIMS.Map.IMSEagleEye.AddBorder">
            <summary>
            添加外框
            </summary>
        </member>
        <member name="E:ZDIMS.Map.IMSEagleEye.MapInitComplete">
            <summary>
            地图初始化完毕事件
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.MapContainer">
            <summary>
            地图容器对象（当鹰眼是地图容器子控件时不需要赋值(内部会自动获取)，否则需要赋值指定地图容器）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.LevelDiff">
            <summary>
            鹰眼和主图的级差（默认是2）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.EagleLocation">
            <summary>
            鹰眼在控件中的位置
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.Width">
            <summary>
            鹰眼宽度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.Height">
            <summary>
            鹰眼高度
            </summary>
        </member>
        <member name="P:ZDIMS.Map.IMSEagleEye.OperType">
            <summary>
            该属性已禁用（鹰眼只允许拖动操作）
            </summary>
        </member>
        <member name="T:ZDIMS.Map.EagleLocation">
            <summary>
            鹰眼方位 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EagleLocation.TopLeft">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EagleLocation.TopRight">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EagleLocation.BottomRight">
            <summary>
            右下
            </summary>
        </member>
        <member name="F:ZDIMS.Map.EagleLocation.BottomLeft">
            <summary>
            左下
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COpenLayer">
            <summary>
            该类表示在图层开发方式下打开图层功能的参数类
            <example>
            <code>
            COpenLayer layerObj = new COpenLayer();//初始化打开图层类
            layerObj.LayerAccessInfo = new CLayerAccessInfo[1];//初始化数组
            layerObj.LayerAccessInfo[0] = new CLayerAccessInfo();//初始化数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COpenLayer.LayerAccessInfo">
            <summary>
            说明：需要打开的图层的信息及图层所在的gdb的信息。各个数组元素为CLayerAccessInfo类型
            具体赋值请参见CLayerAccessInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.COpenLayerByURL">
            <summary>
            该类表示在图层开发方式下通过图层所在的文件路径打开图层
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.COpenLayerByURL.LayerUrl">
            <summary>
            图层所在的文件路径，一般用于打开67数据
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CCreateLayer">
            <summary>
            使用图层开发方式下，在gdb中创建一个图层
            此功能中需要传入的参数类，包括gdb的信息，图层的名称及类型等
            <example>
            <code>
            CCreateLayer creatLayer = new CCreateLayer();//初始化在gdb中创建图层功能所传的参数类
            creatLayer.GdbInfo = new CGdbInfo();//初始化要创建的图层所在的gdb信息
            creatLayer.LayerName = "webgis";//设置要创建的图层的名称（不可与上述gdb中数据重名）
            creatLayer.XClsType = XClsType.SFeatureCls;//设置要创建的图层的类型（此例设置为简单要素类）
            creatLayer.Stype = SFclsGeomType.Reg;//设置要创建的图层的几何约束形态（此例设置为区）
            creatLayer.AttStruct = new CAttStruct();//设置要创建的图层的属性结构
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateLayer.GdbInfo">
            <summary>
            说明：需要添加的图层所在的gdb的信息，具体传入参数参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateLayer.XClsType">
            <summary>
            说明：需要添加的图层类型
            可赋值枚举类型：XClsType，具体参见XClsType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateLayer.LayerName">
            <summary>
            说明：需要添加的图层名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateLayer.Stype">
            <summary>
            说明：需要添加的图层的几何约束形态（点，线，区）
            可赋值枚举类型：SFclsGeomType，具体参见SFclsGeomType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreateLayer.AttStruct">
            <summary>
            说明：需要添加的图层的属性结构。属性结构的具体设置参见CAttStruct类详细说明
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CCreatGDBAndClsLayer">
            <summary>
            创建gdb并且复制传入的图层到该gdb中并注销该gdb
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreatGDBAndClsLayer.LayeraccessInfo">
            <summary>
            需要复制的图层信息包括其gdb信息及图层信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreatGDBAndClsLayer.HdfFilePath">
            <summary>
            创建gdb时存储的hdf路径
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreatGDBAndClsLayer.LogFilePath">
            <summary>
            创建gdb时存储的日志路径
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCreatGDBAndClsLayer.DesGdbName">
            <summary>
            需要创建的gdb名称
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDeleteLayer">
             <summary>
             使用图层开发方式下，在gdb中删除一个图层
             此功能中需要传入的参数类，包括gdb的信息，图层的名称及类型等
             <example>
             <code>
             CDeleteLayer delLayer = new CDeleteLayer();//初始化在gdb中删除图层功能所传的参数类
            delLayer.GdbInfo = new CGdbInfo();//初始化要删除的图层所在的gdb信息
            delLayer.LayerName = "webgis";//设置要删除的图层的名称（上述gdb中必须有此图层名并且图层类型一致）
            delLayer.XClsType = XClsType.SFeatureCls;//设置要删除的图层的类型（此例设置为简单要素类）
             </code>
             </example>
             </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteLayer.GdbInfo">
            <summary>
            说明：需要删除的图层所在的gdb的信息，具体传入参数参见CGdbInfo类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteLayer.XClsType">
            <summary>
            说明：需要删除的图层类型
            可赋值枚举类型：XClsType，具体参见XClsType类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteLayer.LayerName">
            <summary>
            说明：需要删除的图层名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetLayerDisplayCondition">
            <summary>
            该类表示设置图像显示条件功能的参数类
            <example>
            <code>
            CSetLayerDisplayCondition setDispCon = new CSetLayerDisplayCondition();//初始化参数类
            setDispCon.GdbIndex = 1;//设置要条件显示的图层所在的gdb索引
            setDispCon.Condition = new string[2];//设置显示条件（假设id字段为int型，name字段为string型）
            setDispCon.Condition[0] = "id>5";
            setDispCon.Condition[1] = "name like 'webgis'";
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerDisplayCondition.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerDisplayCondition.Condition">
            <summary>
            说明：设置需要显示的条件。数组元素类型为string。赋值格式为sql语句
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDeleteImage">
            <summary>
            删除图像
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDeleteImage.ImageName">
            <summary>
            说明：需要删除的图像名称
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetSRSID">
            <summary>
            参考系类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSRSID.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSRSID.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSRSID.SrsID">
            <summary>
            参考系id
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetGraphicInfo">
            <summary>
            该类表示根据要素id设置图形参数
            <example>
            <code>
            //初始化设置图层参数类
            CSetGraphicInfo setGraphicInfo = new CSetGraphicInfo();
            setGraphicInfo.GdbIndex = 0;//设置要素所在的gdb索引
            setGraphicInfo.LayerIndex = 1;//设置要素所在的图层索引
            setGraphicInfo.FeatureID = 5;//设置要素id
            setGraphicInfo.GInfo = new WebGraphicsInfo();//设置要修改的图形参数
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetGraphicInfo.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetGraphicInfo.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetGraphicInfo.FeatureID">
            <summary>
            说明：要素id。要素id是用于一条要素在一个图层中的唯一标识
            是平台自动分配的索引。对应于平台数据记录表中的oid字段
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetGraphicInfo.GInfo">
            <summary>
            说明：需要设置该要素的图形参数。具体赋值可参见WebGraphicsInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetSelectSetSize">
            <summary>
            该类表示在图层开发方式下，设置查询时结果返回的一页的个数
            <example>
            <code>
            //初始化参数类
            CSetSelectSetSize setSelectSetSize = new CSetSelectSetSize();
            setSelectSetSize.GdbIndex = 0;//设置gdb索引
            setSelectSetSize.Size = 20;//设置每页返回结果个数
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSelectSetSize.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSelectSetSize.Size">
            <summary>
            说明：查询结果每页的个数
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAppendFeatureList">
            <summary>
            该类主要用于在图层开发方式情况下，对于多个数据的添加功能的参数
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeatureList.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeatureList.LayerIndex">
            <summary>
            说明：图层索引。图层索引是在图层打开的前提下，打开函数的参数是个CLayerAccessInfo类的数组
            按照其属性CLayerInfo数组的下标进行排序的索引，从0开始。具体关于CLayerAccessInfo及其属性的详细介绍请参见CLayerAccessInfo类
            初始值：0
            可参见CAppendFeature类的例子
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeatureList.FSet">
            <summary>
            说明：需要添加的多个要素的空间信息及属性信息。每个元素是Sfeature类型
            具体说明可参见CAppendFeature类中的FSet属性
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeatureList.GInfo">
            <summary>
            说明：需要添加的要素的样式信息（如颜色，子图，高宽等）。此样式信息可传null。传null为系统默认值
            点，线，区样式信息的默认值请参见WebGraphicsInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAppendFeature">
            <summary>
            该类主要用于在图层开发方式情况下，对于单个数据的添加功能的参数
            <example>
            <code>
            CAppendFeature addFeature = new CAppendFeature();//初始化CAppendFeature类
            addFeature.GdbIndex = 0;//设置属性：gdb索引（需要在打开图层的情况下）
            addFeature.LayerIndex = 0;//设置属性：图层索引（需要在打开图层的情况下）
            //需要设置所添加要素的空间信息，此例为添加点要素。
            SFeature sfeature = new SFeature();
            sfeature.fGeom = new SFeatureGeometry();//初始化要素结构
            sfeature.fGeom.PntGeom = new GPoint[1];//初始化要素结构中的点结构，为数组结构，即可支持复杂点。一般情况数组个数为1。
            sfeature.fGeom.PntGeom[0].Dot = new Dot_2D();//初始化点坐标
            //为点的x坐标赋值，此例设置为0。其类型是Number型，可传入经纬度或者高斯以及屏幕等各类坐标形式
            sfeature.fGeom.PntGeom[0].Dot.x = 0;
            //为点的y坐标赋值，此例设置为0。其类型是Number型，可传入经纬度或者高斯以及屏幕等各类坐标形式
            sfeature.fGeom.PntGeom[0].Dot.y = 0;
            addFeature.FSet = sfeature;//将空间信息赋给该类。
            </code>
            </example>    
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeature.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeature.LayerIndex">
            <summary>
            说明：图层索引。图层索引是在图层打开的前提下，打开函数的参数是个CLayerAccessInfo类的数组，按照其属性CLayerInfo数组的下标进行排序的索引
            从0开始。具体关于CLayerAccessInfo及其属性的详细介绍请参见CLayerAccessInfo类
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeature.FSet">
            <summary>
            说明：需要添加的要素的空间信息及属性信息（如x,y坐标及属性信息等）
            对上述 GdbIndex与LayerIndex定位到的图层进行添加要素操作,
            必须指定添加的要素的空间坐标（点，线，区）。其属性信息可传空,
            传空为系统默认值。具体参数类型说明请参见SFeature类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAppendFeature.GInfo">
            <summary>
            说明：需要添加的要素的样式信息（如颜色，子图，高宽等）。此样式信息可传null。传null为系统默认值
            点，线，区样式信息的默认值请参见WebGraphicsInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerGetByID">
            <summary>
            该类表示在打开图层的前提下，根据要素id获取相关要素的信息
            <example>
            <code>
            CLayerGetByID getInfoByID = new CLayerGetByID();//初始化参数类
            getInfoByID.GdbIndex = 0;//设置要操作的图层所在的gdb索引
            getInfoByID.LayerIndex = 1;//设置要操作的图层索引
            getInfoByID.FeatureID = 1;//设置要操作的要素id
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerGetByID.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerGetByID.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerGetByID.FeatureID">
            <summary>
            说明：要素id。要素id是用于一条要素在一个图层中的唯一标识
            是平台自动分配的索引。对应于平台数据记录表中的oid字段
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateLayerIndex">
            <summary>
            该类表示在图层开发方式下，更新图层的顺序
            <example>
            <code>
            CUpdateLayerIndex updateLayerIndex = new CUpdateLayerIndex();
            updateLayerIndex.GdbIndex = 0;
            //设置gdb索引
            updateLayerIndex.NewLayerIndex = new int[4];
            //设置更新的图层索引
            updateLayerIndex.NewLayerIndex[0] = 0;
            updateLayerIndex.NewLayerIndex[1] = 3;
            updateLayerIndex.NewLayerIndex[2] = 2;
            updateLayerIndex.NewLayerIndex[3] = 1;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateLayerIndex.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateLayerIndex.NewLayerIndex">
            <summary>
            说明：新的图层顺序。数组元素的类型为int型。即刚打开所有图层时各个图层看做一个数组后
            顺序即从0开始排序，之后修改了显示顺序后原来的索引与各个图层绑定
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetScaleInfo">
            <summary>
            该类表示在图层开发方式下，设置符号显示比参数类
            <example>
            <code>
            CSetScaleInfo setScaleInfo = new CSetScaleInfo();//初始化参数类
            setScaleInfo.GdbIndex = 0;//设置gdb索引
            setScaleInfo.LayerIndex = 1;//设置图层索引
            setScaleInfo.LayerScaleInfo = new CLayerScaleInfo();//设置符号显示比
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetScaleInfo.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetScaleInfo.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetScaleInfo.LayerScaleInfo">
            <summary>
            说明：符号比例（最大显示比和最小显示比）
            具体参数赋值请参见CLayerScaleInfo类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetEnumLayerStatus">
            <summary>
            该类表示设置一个gdb中所有的图层状态为不同的状态（相对于打开的图层而言）,参数类
            <example>
            <code>
             CSetEnumLayerStatus setStatus = new CSetEnumLayerStatus();
             setStatus.GdbIndex = 0;//需要设置图层所在的gdb索引
             setStatus.LayerStatus = new EnumLayerStatus[1];//设置图层状态
             setStatus.LayerStatus[0] = EnumLayerStatus.Visiable;
            </code></example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatus.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatus.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）。数组元素为EnumLayerStatus[]类型
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetAllEnumLayerStatus">
            <summary>
            该类表示设置一个gdb下所有图层的状态为相同的状态（针对打开的图层而言）。参数类
            <example>
            <code>
            //初始化参数类
            CSetAllEnumLayerStatus setStatus = new CSetAllEnumLayerStatus();
            setStatus.GdbIndex = 0;//需要设置状态的gdb索引
            setStatus.LayerStatus = EnumLayerStatus.Visiable;//需要设置的状态
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAllEnumLayerStatus.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAllEnumLayerStatus.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CReBuildRegByLayer">
            <summary>
            该类表示在打开图层的前提下，对于某个图层将一定范围内的数据进行拓扑重建功能的参数类
            <example>
            <code>
            //初始化拓扑重建参数类
            CReBuildRegByLayer reBuild = new CReBuildRegByLayer();
            reBuild.GdbIndex = 0;//设置要操作的图层的相关信息
            reBuild.LayerIndex = 1;
            reBuild.RectObj = new ZDIMS.BaseLib.Rect();//设置要拓扑重建的范围
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildRegByLayer.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildRegByLayer.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CReBuildRegByLayer.RectObj">
            <summary>
            说明：需要拓扑重建的范围
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUnionRegionLayer">
            <summary>
            该类表示在图层开发方式下，合并图层的参数类
            <example>
            <code>
            //初始化参数类
            CUnionRegionLayer setTopoEdit = new CUnionRegionLayer();
            setTopoEdit.LayerIndex = 0;//设置图层索引
            setTopoEdit.GdbIndex = 0;//设置gdb索引
            //设置要合并的要素id（FeatureIDS与FeatureIDArr初始化其中一个即可）
            setTopoEdit.FeatureIDS = new int[1];
            setTopoEdit.FeatureIDS[0] = 0;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegionLayer.GdbIndex">
            /// <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegionLayer.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegionLayer.FeatureIDArr">
            <summary>
            说明：要素id数组。FeatureIDS与FeatureIDArr只需初始化其中一个即可，每个数组元素类型是long型。要素id是用于一条要素在一个图层中的唯一标识
            是平台自动分配的索引。对应于平台数据记录表中的oid字段
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUnionRegionLayer.FeatureIDS">
            <summary>
            说明：要素id数组。FeatureIDS与FeatureIDArr只需初始化其中一个即可，每个数组元素类型是int型。要素id是用于一条要素在一个图层中的唯一标识
            是平台自动分配的索引。对应于平台数据记录表中的oid字段
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetLayerIndex">
            <summary>
            该类表示在图层开发方式下设置索引参数
            <example>
            <code>
            //初始化参数类
            CSetLayerIndex setIndex = new CSetLayerIndex();
            setIndex.GdbIndex = 0;//设置gdb索引
            setIndex.LayerIndex = 2;//设置图层索引
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerIndex.GdbIndex">
            /// <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层
            gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerIndex.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerImage">
            <summary>
            该类表示基于图层开发方式下，获取打开图层的图像所传的参数类
            <example>
            <code>
            //初始化数据集类
            CGetLayerImage getImage = new CGetLayerImage();
            getImage.Height = 300;//此例设置出图的图像高为300像素
            getImage.Width = 400;//此例设置出图的图像宽为400像素
            getImage.ImgFormat = ImgFormat.gif;//此例设置出图的图片类型为gif图
            getImage.DispRect = new ZDIMS.BaseLib.Rect();//设置图像出图的逻辑范围
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerImage.DispRect">
            <summary>
            说明：需要出图的范围。具体传参数请参见Rect类
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerImage.Width">
            <summary>
            说明：需要出图的图像宽
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerImage.Height">
            <summary>
            说明：需要出图的图像高
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerImage.ImgFormat">
            <summary>
            说明：出图的图像类型（gif，jpg，png）。可输入枚举类型ImgFormat
            其说明可参见ImgFormat类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerSelectParam">
            <summary>
            该类表示在打开图层的前提下，查询并获取数据功能的参数类
            <example>
            <code>
            //初始化查询参数类
            CLayerSelectParam layerSelect = new CLayerSelectParam();
            layerSelect.PageCount = 0;//设置需要返回的结果页数
            layerSelect.WebSelectParam = new CWebSelectParam();//设置查询参数
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectParam.PageCount">
            <summary>
            说明：返回结果的页数，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectParam.WebSelectParam">
            <summary>
            说明：查询参数。具体参数请参见CWebSelectParam类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerCnt">
            <summary>
            该类表示在基于图层的开发方式下，对已经打开的图层进行查询操作后（LayerSelect）的返回值类,
            LayerSelect为过期函数，最好使用新功能函数（LayerSelectAndGetAtt）
            <example>
            <code>
            //初始化该类
            CGetLayerCnt getCount = new CGetLayerCnt();
            getCount.Count = new int[1][];//初始化元素：数组
            getCount.Count[0] = new int[1];
            getCount.Count[0][0] = 1;//初始化查询个数
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerCnt.Count">
            <summary>
            说明：进行查询操作后的返回值。返回各个图层的查询结果,
            此数组是二维数组，数组元素为数组，二维数组的元素的类型为int类型
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetAttSelectSet">
            <summary>
            该类表示在基于图层的开发方式下，对已经打开的图层进行查询操作后（LayerSelect），
            再进行获取属性结果（GetAttSelectSet）操作时候的返回值。此种查询需要调用两个功能函数，此为过期函数，最好使用新功能函数（LayerSelectAndGetAtt）,
            <example>
            <code>
            //说明：该类为查询结果的返回值，所以一般该类用于获取查询结果，不需要赋值。此例仅仅是说明该类的结构而非用法。
            //初始化查询结果获取属性类
            CGetAttSelectSet getSelSet = new CGetAttSelectSet();
            getSelSet.AttDS = new CAttDataSet[1];//初始化查询结果获取属性类的属性
            getSelSet.AttDS[0] = new CAttDataSet();//初始化数组元素为数据集
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAttSelectSet.AttDS">
            <summary>
            说明：多个数据集。每个数组元素为CAttDataSet类型。其说明可参见CAttDataSet类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGeomSelectSet">
            <summary>
            该类表示在基于图层的开发方式下，对已经打开的图层进行查询操作后（LayerSelect），再进行获取要素空间结果（GetGeomSelectSet）操作时候的返回值
            此种查询需要调用两个功能函数，此为过期函数，最好使用新功能函数（LayerSelectAndGetGeom）。具体函数用法请参见功能函数详细说明。
            <example>
            <code>
            //说明：该类为查询结果的返回值，所以一般该类用于获取查询结果，不需要赋值。此例仅仅是说明该类的结构而非用法。
             //初始化查询结果获取要素的空间信息类
             CGetGeomSelectSet getSelSet = new CGetGeomSelectSet();
             getSelSet.SfGeomDS = new SFGeomSet[1][];//初始化查询结果获取要素的空间信息类的属性
             getSelSet.SfGeomDS[0] = new SFGeomSet[1];//初始化数组元素为数组
             getSelSet.SfGeomDS[0][0] = new SFGeomSet();//初始化二维数组的元素为要素的空间信息集
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomSelectSet.SfGeomDS">
            <summary>
            说明：多个要素集合。此为二维数组，每个数组元素为SFGeomSet类型，二维元素的类型为SFGeomSet类型。其说明可参见SFGeomSet类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetFeatureSelectSet">
            <summary>
            该类表示在基于图层的开发方式下，对已经打开的图层进行查询操作后（LayerSelect），
            再进行获取要素结果（GetFeatureSelectSet）操作时候的返回值。此种查询需要调用两个功能函数，此为过期函数，
            最好使用新功能函数（LayerSelectAndGetFeature）
            <example>
            <code>
            //说明：该类为查询结果的返回值，所以一般该类用于获取查询结果，不需要赋值。此例仅仅是说明该类的结构而非用法。
            //初始化查询结果获取要素信息类
            CGetFeatureSelectSet getSelSet = new CGetFeatureSelectSet();
            getSelSet.SFeaDS = new SFeatureSet[1][];//初始化查询结果获取要素类的属性
            getSelSet.SFeaDS[0] = new SFeatureSet[1];//初始化数组元素为数组
            getSelSet.SFeaDS[0][0] = new SFeatureSet();//初始化二维数组的元素为要素集
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetFeatureSelectSet.SFeaDS">
            <summary>
            说明：多个要素集合。此为二维数组，每个数组元素为SFeatureSet[][] 类型，二维元素的类型为SFeatureSet类型。其说明可参见SFeatureSet类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerSelectAndGetAtt">
            <summary>
            该类表示在打开图层的前提下，查询并获取属性集合功能的返回值类
            <example>
            <code>
             //该类为返回值类，一般不需要赋值，此例仅仅说明该类的结构而非用法
             //初始化返回值类
             CLayerSelectAndGetAtt layerSelect1 = new CLayerSelectAndGetAtt();
             layerSelect1.AttDS = new CAttDataSet[1];//初始化记录集
             layerSelect1.Count = new int[1][];//初始化记录个数
             layerSelect1.Count[0] = new int[1];
             layerSelect1.Count[0][0] = 0;//初始化数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetAtt.Count">
            <summary>
            说明：查询后返回的记录个数。此为二维数组，二维数组元素的类型为int型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetAtt.AttDS">
            <summary>
            说明：查询后返回的记录集。数组元素的类型为CAttDataSet型，具体请参见CAttDataSet类详细说明
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerSelectAndGetGeom">
            <summary>
            该类表示在打开图层的前提下，查询并获取空间信息集合功能的返回值类
            <example>
            <code>
            //此类为返回值类，不需要赋值，此例仅仅说明其结构而非用法。
            //初始化返回值类
            CLayerSelectAndGetGeom layerSelect2 = new CLayerSelectAndGetGeom();
            layerSelect2.SfGeomDS = new SFGeomSet[1][];
            layerSelect2.SfGeomDS[0] = new SFGeomSet[1];//初始化数组元素
            layerSelect2.Count = new int[1][];
            layerSelect2.Count[0] = new int[1];
            layerSelect2.Count[0][0] = 1;//初始化数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetGeom.Count">
            <summary>
            说明：查询后返回的记录个数。此为二维数组，二维数组的元素类型为int型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetGeom.SfGeomDS">
            <summary>
            说明：查询结果返回的要素集合。此为二维数组，
            二维数组的元素类型为SFGeomSet类型。具体可参见SFGeomSet类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerSelectAndGetFeature">
            <summary>
            该类表示在打开图层的前提下，查询并获取要素集合功能的返回值类
            <example>
            <code>
            //此类为返回值类，不需要赋值，此例仅仅说明其结构而非用法。
            //初始化返回值类
            CLayerSelectAndGetFeature layerSelect2 = new CLayerSelectAndGetFeature();
            layerSelect2.SFeaDS = new SFeatureSet[1][];
            layerSelect2.SFeaDS[0] = new SFeatureSet[1];//初始化数组元素
            layerSelect2.Count = new int[1][];
            layerSelect2.Count[0] = new int[1];
            layerSelect2.Count[0][0] = 1;//初始化数组元素
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetFeature.Count">
            <summary>
            说明：查询后返回的记录个数。此为二维数组，二维数组的元素类型为int型
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerSelectAndGetFeature.SFeaDS">
            <summary>
            说明：查询结果返回的要素集合。此为二维数组，
            二维数组的元素类型为SFeatureSet类型。具体可参见SFeatureSet类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetEnumLayerStatus">
            <summary>
            该类为在基于图层的开发方式下，获取某个gdb下的所有图层的状态（可见，可查，不可见，可编辑）。此处某个gdb必须是打开的情况下,
            具体有关gdb的说明请参见CLayerAccessInfo类
            <example>
            <code>
            //该类主要用于获取某个已经打开的gdb下的所有已打开的图层的状态的返回值。一般用于获取而不是赋值。此例仅仅说明该类的结构而非用法。
            //初始化获取图层状态返回值类
            CGetEnumLayerStatus getStatus=new  CGetEnumLayerStatus();
            getStatus.LayerStatus=new EnumLayerStatus[1];//初始化状态数组
            getStatus.LayerStatus[0]=EnumLayerStatus.Visiable;//将状态赋值为可见
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetEnumLayerStatus.LayerStatus">
            <summary>
            说明：返回多个图层的状态（可见，可查，不可见，可编辑）。
            各个数组元素为EnumLayerStatus类型。
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerType">
            <summary>
            该类表示在图层开发方式下，且对已经打开的图层所作的操作
            （获取某个指定gdb下所有图层的状态）的返回值类。
            <example>
            <code>
            //该类为函数返回值类，不需要赋值，此例主要说明其类的结构，而非用法
            CGetLayerType dataSet=new CGetLayerType();//初始化返回值类	
            getLayerType.LayerType=new XClsType[1];
            getLayerType.LayerType[0]=XClsType.SFeatureCls;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerType.LayerType">
            <summary>
            说明：某指定gdb下所有图层的状态,
            每个数组元素为XClsType类型。其说明可参见XClsType类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CCopy6xTo7xSFcls">
            <summary>
            将6x数据拷贝到指定7x数据库功能的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCopy6xTo7xSFcls.Src6xFilePath">
            <summary>
            6x数据的文件路径
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCopy6xTo7xSFcls.Stype">
            <summary>
            6x数据的类型（点，线区）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCopy6xTo7xSFcls.GdbInfo">
            <summary>
            拷贝目标数据所在的gdb信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CCopy6xTo7xSFcls.SfclsName">
            <summary>
            拷贝目标数据的名称
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetLayerDisplayStyle">
            <summary>
            该类表示在打开图层的前提下，设置图像显示参数
            <example>
            <code>
            //初始化参数类
            CSetLayerDisplayStyle setDisplayStyle=new ();
            //初始化显示参数
            setDisplayStyle.DisplayStyle=new CDisplayStyle[1];
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerDisplayStyle.DisplayStyle">
            <summary>
            说明：各个gdb的显示参数。数组元素类型为CDisplayStyle类,
            具体赋值可参见CDisplayStyle类详细说明
            初始值：无  
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerBufferByFIDObjArr">
            <summary>
            该类表示在打开图层的前提下，根据传入的要素id数组进行缓冲分析功能的参数类
            <example>
            <code>
            //初始化缓冲分析类
            CLayerBufferByFIDObjArr buffer = new CLayerBufferByFIDObjArr();
            buffer.GetObjByID = new CLayerGetByID[1];//初始化数组
            buffer.TraceRadius = 0.0001;//设置trace半径
            buffer.BufferRadius = 0.0003;//设置缓冲半径
            buffer.ResultLayerName = "webgis";//设置生成的结果图层名称
            buffer.ResultLayerType = XClsType.SFeatureCls;//设置生成的结果图层类型为简单要素类
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerBufferByFIDObjArr.ResultLayerType">
            <summary>
            说明：生成结果图层的类型。可赋为枚举类型XClsType。目前支持简单要素类，
            要素类。参数传递具体参见XClsType类详细说明。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerBufferByFIDObjArr.TraceRadius">
            <summary>
            说明：trace半径（需要与缓冲半径联合使用，且比缓冲半径小一点）
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerBufferByFIDObjArr.BufferRadius">
            <summary>
            说明：缓冲半径。对空间信息进行缓冲区分析时必须设置的属性,
            设置值越大则缓冲结果包围的区域越大。同时与TraceRadius共同使用，
            其半径的具体含义可参见平台详细说明手册或者地理参考资料。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerBufferByFIDObjArr.ResultLayerName">
            <summary>
            说明：生成结果图层名。这里需要注意gdb中的图层名不可重名，
            如果重名则会提示缓冲区分析失败。
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerBufferByFIDObjArr.GetObjByID">
            <summary>
            说明：传入的要素id数组。可以对不同图层的要素进行缓冲分析。
            数组元素类型为CLayerGetByID类，具体赋值请参见CLayerGetByID类。
            返回值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetIsTopoEdit">
            <summary>
            该类表示设置是否为拓扑编辑状态的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetIsTopoEdit.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，
            按照数组的下标排列的顺序，从0开始。
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetIsTopoEdit.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetIsTopoEdit.IsTopoEdit">
            <summary>
            说明：是否为拓扑编辑状态
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetAllProjectParam">
            <summary>
            获取某个gdb下所有参考系的信息的返回值
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAllProjectParam.ProjectObjArr">
            <summary>
            所有参考系的信息，包括其id及参考系名称
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetEnumLayerStatusONFlex">
            <summary>
            该类表示设置一个gdb中所有的图层状态为不同的状态（相对于打开的图层而言）。参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusONFlex.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，
            按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusONFlex.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）。数组元素为string类型。
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetSingleLayerStatusONFlex">
            <summary>
            该类表示在图层开发方式下，设置单个图层的状态
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSingleLayerStatusONFlex.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSingleLayerStatusONFlex.LayerIndex">
            <summary>
            说明：需要操作的图层索引
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetSingleLayerStatusONFlex.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）。类型为string类型
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetAllEnumLayerStatusONFlex">
            <summary>
            该类表示设置一个gdb下所有图层的状态为相同的状态（针对打开的图层而言）。参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAllEnumLayerStatusONFlex.GdbIndex">
            <summary>
            /// <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetAllEnumLayerStatusONFlex.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）。类型为string类型
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetEnumLayerStatusONFlex">
            <summary>
            该类为在基于图层的开发方式下，获取某个gdb下的所有图层的状态（可见，可查，不可见，可编辑）。此处某个
            gdb必须是打开的情况下。具体有关gdb的说明请参见CLayerAccessInfo类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetEnumLayerStatusONFlex.LayerStatus">
            <summary>
            说明：返回多个图层的状态（可见，可查，不可见，可编辑）。各个数组元素为String类型。
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetLayerTypeONFlex">
            <summary>
            该类表示在图层开发方式下，且对已经打开的图层所作的操作（获取某个指定gdb下所有图层的状态）的返回值类。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetLayerTypeONFlex.LayerType">
            <summary>
            说明：某指定gdb下所有图层的状态。每个数组元素为string类型。其值为XClsType枚举类
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetGeomTypeONFlex">
            <summary>
            该类表示在基于图层开发方式下，在已经打开的gdb及其下的图层中，根据
            gdb的索引及图层索引获取该图层的几何约束形态（点，线，区）的返回值。
            <example>
            <code>
            //说明：该类为获取指定图层的几何约束形态功能的返回值，所以一般该类用于获取几何形态（点，线，区），不需要赋值。此例仅仅是说明该类的结构而非用法。
            //初始化该类
            CGetGeomTypeONFlex getGeomType=new CGetGeomTypeONFlex();
            getGeomType.GeomType=SFclsGeomType.Pnt;//几何形态赋值为点类型。
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetGeomTypeONFlex.GeomType">
            <summary>
            说明：返回指定图层的几何约束形态（点，线，区）。可赋值枚举类型：SFclsGeomType，
            具体参见SFclsGeomType类。该属性用法参见下述例子。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetLayerReduceRadius">
            <summary>
            该类表示在图层开发方式下，设置抽吸因子参数类。
            <example>
            <code>
            //初始化参数类
            CSetLayerReduceRadius setReduce=new CSetLayerReduceRadius();
            setReduce.ReduceRadius=0.001;//设置抽吸因子
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetLayerReduceRadius.ReduceRadius">
            <summary>
            说明：抽吸因子
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CFindAddressByKey">
            <summary>
            根据地址获取子结点地址编码数据的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByKey.GdbInfo">
            <summary>
            需要查询的地址库所在的gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByKey.LayerName">
            <summary>
            要查询的地址库名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByKey.Key">
            <summary>
            需要查询的条件：地址名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByKey.Grade">
            <summary>
            地址名称的级数
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CFindAddressByGrade">
            <summary>
            根据地址名称的级数获取子结点地址编码数据的参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGrade.GdbInfo">
            <summary>
            需要查询的地址库所在的gdb信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGrade.LayerName">
            <summary>
            需要查询的地址库名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGrade.Grade">
            <summary>
            地址名称的级数
            初始值：0
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CFindAddressByGeometry">
            <summary>
            根据空间信息获取地址编码数据参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGeometry.GdbInfo">
            <summary>
            需要查询的地址库所在的gdb信息
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGeometry.LayerName">
            <summary>
            需要查询的地址库名称
            初始值：无
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CFindAddressByGeometry.WebAddrParam">
            <summary>
            查询的空间信息及查询方式
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CLayerAttStatistic">
            <summary>
            图层属性统计
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerAttStatistic.GdbIndex">
            <summary>
            需要统计该要素属性的图层所在的gdb索引
            
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerAttStatistic.LayerIndex">
            <summary>
            该图层所在的图层索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerAttStatistic.SelectParm">
            <summary>
            查询参数信息
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CLayerAttStatistic.StatisticParam">
            <summary>
            属性统计分析参数
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CAddLayerField">
            <summary>
            添加属性字段参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddLayerField.FieldName">
            <summary>
            需要添加的字段名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddLayerField.FieldType">
            <summary>
            需要添加的字段的类型（需要与字段名称对应）
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddLayerField.GdbIndex">
            <summary>
            对于某个图层进行操作的该图层所在的gdb索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CAddLayerField.LayerIndex">
            <summary>
            该图层所在的图层索引
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CDelLayerField">
            <summary>
            删除属性字段参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelLayerField.FieldName">
            <summary>
            需要删除的属性字段名称
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelLayerField.GdbIndex">
            <summary>
            对于某个图层进行操作的该图层所在的gdb索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CDelLayerField.LayerIndex">
            <summary>
            该图层所在的图层索引
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateLayerField">
            <summary>
            更新属性结构参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateLayerField.AttStruct">
            <summary>
            需要修改后的属性结构
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateLayerField.GdbIndex">
            <summary>
            对于某个图层进行操作的该图层所在的gdb索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateLayerField.LayerIndex">
            <summary>
            该图层所在的图层索引
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CUpdateFeatureAttBySelect">
            <summary>
            统改要素的属性参数类
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateFeatureAttBySelect.GdbIndex">
            <summary>
            需要统该要素属性的图层所在的gdb索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateFeatureAttBySelect.LayerIndex">
            <summary>
            该图层所在的图层索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateFeatureAttBySelect.AttStructIndex">
            <summary>
            需要修改的属性字段的索引
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateFeatureAttBySelect.NewValue">
            <summary>
            修改后的属性值
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CUpdateFeatureAttBySelect.SelectParam">
            <summary>
            需要统改的要素满足的查询条件
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetEnumLayerStatusByIdx">
            <summary>
            该类表示设置一个gdb中某些图层状态（相对于打开的图层而言）
            <example>
            <code>
            //初始化参数类
            CSetEnumLayerStatusByIdx setStatus=new CSetEnumLayerStatusByIdx();
            setStatus.GdbIndex=0;//需要设置图层所在的gdb索引
            //设置图层索引
            setStatus.LayerIndex=new int[1];
            setStatus.LayerIndex[0]=0;
            //设置图层状态（与图层索引顺序对应）
            setStatus.LayerStatus=new EnumLayerStatus[1];
            setStatus.LayerStatus[0]=EnumLayerStatus.Visiable; 
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdx.LayerIndex">
            <summary>
            说明：需要操作的图层索引数组。数组元素为int型
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdx.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdx.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）（与图层索引对应）。数组元素类型为EnumLayerStatus。
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CSetEnumLayerStatusByIdxONFlex">
            <summary>
            该类表示设置一个gdb中某些图层状态（相对于打开的图层而言）。
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdxONFlex.LayerIndex">
            <summary>
            说明：需要操作的图层索引数组。数组元素为int型
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdxONFlex.GdbIndex">
            <summary>
            说明：gdb索引。在图层开发方式下，需要根据gdb 索引和图层索引从而定位到需要编辑的图层。gdb索引是在图层打开的前提下，按照数组的下标排列的顺序，从0开始
            初始值：0
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CSetEnumLayerStatusByIdxONFlex.LayerStatus">
            <summary>
            说明：图层的状态（可见，可查，不可见，可编辑）（与图层索引对应）。数组元素类型为string。
            可赋值枚举型EnumLayerStatus。具体参见EnumLayerStatus类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.BaseLib.CGetAllLayerBound">
            <summary>
            该类表示在打开图层的前提下，获取所有打开的图层的范围。
            <example>
            <code>
            //该类为返回值类，不需要赋值，此例仅仅说明其结构而非用法。
            CGetAllLayerBound rectArr=new CGetAllLayerBound();
            rectArr.Bound=new Rect[1][];
            rectArr.Bound[0]=new Rect[1];
            rectArr.Bound[0][0]=new Rect();
            </code>
            </example>
            </summary>
        </member>
        <member name="P:ZDIMS.BaseLib.CGetAllLayerBound.Bound">
            <summary>
            说明：返回值的范围数组。二维数组元素的类型为Rect，具体参数参见Rect类。
            初始值：无
            </summary>
        </member>
        <member name="T:ZDIMS.Map.DynamicTileLayer">
            <summary>
            动态裁图瓦片图层
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DynamicTileLayer.m_tileImgFormat">
            <summary>
            瓦片图格式 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DynamicTileLayer.m_hdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="F:ZDIMS.Map.DynamicTileLayer.distributedTileList">
            <summary>
            分布式瓦片集合
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.AddDistributedTile(ZDIMS.Map.DynamicDTLayerConfig)">
            <summary>
            添加分布式瓦片
            </summary>
            <param name="distributedTile">布式瓦片信息</param>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.RemoveDistributedTile(ZDIMS.Map.DynamicDTLayerConfig)">
            <summary>
            移除分布式瓦片
            </summary>
            <param name="distributedTile">布式瓦片信息</param>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.RemoveAll">
            <summary>
            移除所有分布式瓦片
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.Init">
            <summary>
            初始化地图 （该方法一般内部自动调用，一般不在外部通过对象调用 ）
            </summary>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.DynamicTileLayer.IsTileImgDownload(ZDIMS.Map.Tile,System.String@,System.Uri@)">
            <summary>
            判断是否下载瓦片图
            </summary>
            <param name="tile">瓦片对象</param>
            <param name="tileCacheKey">瓦片图缓存key</param>
            <param name="uri">下载的地址</param>
            <returns>下载返回“true”，否则返回“false”</returns>
        </member>
        <member name="P:ZDIMS.Map.DynamicTileLayer.DistributedTileList">
            <summary>
            子瓦片数据库（用于分布式显示瓦片数据） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicTileLayer.HdfName">
            <summary>
            瓦片数据库名称（*.HDF） 
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicTileLayer.EnableRealTimeUpdate">
            <summary>
            是否允许实时更新瓦片（默认值为“false”）
            </summary>
        </member>
        <member name="P:ZDIMS.Map.DynamicTileLayer.TileImgFormat">
            <summary>
            瓦片图格式 
            </summary>
        </member>
        <member name="T:ZDIMS.Interface.LayerOpenSuccEventHandler">
            <summary>
            图层打开成功事件handler
            </summary>
            <param name="layer">图层对象</param>
        </member>
        <member name="T:ZDIMS.Event.IMSRequestEvent">
            <summary>
            矢量地图请求服务器事件
            </summary>
        </member>
        <member name="M:ZDIMS.Event.IMSRequestEvent.#ctor(ZDIMS.Map.VectorLayerBase,System.Object,System.String)">
            <summary>
            请求服务器事件构造函数
            </summary>
            <param name="vector">矢量图层对象</param>
            <param name="sendObj">发送的内容对象</param>
            <param name="methodName">调用的方法名称</param>
        </member>
        <member name="P:ZDIMS.Event.IMSRequestEvent.MapVector">
            <summary>
            矢量图层对象
            </summary>
        </member>
        <member name="P:ZDIMS.Event.IMSRequestEvent.SendObj">
            <summary>
            发送的内容对象
            </summary>
        </member>
        <member name="P:ZDIMS.Event.IMSRequestEvent.MethodName">
            <summary>
            调用的方法名称
            </summary>
        </member>
        <member name="T:ZDIMS.Event.IMSRequestEventHandler">
            <summary>
            表示处理IMSRequestBegin、IMSRequestEnd、IMSRequestComplete等事件的方法。
            </summary>
            <param name="e">矢量地图请求服务器事件数据源</param>
        </member>
        <member name="T:ZDIMS.Map.VectorLayer">
            <summary>
            矢量图层控件
            </summary>
        </member>
        <member name="F:ZDIMS.Map.VectorLayer.m_isLoading">
            <summary>
            加载中标志位 
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.#ctor">
            <summary>
            矢量图层控件构造函数
            </summary>
            <remarks>
            下载示例代码<br/>
            <a href="http://www.lbsmap.net/imsdownload/VectorLayer_Demo.rar">VectorLayer_Demo</a>
            </remarks>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LoadLayerCallback(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            加载图层回调函数
            </summary>
            <param name="obj">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.UpdateMapInfo(System.Object,System.Net.UploadStringCompletedEventArgs)">
            <summary>
            更新地图容器范围
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetCOpenLayerObj">
            <summary>
            返回包装的COpenLayer对象
            </summary>
            <returns>COpenLayer对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.Init">
            <summary>
            初始化矢量图层
            </summary>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LoadLayer(ZDIMS.BaseLib.COpenLayer,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            加载图层 
            </summary>
            <param name="obj">加载的HDF图层</param>
            <param name="callBack">返回结果的回调方法</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnLoadLayer(System.Net.UploadStringCompletedEventArgs,System.Boolean)">
            <summary>
            加载矢量图层 
            </summary>
            <param name="e">事件回调内容</param>
            <param name="refreshmap">是否刷新地图标志</param>
            <returns>解析后的结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetBound(System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取所有图层的最大逻辑范围
            </summary>
            <param name="callback">返回结果的回调方法</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetBound(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取所有图层逻辑范围
            </summary>
            <param name="e">事件回调内容</param>
            <returns>解析后的结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetLayerImage(ZDIMS.BaseLib.CGetLayerImage,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            根据详细参数获取图像
            </summary>
            <param name="obj">图像参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetLayerImage(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetLayerImage操作结果
            </summary>
            <param name="e">GetLayerImage操作完成事件</param>
            <returns>GetLayerImage结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetImage(ZDIMS.Util.RectBound,System.Double,System.Double)">
            <summary>
            根据范围和图像高宽生成图像
            </summary>
            <param name="rectView">矩形范围</param>
            <param name="width">图像宽（像素）</param>
            <param name="height">图像高（像素）</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.Clone(System.Boolean,System.Boolean)">
            <summary>
            拷贝一个本图层的副本
            </summary>
            <param name="enableCopySysUIData">是否拷贝图层数据</param>
            <param name="enableCopyUserCfgData">是否拷贝图层配置信息</param>
            <returns>返回该图层副本对象</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetEnumLayerStatus(ZDIMS.BaseLib.CSetEnumLayerStatus,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置某个GDB下所有图层的状态
            </summary>
            <param name="enumLayerStatus">GDB下所有图层的状态对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetEnumLayerStatus(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetEnumLayerStatus操作结果
            </summary>
            <param name="e">SetEnumLayerStatus操作完成事件</param>
            <returns>SetEnumLayerStatus操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetEnumLayerStatusByIdx(ZDIMS.BaseLib.CSetEnumLayerStatusByIdx,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置某个GDB下某几个图层的状态
            </summary>
            <param name="enumLayerStatus">GDB下某几个图层的状态对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetEnumLayerStatusByIdx(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetEnumLayerStatusByIdx操作结果
            </summary>
            <param name="e">SetEnumLayerStatusByIdx操作完成事件</param>
            <returns>SetEnumLayerStatusByIdx操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetAllEnumLayerStatus(ZDIMS.BaseLib.CSetAllEnumLayerStatus,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新某个GDB下所有图层的状态为某一相同状态
            </summary>
            <param name="enumLayerStatus">某个GDB下所有图层的状态</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetAllEnumLayerStatus(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetAllEnumLayerStatus操作结果
            </summary>
            <param name="e">SetAllEnumLayerStatus操作完成事件</param>
            <returns>SetAllEnumLayerStatus操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetSingleLayerStatus(System.Int32,System.Int32,ZDIMS.BaseLib.EnumLayerStatus,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新某个GDB下某个图层的状态
            </summary>
            <param name="gdbIndex">GDB索引</param>
            <param name="layerIndex">图层索引</param>
            <param name="state">图层状态</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetSingleLayerStatus(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetSingleLayerStatus操作结果
            </summary>
            <param name="e">SetSingleLayerStatus操作完成事件</param>
            <returns>SetSingleLayerStatus操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LayerSelectAndGetAtt(ZDIMS.BaseLib.CLayerSelectParam,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            查询要素属性信息 
            </summary>
            <param name="layerSelectParamObj">查询参数对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnLayerSelectAndGetAtt(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取LayerSelectAndGetAtt操作结果
            </summary>
            <param name="e">LayerSelectAndGetAtt操作完成事件</param>
            <returns>LayerSelectAndGetAtt操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LayerSelectAndGetGeom(ZDIMS.BaseLib.CLayerSelectParam,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            查询要素空间信息 
            </summary>
            <param name="layerSelectParamObj">查询参数对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnLayerSelectAndGetGeom(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取LayerSelectAndGetGeom操作结果
            </summary>
            <param name="e">LayerSelectAndGetGeom操作完成事件</param>
            <returns>LayerSelectAndGetGeom操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LayerSelectAndGetFeature(ZDIMS.BaseLib.CLayerSelectParam,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            查询要素属性信息和空间信息
            </summary>
            <param name="layerSelectParamObj">查询参数对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnLayerSelectAndGetFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取LayerSelectAndGetFeature操作结果
            </summary>
            <param name="e">LayerSelectAndGetFeature操作完成事件</param>
            <returns>LayerSelectAndGetFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetFeatureByFID(ZDIMS.BaseLib.CLayerGetByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            根据要素ID获取要素信息
            </summary>
            <param name="obj">要素参数信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetFeatureByFID(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetFeatureByFID操作结果
            </summary>
            <param name="e">GetFeatureByFID操作完成事件</param>
            <returns>GetFeatureByFID操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetGeomByFID(ZDIMS.BaseLib.CLayerGetByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            根据要素ID获取要素空间信息
            </summary>
            <param name="obj">要素ID等信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetGeomByFID(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetGeomByFID操作结果
            </summary>
            <param name="e">GetGeomByFID操作完成事件</param>
            <returns>GetGeomByFID操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetAttByFID(ZDIMS.BaseLib.CLayerGetByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            根据要素ID获取要素属性信息
            </summary>
            <param name="obj">要素ID等信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetAttByFID(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetAttByFID操作结果
            </summary>
            <param name="e">GetAttByFID操作完成事件</param>
            <returns>GetAttByFID操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetLayerDisplayCondition(ZDIMS.BaseLib.CSetLayerDisplayCondition,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置图层显示条件
            </summary>
            <param name="obj">图层显示条件</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetLayerDisplayCondition(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetLayerDisplayCondition操作结果
            </summary>
            <param name="e">SetLayerDisplayCondition操作完成事件</param>
            <returns>SetLayerDisplayCondition操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetGraphicInfo(ZDIMS.BaseLib.CSetGraphicInfo,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            根据要素id设置要素图形参数
            </summary>
            <param name="obj">要素及要素图形参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetGraphicInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetGraphicInfo操作结果
            </summary>
            <param name="e">SetGraphicInfo操作完成事件</param>
            <returns>SetGraphicInfo操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetPageSize(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置查询时每次返回的结果集每页的记录个数
            </summary>
            <param name="pageSize">结果集每页的记录个数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetPageSize(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetPageSize操作结果
            </summary>
            <param name="e">SetPageSize操作完成事件</param>
            <returns>SetPageSize操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetPageSize">
            <summary>
            获取每页记录数
            </summary>
            <returns>每页记录数</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetLayerDisplayStyle(ZDIMS.BaseLib.CSetLayerDisplayStyle,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置图层显示样式
            </summary>
            <param name="obj">图层显示样式</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetLayerDisplayStyle(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetLayerDisplayStyle操作结果
            </summary>
            <param name="e">SetLayerDisplayStyle操作完成事件</param>
            <returns>SetLayerDisplayStyle操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.AppendFeatureList(ZDIMS.BaseLib.CAppendFeatureList,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            添加一组要素
            </summary>
            <param name="obj">要素列表</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnAppendFeatureList(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取AppendFeatureList操作结果
            </summary>
            <param name="e">AppendFeatureList操作完成事件</param>
            <returns>AppendFeatureList操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.AppendFeature(ZDIMS.BaseLib.CAppendFeature,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            添加一个要素
            </summary>
            <param name="obj">要素对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnAppendFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取AppendFeature操作结果
            </summary>
            <param name="e">AppendFeature操作完成事件</param>
            <returns>AppendFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.DeleteFeature(ZDIMS.BaseLib.CLayerGetByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            删除一个要素
            </summary>
            <param name="obj">要删除的要素</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnDeleteFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取DeleteFeature操作结果
            </summary>
            <param name="e">DeleteFeature操作完成事件</param>
            <returns>DeleteFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.UpdateFeature(ZDIMS.BaseLib.CAppendFeature,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新要素
            </summary>
            <param name="obj">要更新的要素对象</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnUpdateFeature(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取UpdateFeature操作结果
            </summary>
            <param name="e">UpdateFeature操作完成事件</param>
            <returns>UpdateFeature操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.UpdateLayerIndex(ZDIMS.BaseLib.CUpdateLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            更新图层顺序
            </summary>
            <param name="obj">新的图层顺序</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnUpdateLayerIndex(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取UpdateLayerIndex操作结果
            </summary>
            <param name="e">UpdateLayerIndex操作完成事件</param>
            <returns>UpdateLayerIndex操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetScaleInfo(ZDIMS.BaseLib.CSetScaleInfo,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置图层的显示比率
            </summary>
            <param name="obj">图层显示比率</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetScaleInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetScaleInfo操作结果
            </summary>
            <param name="e">SetScaleInfo操作完成事件</param>
            <returns>SetScaleInfo操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetGraphicInfo(ZDIMS.BaseLib.CLayerGetByID,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取要素图形参数
            </summary>
            <param name="obj">要素ID等信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetGraphicInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetGraphicInfo操作结果
            </summary>
            <param name="e">GetGraphicInfo操作完成事件</param>
            <returns>GetGraphicInfo操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetLayerAttStruct(ZDIMS.BaseLib.CSetLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取图层属性结果
            </summary>
            <param name="obj">图层索引信息</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetLayerAttStruct(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetLayerAttStruct操作结果
            </summary>
            <param name="e">GetLayerAttStruct操作完成事件</param>
            <returns>GetLayerAttStruct操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetEnumLayerStatus(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个GDB下所有图层的状态
            </summary>
            <param name="gdbIndex">GDB索引</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetEnumLayerStatus(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetEnumLayerStatus操作结果
            </summary>
            <param name="e">GetEnumLayerStatus操作完成事件</param>
            <returns>GetEnumLayerStatus操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetLayerType(System.Int32,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个GDB下所有图层的类型
            </summary>
            <param name="gdbIndex"></param>
            <param name="callback"></param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetLayerType(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetLayerType操作结果
            </summary>
            <param name="e">GetLayerType操作完成事件</param>
            <returns>GetLayerType操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetSingleLayerBound(ZDIMS.BaseLib.CSetLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个图层逻辑范围
            </summary>
            <param name="obj">图层索引等信息</param>
            <param name="callback">结果处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetSingleLayerBound(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetSingleLayerBound操作结果
            </summary>
            <param name="e">GetSingleLayerBound操作完成事件</param>
            <returns>GetSingleLayerBound操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetGeomType(ZDIMS.BaseLib.CSetLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取某个图层几何类型
            </summary>
            <param name="obj">图层索引等信息</param>
            <param name="callback">结果处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetGeomType(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetGeomType操作结果
            </summary>
            <param name="e">GetGeomType操作完成事件</param>
            <returns>GetGeomType操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetScaleInfo(ZDIMS.BaseLib.CSetLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取当前图层的显示比率
            </summary>
            <param name="obj">图层索引等信息</param>
            <param name="callback">结果处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetScaleInfo(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetScaleInfo操作结果
            </summary>
            <param name="e">GetScaleInfo操作完成事件</param>
            <returns>GetScaleInfo操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.ReBuildRegByLayer(ZDIMS.BaseLib.CReBuildRegByLayer,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            局部拓扑重建
            </summary>
            <param name="obj">拓扑重建参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnReBuildRegByLayer(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取ReBuildRegByLayer操作结果
            </summary>
            <param name="e">ReBuildRegByLayer操作完成事件</param>
            <returns>ReBuildRegByLayer操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.UnionRegionLayer(ZDIMS.BaseLib.CUnionRegionLayer,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            局部合并区
            </summary>
            <param name="obj">局部合并的区参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnUnionRegionLayer(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取UnionRegionLayer操作结果
            </summary>
            <param name="e">UnionRegionLayer操作完成事件</param>
            <returns>UnionRegionLayer操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetSRSFromSourceLayer(ZDIMS.BaseLib.CSetLayerIndex,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置动态投影空间参照系来源图层
            </summary>
            <param name="obj">空间参照系来源图层参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetSRSFromSourceLayer(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetSRSFromSourceLayer操作结果
            </summary>
            <param name="e">SetSRSFromSourceLayer操作完成事件</param>
            <returns>SetSRSFromSourceLayer操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetLayerVacuateRadius(ZDIMS.BaseLib.CSetLayerReduceRadius,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置抽稀半径
            </summary>
            <param name="obj">抽稀参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetLayerVacuateRadius(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetLayerVacuateRadius操作结果
            </summary>
            <param name="e">SetLayerVacuateRadius操作完成事件</param>
            <returns>SetLayerVacuateRadius操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.SetIsTopoEdit(ZDIMS.BaseLib.CSetIsTopoEdit,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            设置某个图层是否允许拓扑编辑
            </summary>
            <param name="obj">图层拓扑编辑标志</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnSetIsTopoEdit(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取SetIsTopoEdit操作结果
            </summary>
            <param name="e">SetIsTopoEdit操作完成事件</param>
            <returns>SetIsTopoEdit操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.LayerBufferByFIDObjArr(ZDIMS.BaseLib.CLayerBufferByFIDObjArr,System.Net.UploadStringCompletedEventHandler)">
            <summary>
            对多个要素进行缓冲区分析
            </summary>
            <param name="obj">要素列表等参数</param>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnLayerBufferByFIDObjArr(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取LayerBufferByFIDObjArr操作结果
            </summary>
            <param name="e">LayerBufferByFIDObjArr操作完成事件</param>
            <returns>LayerBufferByFIDObjArr操作结果</returns>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.GetAllLayerBound(System.Net.UploadStringCompletedEventHandler)">
            <summary>
            获取所有图层的逻辑范围
            </summary>
            <param name="callback">操作完成事件处理函数</param>
        </member>
        <member name="M:ZDIMS.Map.VectorLayer.OnGetAllLayerBound(System.Net.UploadStringCompletedEventArgs)">
            <summary>
            获取GetAllLayerBound操作结果
            </summary>
            <param name="e">GetAllLayerBound操作完成事件</param>
            <returns>GetAllLayerBound操作结果</returns>
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.ServiceType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.LayerStatus">
            <summary>
            图层状态数组
            </summary>        
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.LayerObj">
            <summary>
            要叠加打开的图层信息
            </summary>   
            <example>
            该示例显示怎样使用该控件
            <code>
                //包装矢量图层控件要显示的图层
                COpenLayer openObj = new COpenLayer();
                CLayerAccessInfo layerAccessInfo = new CLayerAccessInfo();
                CGdbInfo gdbInfo = new CGdbInfo();
                gdbInfo.GDBName = "world";
                layerAccessInfo.GdbInfo = gdbInfo;
                CLayerInfo layerinfo = new CLayerInfo();
                layerinfo.LayerDataName = "中心线";//"水系.wp";//
                layerinfo.LayerType = XClsType.SFeatureCls;
                layerAccessInfo.LayerInfoList = new CLayerInfo[1] { layerinfo };
                openObj.LayerAccessInfo = new CLayerAccessInfo[1] { layerAccessInfo };
                vectorLayerObj.LayerObj = openObj;
            </code>
            </example>
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.ActiveGdbIndex">
            <summary>
            激活的GDB索引
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.ActiveLayerAccessInfo">
            <summary>
            激活的图层访问信息
            </summary>
        </member>
        <member name="P:ZDIMS.Map.VectorLayer.ActiveLayerType">
            <summary>
            激活的图层的类型
            </summary>
        </member>
        <member name="T:ZDIMS.Map.LayerItem">
            <summary>
            矢量图层GDB数据源中图层配置信息
            </summary>
        </member>
        <member name="M:ZDIMS.Map.LayerItem.#ctor">
            <summary>
            矢量图层GDB数据源中图层配置信息的构造函数
            </summary>
            <example>
            该示例显示怎样使用该控件
            <code>
            <!--<my:IMSMap Name="iMSMap1" XMinMap="114.125686114315" XMaxMap="114.500788705197" LevelNum="7" YMaxMap="30.7085740673183" YMinMap="30.4582609083728">
                <my:VectorLayer ServerAddress="http://127.0.0.1/relayhandlersite/relayhandler.ashx" Canvas.Left="225" Canvas.Top="76" Height="217" Name="vectorLayer1" Width="357">
                        <my:GDBItem Canvas.Left="54" Canvas.Top="33" Height="147" Name="gDBItem1" Width="256" GDBName="world" GDBServerName="MapGisLocal">
                                <my:LayerItem Canvas.Left="74" Canvas.Top="55" Height="50" Name="layerItem1" Width="50" LayerName="行政区.wp" />
                                <my:LayerItem Canvas.Left="42" Canvas.Top="25" Height="50" Name="layerItem2" Width="50" LayerName="中心线" />
                                <my:LayerItem Canvas.Left="171" Canvas.Top="58" Height="50" Name="layerItem3" Width="50" LayerName="水系.wp" />
                        </my:GDBItem>
                </my:VectorLayer>
            </my:IMSMap>-->
            </code>
            </example>
        </member>
        <member name="M:ZDIMS.Map.LayerItem.GetCLayerInfoObj">
            <summary>
            返回包装的CLayerInfo对象
            </summary>
            <returns>CLayerInfo对象</returns>
        </member>
        <member name="P:ZDIMS.Map.LayerItem.LayerName">
            <summary>
            图层名称
            </summary>
        </member>
        <member name="P:ZDIMS.Map.LayerItem.LayerType">
            <summary>
            图层类型
            </summary>
        </member>
        <member name="T:ZDIMS.Drawing.IMSCircle">
            <summary>
            点图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.#ctor(ZDIMS.Interface.CoordinateType)">
            <summary>
            点图形构造函数
            </summary>
            <param name="coordinateType">坐标类型（默认是屏幕坐标，如果是逻辑坐标，在绘图时会根据地图容器的LogicToScreen方法转换坐标）</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Draw">
            <summary>
            绘制图形(设置完圆心坐标和半径后绘制图形)
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Draw(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            根据坐标串绘制图形(数组长度应该为2，第一个为圆心坐标、第二个为终止坐标)
            </summary>
            <param name="pntArr">绘制图形的坐标数组</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Clear">
            <summary>
            清除绘制图形
            </summary>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.AddPoint(System.Windows.Point)">
            <summary>
            添加点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.UpdateEndPnt(System.Windows.Point)">
            <summary>
            更新末尾点(一般用于徒手绘制图形)
            </summary>
            <param name="pnt">点坐标</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseLeftButtonDown1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseMove1(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark1上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseLeftButtonUp1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark1上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseLeftButtonDown2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标按下
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseMove2(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mark2上鼠标移动
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="M:ZDIMS.Drawing.IMSCircle.Edit_MouseLeftButtonUp2(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mark2上鼠标弹起
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件数据源</param>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.Points">
            <summary>
            绘图坐标数组（第0项保存的圆心坐标，第1项存的圆上一点坐标）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.DrawingType">
            <summary>
            绘图类型
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.CenX">
            <summary>
            圆心x轴坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.CenY">
            <summary>
            圆心y轴坐标
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.Radius">
            <summary>
            半径（注意：坐标系设为Logic时，半径就被认为是逻辑长度而非像素长度）
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.RadiusEx">
            <summary>
            固定像素半径(在坐标系为Logic时，需要固定像素长度半径时有效，RadiusEx与Radius是互斥的只能一个有效，值等于0表示无效)
            </summary>
        </member>
        <member name="P:ZDIMS.Drawing.IMSCircle.Fill">
            <summary>
            内部填充绘制方式（主要是颜色、透明度、渐变等）
            </summary>
        </member>
    </members>
</doc>
